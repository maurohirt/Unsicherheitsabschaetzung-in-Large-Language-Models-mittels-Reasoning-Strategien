[
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 - 5 = 1 (left: 4 1 10)\n",
                    "10 - 6 = 4 (left: 4 4 5)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n"
                ],
                "values": [
                    0.932714606352666,
                    0.9840412708968044,
                    0.9673433915427767,
                    0.9356284030691172,
                    0.9485249915794275
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 4 5)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n",
                    "6 - 5 = 1 (left: 4 1 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 4 4 5)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n",
                    "6 - 5 = 1 (left: 4 1 10)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n24 - 10 = 14 (left: 5 14)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n24 / 10 = 2.4 (left: 2.4 5)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n10 - 5 = 5 (left: 5 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n24 - 5 = 19 (left: 10 19)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "6 - 5 = 1 (left: 4 1 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "6 - 5 = 1 (left: 4 1 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "6 - 5 = 1 (left: 4 1 10)\n4 * 1 = 4 (left: 4 10)\n"
                ],
                "values": [
                    0.9858041791209484,
                    0.9959597830358525,
                    0.9640464457254558,
                    0.9673401141960086,
                    0.9553965099809693,
                    0.9246446429474998,
                    0.9390635776724154,
                    0.9512514845788649,
                    0.999804223552214,
                    0.9971219089662764,
                    0.9360280621229543
                ],
                "select_new_ys": [
                    "6 - 5 = 1 (left: 4 1 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "6 - 5 = 1 (left: 4 1 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "10 - 6 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n24 / 10 = 2.4 (left: 2.4 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 10",
                "ys": [
                    "6 - 5 = 1 (left: 4 1 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "6 - 5 = 1 (left: 4 1 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "10 - 6 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n24 / 10 = 2.4 (left: 2.4 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 5 6 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 900,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 1501,
            "prompt_tokens": 20592,
            "cost": 0.00721094
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n"
                ],
                "values": [
                    0.9896564852330992
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 4 7",
                "ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n3 - 1 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 + 2 = 3 (left: 3 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 + 3 = 4 (left: 2 4)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n"
                ],
                "values": [
                    0.9430859499312425,
                    0.9385730609865226,
                    0.9799255607192039,
                    0.9660110552863279,
                    0.9347596627609946
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 + 3 = 4 (left: 2 4)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n3 - 1 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 + 2 = 3 (left: 3 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 4 7",
                "ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n1 * 2 = 2 (left: 2 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 + 3 = 4 (left: 2 4)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n3 - 1 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 + 2 = 3 (left: 3 3)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 4 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 901,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 2384,
            "prompt_tokens": 33159,
            "cost": 0.01157533
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 2 3 11)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n",
                    "8 * 2 = 16 (left: 5 11 16)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n"
                ],
                "values": [
                    0.9566300770536464,
                    0.9356474740689726,
                    0.9381956624922134,
                    0.9554658953900372
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 2 3 11)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n",
                    "8 * 2 = 16 (left: 5 11 16)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 11",
                "ys": [
                    "8 - 5 = 3 (left: 2 3 11)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n",
                    "8 * 2 = 16 (left: 5 11 16)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n3 * 2 = 6 (left: 6 11)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n3 + 2 = 5 (left: 5 11)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n2 * 3 = 6 (left: 6 11)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n3 * 5 = 15 (left: 2 15)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n3 - 2 = 1 (left: 1 5)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n3 + 5 = 8 (left: 2 8)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n5 - 2 = 3 (left: 3 3)\n",
                    "8 * 2 = 16 (left: 5 11 16)\n16 - 11 = 5 (left: 5 5)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 8 = 1 (left: 1 5)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n5 + 9 = 14 (left: 8 14)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n"
                ],
                "values": [
                    0.9966581505958716,
                    0.9836622838002989,
                    0.9253926305103349,
                    0.8993904292642221,
                    0.9568194881363882,
                    0.9381402828199832,
                    0.9139653906515729,
                    0.8705490563364605,
                    0.9162840322995855,
                    0.9481757112204611,
                    0.9999829379862599,
                    0.9989312757667416,
                    0.9673810094137951,
                    0.9221187890763708,
                    0.9300069077515362
                ],
                "select_new_ys": [
                    "8 * 2 = 16 (left: 5 11 16)\n16 - 11 = 5 (left: 5 5)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 8 = 1 (left: 1 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 11",
                "ys": [
                    "8 * 2 = 16 (left: 5 11 16)\n16 - 11 = 5 (left: 5 5)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 8 = 1 (left: 1 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 8 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 902,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 3759,
            "prompt_tokens": 52794,
            "cost": 0.01838928
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 4 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n"
                ],
                "values": [
                    0.9996089700805139
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 4 13",
                "ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n"
                ],
                "values": [
                    0.9984284872487639,
                    0.9940817839053675
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 4 13",
                "ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 4 13",
                "ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 4) * (4 - 3) = 24"
                ],
                "values": [
                    0.001
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 4) * (4 - 3) = 24"
                ]
            }
        ],
        "idx": 903,
        "ys": [
            "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 4) * (4 - 3) = 24"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 4359,
            "prompt_tokens": 60985,
            "cost": 0.02126085
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 7 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n"
                ],
                "values": [
                    0.9772649123030254,
                    0.9444606258186861,
                    0.9974984145461507
                ],
                "select_new_ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 9",
                "ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n"
                ],
                "new_ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n8 / 3 \u2248 2.6667 (left: 2.6667 7)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n"
                ],
                "values": [
                    0.9811493767206151,
                    0.965011322864428,
                    0.9312528120495102,
                    0.9981065031620484,
                    0.8633279924610745,
                    0.9938657855643523,
                    0.9384223885061799
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 9",
                "ys": [
                    "9 - 6 = 3 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 7 8 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 904,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 5637,
            "prompt_tokens": 78991,
            "cost": 0.02752827
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 11 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "values": [
                    0.9889405626988054,
                    0.9340241291819612
                ],
                "select_new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 11 11 13",
                "ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n2 * 1 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n1 * 2 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n11 + 1 = 12 (left: 2 12)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n13 - 10 = 3 (left: 3 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n"
                ],
                "values": [
                    0.9896135808409298,
                    0.9279303663580326,
                    0.9567431039313389,
                    0.9637744988814207,
                    0.9235288919964153,
                    0.9880290389329454,
                    0.9450443301721398,
                    0.9715554487652203
                ],
                "select_new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n1 * 2 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 11 11 13",
                "ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n1 * 2 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n2 * 11 = 22 (left: 1 22)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 11 11 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 905,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 6685,
            "prompt_tokens": 93908,
            "cost": 0.03270866
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n"
                ],
                "values": [
                    0.9460693533324994,
                    0.9889519086122431,
                    0.9814164536950862
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 1 8)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 8 10 11",
                "ys": [
                    "11 - 10 = 1 (left: 1 1 8)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n"
                ],
                "new_ys": [
                    "11 - 10 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n8 * 1 = 8 (left: 1 8)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n8 - 1 = 7 (left: 1 7)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 1 9)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n10 / (3 - 1) = 5 (left: 5)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n10 - 1 = 9 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n9 + 11 = 20 (left: 8 20)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n9 + 8 = 17 (left: 11 17)\n"
                ],
                "values": [
                    0.9627994489184282,
                    0.8813210477688505,
                    0.9951114522921541,
                    0.931481342184997,
                    0.9822886632123381,
                    0.9882313729287193,
                    0.8104083165064279,
                    0.9454113660742255,
                    0.9996109236894847,
                    0.9677031221536575,
                    0.8790636665152964,
                    0.9168467257870991
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 1 9)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 8 10 11",
                "ys": [
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 1 9)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 8 10 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 906,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 7870,
            "prompt_tokens": 110953,
            "cost": 0.03861431
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n",
                    "9 - 3 = 6 (left: 2 6 6)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n"
                ],
                "values": [
                    0.9931545525677026,
                    0.9218061437347559,
                    0.9309008494372596,
                    0.9371709101695661,
                    0.9243735289878241
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n",
                    "9 - 3 = 6 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 9",
                "ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n",
                    "9 - 3 = 6 (left: 2 6 6)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n18 / 9 = 2 (left: 2 2)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n2 * 9 = 18 (left: 18 18)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n18 / 2 = 9 (left: 9 9)\n",
                    "9 - 3 = 6 (left: 2 6 6)\n6 / 2 = 3 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 2 6 6)\n6 - 2 = 4 (left: 4 6)\n",
                    "9 - 3 = 6 (left: 2 6 6)\n6 * 2 = 12 (left: 6 12)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 9 12)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n4 + 3 = 7 (left: 7 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n"
                ],
                "values": [
                    0.9697236717145931,
                    0.9973510020047885,
                    0.9993321222673985,
                    0.92789772499948,
                    0.9922644928331192,
                    0.952302912754016,
                    0.9661016550351751,
                    0.9453872614536442,
                    0.9972909236294016,
                    0.9309870127298088,
                    0.9309073757695313,
                    0.8996424942827065,
                    0.9794572904361607,
                    0.9561418114663053,
                    0.9793800092514455,
                    0.9596195544492959
                ],
                "select_new_ys": [
                    "6 * 3 = 18 (left: 2 9 18)\n18 / 9 = 2 (left: 2 2)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n18 / 2 = 9 (left: 9 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 9",
                "ys": [
                    "6 * 3 = 18 (left: 2 9 18)\n18 / 9 = 2 (left: 2 2)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "6 * 3 = 18 (left: 2 9 18)\n18 / 2 = 9 (left: 9 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 6 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 907,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 9365,
            "prompt_tokens": 132675,
            "cost": 0.046123750000000005
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n"
                ],
                "values": [
                    0.999419803920442,
                    0.9408921719545711
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 5 9",
                "ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n4 - 1 = 3 (left: 3 3)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n3 - 1 = 2 (left: 2 4)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n4 - 3 = 1 (left: 1 1)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 9 12)\n"
                ],
                "values": [
                    0.9233709810357047,
                    0.9288914084683894,
                    0.9743881694341425,
                    0.9985371967424016,
                    0.9949899719471691,
                    0.9318687074899169
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n4 - 3 = 1 (left: 1 1)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 9 12)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n3 - 1 = 2 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 5 9",
                "ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n4 - 3 = 1 (left: 1 1)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 9 12)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n3 - 1 = 2 (left: 2 4)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 5 9",
                "ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (5 - 1) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (5 - 1) = 24"
                ]
            }
        ],
        "idx": 908,
        "ys": [
            "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (5 - 1) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 10493,
            "prompt_tokens": 148990,
            "cost": 0.0517696
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n"
                ],
                "values": [
                    0.9989493619574654,
                    0.9443362377331096,
                    0.9354897474896162,
                    0.9253195050476513,
                    0.9625318127798717
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n3 * 5 = 15 (left: 3 15)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n3 * 3 = 9 (left: 5 9)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n7 + 12 = 19 (left: 9 19)\n"
                ],
                "values": [
                    0.969192207288592,
                    0.8911662080807073,
                    0.9634321467459388,
                    0.885539782537556,
                    0.9591386744930861,
                    0.9390153100006028,
                    0.945593439120552,
                    0.9543879268463057,
                    0.9073248311089019,
                    0.9963037414722477,
                    0.9516534515785574,
                    0.9992303048915243,
                    0.9351200109796983,
                    0.995720033739378,
                    0.9409479616457745,
                    0.9860810255514653,
                    0.9629723698587203,
                    0.924446852843827
                ],
                "select_new_ys": [
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 7 12",
                "ys": [
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "3 * 3 = 9 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 7 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 909,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 11944,
            "prompt_tokens": 169385,
            "cost": 0.05887235
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n"
                ],
                "values": [
                    0.9979683330527446,
                    0.976472725981702
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 9",
                "ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n"
                ],
                "values": [
                    0.9657323613046561,
                    0.9974165538953256,
                    0.9424052757567072,
                    0.9582312873942652
                ],
                "select_new_ys": [
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 9",
                "ys": [
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 5 7 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 910,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 12934,
            "prompt_tokens": 182913,
            "cost": 0.06361391
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n"
                ],
                "values": [
                    0.9982176646936263,
                    0.9527080579516908,
                    0.9628559053498781,
                    0.9465443253895977
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "13 - 8 = 5 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "13 - 8 = 5 (left: 1 2 5)\n5 * 2 = 10 (left: 1 10)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n11 - 8 = 3 (left: 1 3)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n11 - 1 = 10 (left: 8 10)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n8 * 2 = 16 (left: 12 16)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n16 - 13 = 3 (left: 1 3)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n1 * 13 = 13 (left: 13 16)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n1 * 16 = 16 (left: 13 16)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n16 - 1 = 15 (left: 13 15)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n13 - 1 = 12 (left: 12 16)\n"
                ],
                "values": [
                    0.9667079271140909,
                    0.9518102106229851,
                    0.943262924654788,
                    0.9999111137501938,
                    0.9973348735141592,
                    0.9997564804250648,
                    0.9486202503256702,
                    0.9215561031206331,
                    0.9999592756793516,
                    0.9153553546645222,
                    0.9356231425842171,
                    0.9007713507656026,
                    0.981760843654081
                ],
                "select_new_ys": [
                    "8 * 2 = 16 (left: 1 13 16)\n16 - 13 = 3 (left: 1 3)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n11 - 8 = 3 (left: 1 3)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n11 - 1 = 10 (left: 8 10)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n13 - 1 = 12 (left: 12 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 8 13",
                "ys": [
                    "8 * 2 = 16 (left: 1 13 16)\n16 - 13 = 3 (left: 1 3)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n11 - 8 = 3 (left: 1 3)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "13 - 2 = 11 (left: 1 8 11)\n11 - 1 = 10 (left: 8 10)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n13 - 1 = 12 (left: 12 16)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 8 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 911,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 14309,
            "prompt_tokens": 202529,
            "cost": 0.07042273
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 6 9 24)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n"
                ],
                "values": [
                    0.9807361278577029,
                    0.9366686788164772,
                    0.8996146562340044,
                    0.941926406058486,
                    0.9601609721439859
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 6 9 24)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 6 9",
                "ys": [
                    "6 * 4 = 24 (left: 6 9 24)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n"
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 6 9 24)\n24 - 9 = 15 (left: 6 15)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n4 * 2 = 8 (left: 6 8)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n4 + 2 = 6 (left: 6 6)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 / 4 = 1.5 (left: 1.5 3)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n4 + 1 = 5 (left: 5 9)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n1 * 4 = 4 (left: 4 9)\n"
                ],
                "values": [
                    0.9550393150223901,
                    0.9907514891352586,
                    0.9296720464750668,
                    0.9410151303035975,
                    0.8641270796928626,
                    0.9555963847238554,
                    0.9348609747509546,
                    0.974110573065161,
                    0.9925427625269712,
                    0.9324412270482082,
                    0.9746705921430608,
                    0.9614524679372198,
                    0.9839610053763153,
                    0.9883161246900798,
                    0.9303897202153221,
                    0.9308953202803634,
                    0.904325508659857
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 6 9",
                "ys": [
                    "9 - 6 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 6 6 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 912,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 15729,
            "prompt_tokens": 222401,
            "cost": 0.07735017
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n",
                    "4 * 4 = 16 (left: 1 8 16)\n"
                ],
                "values": [
                    0.9970007397831774,
                    0.8917508854668993
                ],
                "select_new_ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n",
                    "4 * 4 = 16 (left: 1 8 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 8",
                "ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n",
                    "4 * 4 = 16 (left: 1 8 16)\n"
                ],
                "new_ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 * 1 = 4 (left: 2 4)\n",
                    "4 * 4 = 16 (left: 1 8 16)\n16 - 8 = 8 (left: 1 8)\n",
                    "4 * 4 = 16 (left: 1 8 16)\n16 / 8 = 2 (left: 1 2)\n"
                ],
                "values": [
                    0.9291160619059521,
                    0.8945862564769348,
                    0.9769598730439247,
                    0.9938403749451058,
                    0.9110823542285463,
                    0.9975049859362355,
                    0.9531702710803357
                ],
                "select_new_ys": [
                    "4 * 4 = 16 (left: 1 8 16)\n16 - 8 = 8 (left: 1 8)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "4 * 4 = 16 (left: 1 8 16)\n16 / 8 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 4 8",
                "ys": [
                    "4 * 4 = 16 (left: 1 8 16)\n16 - 8 = 8 (left: 1 8)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "4 * 4 = 16 (left: 1 8 16)\n16 / 8 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 4 4 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 913,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 16819,
            "prompt_tokens": 237913,
            "cost": 0.08273741000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 10 = 1 (left: 1 1 5)\n",
                    "11 - 5 = 6 (left: 1 6 10)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n"
                ],
                "values": [
                    0.9766291738030413,
                    0.9845571749696798,
                    0.9811917512717829,
                    0.9246895552241206,
                    0.941486596282286
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 1 6 10)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 10 11",
                "ys": [
                    "11 - 5 = 6 (left: 1 6 10)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n",
                    "11 - 5 = 6 (left: 1 6 10)\n6 - 1 = 5 (left: 5 10)\n",
                    "11 - 5 = 6 (left: 1 6 10)\n10 - 1 = 9 (left: 6 9)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 5 = 6 (left: 6 9)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 9 = 2 (left: 2 5)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n9 - 5 = 4 (left: 4 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n5 + 9 = 14 (left: 11 14)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 5 = 6 (left: 1 6)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 * 5 = 5 (left: 1 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 * 1 = 1 (left: 1 5)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n2 - 1 = 1 (left: 1 11)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n2 * 1 = 2 (left: 2 11)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n11 - 5 = 6 (left: 6 10)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n10 - 5 = 5 (left: 5 11)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n10 * 5 = 50 (left: 11 50)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n11 - 10 = 1 (left: 1 5)\n"
                ],
                "values": [
                    0.9992048530440643,
                    0.9335264106322796,
                    0.9893775672690651,
                    0.9805709680079606,
                    0.9850667999181553,
                    0.9603609193875949,
                    0.9396268199477745,
                    0.9918735905586504,
                    0.9570870166850974,
                    0.9887755321375141,
                    0.9716564254945527,
                    0.9896135331595783,
                    0.8977494530258634,
                    0.944748007160161,
                    0.9561604331831133,
                    0.9954267689021322,
                    0.9885097914113667,
                    0.9242166805650108,
                    0.9707984933597729
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n11 - 5 = 6 (left: 6 10)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "11 - 5 = 6 (left: 1 6 10)\n10 - 1 = 9 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 10 11",
                "ys": [
                    "11 - 5 = 6 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n",
                    "10 * 1 = 10 (left: 5 10 11)\n11 - 5 = 6 (left: 6 10)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "10 / 5 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "11 - 5 = 6 (left: 1 6 10)\n10 - 1 = 9 (left: 6 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 5 10 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 914,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 18321,
            "prompt_tokens": 259333,
            "cost": 0.09017301000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 3 4 5)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n",
                    "11 - 3 = 8 (left: 4 6 8)\n",
                    "6 * 4 = 24 (left: 3 11 24)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n"
                ],
                "values": [
                    0.9665070414985379,
                    0.9503921773275359,
                    0.9867965904832278,
                    0.9629768490645055,
                    0.9104300343073265
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 4 6 8)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n",
                    "6 * 4 = 24 (left: 3 11 24)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 11",
                "ys": [
                    "11 - 3 = 8 (left: 4 6 8)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n",
                    "6 * 4 = 24 (left: 3 11 24)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "11 - 3 = 8 (left: 4 6 8)\n6 - 4 = 2 (left: 2 8)\n",
                    "11 - 3 = 8 (left: 4 6 8)\n6 + 4 = 10 (left: 8 10)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n3 + 4 = 7 (left: 5 7)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n5 - 4 = 1 (left: 1 3)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n3 * 4 = 12 (left: 5 12)\n",
                    "6 * 4 = 24 (left: 3 11 24)\n24 / 3 = 8 (left: 8 11)\n",
                    "6 * 4 = 24 (left: 3 11 24)\n11 - 3 = 8 (left: 8 24)\n",
                    "6 * 4 = 24 (left: 3 11 24)\n24 / 11 = 2.1818181818181817 (left: 2.1818181818181817 3)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 8 = 3 (left: 2 3 3)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n3 * 2 = 6 (left: 6 11)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n11 - 3 = 8 (left: 4 8)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n3 * 4 = 12 (left: 11 12)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n3 + 4 = 7 (left: 7 11)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n11 - 7 = 4 (left: 3 4 4)\n"
                ],
                "values": [
                    0.9957035262029151,
                    0.9339104789297843,
                    0.8912113924547835,
                    0.9753934607883354,
                    0.9315533011240138,
                    0.9488200066241064,
                    0.9333671365386178,
                    0.9996590697047012,
                    0.9368258164230665,
                    0.9364648817635711,
                    0.9962572146746359,
                    0.9783259321741044,
                    0.9133818957130684,
                    0.9259310544541339,
                    0.9960470808740477,
                    0.9674056727902127,
                    0.9445250168413027,
                    0.9151178994687708,
                    0.9464025420663599
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 3 11 24)\n24 / 3 = 8 (left: 8 11)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "11 - 3 = 8 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 11",
                "ys": [
                    "6 * 4 = 24 (left: 3 11 24)\n24 / 3 = 8 (left: 8 11)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "6 - 3 = 3 (left: 3 4 11)\n11 - 4 = 7 (left: 3 7)\n",
                    "11 - 3 = 8 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 4 6 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 915,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 19817,
            "prompt_tokens": 280345,
            "cost": 0.09749185000000002
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 8 = 1 (left: 1 2 4)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n",
                    "9 * 2 = 18 (left: 4 8 18)\n"
                ],
                "values": [
                    0.9578823265028039,
                    0.9311857543577476,
                    0.9420575616588872,
                    0.9535461748658899,
                    0.9196859467536895
                ],
                "select_new_ys": [
                    "9 - 8 = 1 (left: 1 2 4)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n",
                    "9 * 2 = 18 (left: 4 8 18)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 8 9",
                "ys": [
                    "9 - 8 = 1 (left: 1 2 4)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n",
                    "9 * 2 = 18 (left: 4 8 18)\n"
                ],
                "new_ys": [
                    "9 - 8 = 1 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 2 = 6 (left: 5 6)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "9 * 2 = 18 (left: 4 8 18)\n18 - 8 = 10 (left: 4 10)\n",
                    "9 * 2 = 18 (left: 4 8 18)\n8 - 4 = 4 (left: 4 18)\n",
                    "9 * 2 = 18 (left: 4 8 18)\n18 / 4 = 4.5 (left: 4.5 8)\n"
                ],
                "values": [
                    0.9119912454732166,
                    0.9623927743880413,
                    0.9405189293670427,
                    0.977571763889964,
                    0.9961260608978524,
                    0.9658115646062964,
                    0.9790122158260182,
                    0.9384466714610908,
                    0.9743656237460487,
                    0.9172085948484932,
                    0.9525013322248571,
                    0.9994595208031251,
                    0.9650590972655827,
                    0.9649005762917168
                ],
                "select_new_ys": [
                    "9 * 2 = 18 (left: 4 8 18)\n18 - 8 = 10 (left: 4 10)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 8 9",
                "ys": [
                    "9 * 2 = 18 (left: 4 8 18)\n18 - 8 = 10 (left: 4 10)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 8 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 916,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 21359,
            "prompt_tokens": 301880,
            "cost": 0.1050025
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 5 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n",
                    "8 - 1 = 7 (left: 4 5 7)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n"
                ],
                "values": [
                    0.999448363288657,
                    0.8918346961743856,
                    0.8979099926492012
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n",
                    "8 - 1 = 7 (left: 4 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 5 13",
                "ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n",
                    "8 - 1 = 7 (left: 4 5 7)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 * 1 = 8 (left: 4 8)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 + 5 = 10 (left: 10 13)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 13 25)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 + 13 = 18 (left: 5 18)\n",
                    "8 - 1 = 7 (left: 4 5 7)\n7 - 5 = 2 (left: 2 4)\n"
                ],
                "values": [
                    0.9664879909582489,
                    0.9259475109972544,
                    0.8959354805540196,
                    0.9432222268525243,
                    0.957492087624425,
                    0.9794621407236105,
                    0.9913183774207401,
                    0.998295129833809
                ],
                "select_new_ys": [
                    "8 - 1 = 7 (left: 4 5 7)\n7 - 5 = 2 (left: 2 4)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 + 13 = 18 (left: 5 18)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 13 25)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 + 5 = 10 (left: 10 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 5 13",
                "ys": [
                    "8 - 1 = 7 (left: 4 5 7)\n7 - 5 = 2 (left: 2 4)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 + 13 = 18 (left: 5 18)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 13 25)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "4 + 1 = 5 (left: 5 5 13)\n5 + 5 = 10 (left: 10 13)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 4 5 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 917,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 22629,
            "prompt_tokens": 319442,
            "cost": 0.11114124
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n"
                ],
                "values": [
                    0.9864418571224841
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 7 12",
                "ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n"
                ],
                "new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n"
                ],
                "values": [
                    0.9974214862304732
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 7 12",
                "ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 2 7 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 918,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 23079,
            "prompt_tokens": 325109,
            "cost": 0.11316633
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n"
                ],
                "values": [
                    0.9804276091218557,
                    0.9014695687770432
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 7",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n4 - 3 = 1 (left: 1 6)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n4 + 3 = 7 (left: 6 7)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n18 / 3 = 6 (left: 6 7)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n18 - 7 = 11 (left: 3 11)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n18 - 3 = 15 (left: 7 15)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n7 - 3 = 4 (left: 4 18)\n"
                ],
                "values": [
                    0.9740847838116513,
                    0.9923380485127665,
                    0.9445163778946898,
                    0.8942010231077868,
                    0.8697490895414026,
                    0.977917014766884,
                    0.9901572583252441,
                    0.8887190029624688,
                    0.9320752964090209
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n18 - 7 = 11 (left: 3 11)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n18 / 3 = 6 (left: 6 7)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 7",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n18 - 7 = 11 (left: 3 11)\n",
                    "6 * 3 = 18 (left: 3 7 18)\n18 / 3 = 6 (left: 6 7)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 6 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 919,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 24154,
            "prompt_tokens": 340167,
            "cost": 0.11841448999999998
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n",
                    "1 + 5 = 6 (left: 6 9 13)\n",
                    "5 - 1 = 4 (left: 4 9 13)\n"
                ],
                "values": [
                    0.9998057131416749,
                    0.8873598642265749,
                    0.9612380202161779,
                    0.9417339670397529,
                    0.9021214380583386
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n",
                    "1 + 5 = 6 (left: 6 9 13)\n",
                    "5 - 1 = 4 (left: 4 9 13)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n",
                    "1 + 5 = 6 (left: 6 9 13)\n",
                    "5 - 1 = 4 (left: 4 9 13)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n",
                    "13 - 9 = 4 (left: 1 4 5)\n4 * 5 = 20 (left: 1 20)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n9 - 8 = 1 (left: 1 1)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n9 - 1 = 8 (left: 8 8)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n8 - 1 = 7 (left: 7 9)\n",
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "5 - 1 = 4 (left: 4 9 13)\n13 - 9 = 4 (left: 4 4)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n13 - 8 = 5 (left: 5 5)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n8 - 5 = 3 (left: 3 13)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n13 - 5 = 8 (left: 8 8)\n"
                ],
                "values": [
                    0.9991734705859873,
                    0.8842938157548413,
                    0.962962849601036,
                    0.9828693640830254,
                    0.9364842368508011,
                    0.9995656607898336,
                    0.999979630739207,
                    0.9942154435379461,
                    0.9359394714584497,
                    0.9261837300327153
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 4 9 13)\n13 - 9 = 4 (left: 4 4)\n",
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 9 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n13 - 8 = 5 (left: 5 5)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n9 - 1 = 8 (left: 8 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 9 13",
                "ys": [
                    "5 - 1 = 4 (left: 4 9 13)\n13 - 9 = 4 (left: 4 4)\n",
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 9 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n",
                    "9 - 1 = 8 (left: 5 8 13)\n13 - 8 = 5 (left: 5 5)\n",
                    "13 - 5 = 8 (left: 1 8 9)\n9 - 1 = 8 (left: 8 8)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 9 13",
                "ys": [
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (1 + 5) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (1 + 5) = 24"
                ]
            }
        ],
        "idx": 920,
        "ys": [
            "1 + 5 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (1 + 5) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 25693,
            "prompt_tokens": 361659,
            "cost": 0.12591023
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 7 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n"
                ],
                "values": [
                    0.9928723904243252
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 7 13",
                "ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n"
                ],
                "values": [
                    0.9989445903682999
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 7 13",
                "ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 6 7 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 921,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 26131,
            "prompt_tokens": 367342,
            "cost": 0.12792644
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n",
                    "5 + 5 = 10 (left: 8 10 10)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n"
                ],
                "values": [
                    0.9998627899173271,
                    0.9364815093483464,
                    0.9857020041874478
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n",
                    "5 + 5 = 10 (left: 8 10 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 8 10",
                "ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n",
                    "5 + 5 = 10 (left: 8 10 10)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 8 10)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 * 5 = 25 (left: 8 25)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 * 8 = 40 (left: 5 40)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 8 = 13 (left: 5 13)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 5 = 25 (left: 2 25)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 2 = 10 (left: 5 10)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 + 5 = 10 (left: 2 10)\n",
                    "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n"
                ],
                "values": [
                    0.9906651136998421,
                    0.9715790202310577,
                    0.9627045549280686,
                    0.9967267684551114,
                    0.9953807092921526,
                    0.9955648342805868,
                    0.940729326233072,
                    0.9364142107028744,
                    0.999975843837209
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 8 = 13 (left: 5 13)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 5 = 25 (left: 2 25)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 8 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 8 10",
                "ys": [
                    "5 + 5 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 8 = 13 (left: 5 13)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 5 = 25 (left: 2 25)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 8 10)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 5 8 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 922,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 27401,
            "prompt_tokens": 385218,
            "cost": 0.13414996
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n"
                ],
                "values": [
                    0.9973652037399051
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 4 = 6 (left: 2 6)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 4 = 8 (left: 2 8)\n"
                ],
                "values": [
                    0.9888949990930933,
                    0.9701092866043628,
                    0.9526740893576526,
                    0.9939428885120284
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 4 = 8 (left: 2 8)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 4 = 6 (left: 2 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 4 = 8 (left: 2 8)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 4 = 6 (left: 2 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 6 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 923,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 28229,
            "prompt_tokens": 397259,
            "cost": 0.13831183
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n",
                    "11 - 7 = 4 (left: 4 6 8)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n"
                ],
                "values": [
                    0.9966987078156822,
                    0.9139761698345065,
                    0.9863043872400313,
                    0.9744300560213529
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n",
                    "11 - 7 = 4 (left: 4 6 8)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 11",
                "ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n",
                    "11 - 7 = 4 (left: 4 6 8)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "11 - 7 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n7 - 6 = 1 (left: 1 3)\n"
                ],
                "values": [
                    0.9992811608568156,
                    0.9957313882628986,
                    0.991050639182247,
                    0.9352495179312231,
                    0.9919326116946493
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "11 - 7 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n7 - 6 = 1 (left: 1 3)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 11",
                "ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "11 - 7 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "11 - 8 = 3 (left: 3 6 7)\n7 - 6 = 1 (left: 1 3)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n8 - 5 = 3 (left: 3 7)\n",
                    "11 - 6 = 5 (left: 5 7 8)\n7 - 5 = 2 (left: 2 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 7 8 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 924,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 29625,
            "prompt_tokens": 416435,
            "cost": 0.14502495
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 9 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n"
                ],
                "values": [
                    0.9954472177140109
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 9 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 7 = 2 (left: 2 4)\n"
                ],
                "values": [
                    0.9919845058898068
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 7 = 2 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 9 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 7 = 2 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "7 9 9 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 925,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 30075,
            "prompt_tokens": 422102,
            "cost": 0.14705004
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 6 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 3 6)\n",
                    "12 - 6 = 6 (left: 3 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n",
                    "6 + 3 = 9 (left: 9 9 12)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n"
                ],
                "values": [
                    0.9920098746404901,
                    0.9390015375076338,
                    0.9788849689440544,
                    0.9135240403678605,
                    0.9514226321515453
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 3 6)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n",
                    "12 - 6 = 6 (left: 3 6 9)\n",
                    "6 + 3 = 9 (left: 9 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 6 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 3 6)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n",
                    "12 - 6 = 6 (left: 3 6 9)\n",
                    "6 + 3 = 9 (left: 9 9 12)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 3 6)\n6 - 3 = 3 (left: 3 3)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n3 + 6 = 9 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n3 * 3 = 9 (left: 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n12 - 3 = 9 (left: 3 9)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 3 4)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 + 3 = 6 (left: 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n6 + 6 = 12 (left: 12 12)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n12 / 6 = 2 (left: 2 6)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n6 * 6 = 36 (left: 12 36)\n",
                    "12 - 6 = 6 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "6 + 3 = 9 (left: 9 9 12)\n12 - 9 = 3 (left: 3 9)\n"
                ],
                "values": [
                    0.9638943113455163,
                    0.9408085800711893,
                    0.9333118722757336,
                    0.9535012068827771,
                    0.9742065625981235,
                    0.9441989773701456,
                    0.8889817234157296,
                    0.9976761084566689,
                    0.9976145222043636,
                    0.9387455577261429,
                    0.9283550486524993,
                    0.9613399007568443,
                    0.9978365044838072,
                    0.9999050187204013
                ],
                "select_new_ys": [
                    "6 + 3 = 9 (left: 9 9 12)\n12 - 9 = 3 (left: 3 9)\n",
                    "12 - 6 = 6 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n12 - 3 = 9 (left: 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 6 9 12",
                "ys": [
                    "6 + 3 = 9 (left: 9 9 12)\n12 - 9 = 3 (left: 3 9)\n",
                    "12 - 6 = 6 (left: 3 6 9)\n9 - 6 = 3 (left: 3 3)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n",
                    "9 - 3 = 6 (left: 6 6 12)\n12 - 6 = 6 (left: 6 6)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n12 - 3 = 9 (left: 3 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 6 9 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 926,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 31548,
            "prompt_tokens": 442678,
            "cost": 0.15422586
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 6 9)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n",
                    "12 - 6 = 6 (left: 6 9 13)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n"
                ],
                "values": [
                    0.9418466454245054,
                    0.9455905739814439,
                    0.9653721144899272,
                    0.9315155014210466,
                    0.9266236803817985
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 12 13",
                "ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n13 - 6 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n6 - 3 = 3 (left: 3 13)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n6 * 3 = 18 (left: 13 18)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n6 / 3 = 2 (left: 2 13)\n",
                    "12 - 9 = 3 (left: 3 6 13)\n13 - 3 = 10 (left: 6 10)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n9 - 1 = 8 (left: 6 8)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n1 + 6 = 7 (left: 7 9)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n1 + 9 = 10 (left: 6 10)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n1 * 6 = 6 (left: 6 9)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n9 - 6 = 3 (left: -1 3)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n6 - (-1) = 7 (left: 7 9)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n9 - (-1) = 10 (left: 6 10)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n6 * (-1) = -6 (left: -6 9)\n",
                    "12 - 13 = -1 (left: -1 6 9)\n6 * 9 = 54 (left: -1 54)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 12 = 3 (left: 3 13)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n13 - 12 = 1 (left: 1 15)\n"
                ],
                "values": [
                    0.9986814452002245,
                    0.9994377847850745,
                    0.934118320720837,
                    0.9652687532781935,
                    0.9332112794960844,
                    0.9738874875364588,
                    0.997229720887831,
                    0.9805469751601539,
                    0.9179586969321789,
                    0.9259206673201195,
                    0.94610010536478,
                    0.9505318152581291,
                    0.9537039357852085,
                    0.9382545722506974,
                    0.9320022476848332,
                    0.9247361887238997,
                    0.9971548812808506,
                    0.9343523939864414,
                    0.9442543937913265
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 6 13)\n13 - 6 = 7 (left: 3 7)\n",
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n9 - 1 = 8 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 12 13",
                "ys": [
                    "12 - 9 = 3 (left: 3 6 13)\n13 - 6 = 7 (left: 3 7)\n",
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n",
                    "13 - 12 = 1 (left: 1 6 9)\n9 - 1 = 8 (left: 6 8)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 12 13",
                "ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (12 - 6) = 24",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * (15 - 13)) = 24",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 + 9 - 13) * 12 = 24"
                ],
                "values": [
                    20.0,
                    0.001,
                    20.0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (12 - 6) = 24",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 + 9 - 13) * 12 = 24",
                    "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * (15 - 13)) = 24"
                ]
            }
        ],
        "idx": 927,
        "ys": [
            "12 - 6 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (12 - 6) = 24",
            "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 + 9 - 13) * 12 = 24",
            "6 + 9 = 15 (left: 12 13 15)\n15 - 13 = 2 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * (15 - 13)) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 32940,
            "prompt_tokens": 462983,
            "cost": 0.16123941000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n",
                    "13 - 4 = 9 (left: 7 9 9)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n"
                ],
                "values": [
                    0.9999371022110094,
                    0.9311996381093987,
                    0.964018581421814,
                    0.9546457002473518,
                    0.9490632033932888
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n",
                    "13 - 4 = 9 (left: 7 9 9)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n",
                    "13 - 4 = 9 (left: 7 9 9)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 + 7 = 11 (left: 4 11)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 - 4 = 0 (left: 0 7)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 2 = 11 (left: 4 11)\n",
                    "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n",
                    "13 - 4 = 9 (left: 7 9 9)\n9 / 9 = 1 (left: 1 7)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 7 = 6 (left: 5 6)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n5 + 7 = 12 (left: 12 13)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n6 - 4 = 2 (left: 2 9)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n"
                ],
                "values": [
                    0.966860614762005,
                    0.9399518293489304,
                    0.9343927544235314,
                    0.9307298018956845,
                    0.9336516598675179,
                    0.9907895765555764,
                    0.9517408097107037,
                    0.97592421680671,
                    0.954985974808529,
                    0.9553156629279396,
                    0.9293296560890101,
                    0.9921273299517231,
                    0.9952710358372577,
                    0.9326092198989595,
                    0.9880237904037216
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n",
                    "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 9 13",
                "ys": [
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n",
                    "13 - 4 = 9 (left: 7 9 9)\n9 - 7 = 2 (left: 2 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 7 9 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 928,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 34540,
            "prompt_tokens": 484410,
            "cost": 0.1687847
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n",
                    "8 - 5 = 3 (left: 3 6 12)\n"
                ],
                "values": [
                    0.9905741777605603,
                    0.9703072304141228,
                    0.9571698679150157,
                    0.9228281475714022
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n",
                    "8 - 5 = 3 (left: 3 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n",
                    "8 - 5 = 3 (left: 3 6 12)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 4 5 6)\n5 - 4 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n8 - 6 = 2 (left: 2 5)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n5 * 6 = 30 (left: 8 30)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 - 5 = 1 (left: 1 8)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n5 + 6 = 11 (left: 8 11)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 7 = 1 (left: 1 6)\n",
                    "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n"
                ],
                "values": [
                    0.9956093807001072,
                    0.8978292164821596,
                    0.9317458864613947,
                    0.9002900451842174,
                    0.9972180699842654,
                    0.9510905787189167,
                    0.9421270097099548,
                    0.9988910046704991,
                    0.9345799019009212,
                    0.9973371778749779
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6)\n",
                    "12 - 8 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 - 5 = 1 (left: 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 12",
                "ys": [
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "8 - 5 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6)\n",
                    "12 - 8 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 - 5 = 1 (left: 1 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 6 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 929,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 35930,
            "prompt_tokens": 503782,
            "cost": 0.17554414
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n"
                ],
                "values": [
                    0.9736853255039108,
                    0.97072391863147,
                    0.9247593572224075,
                    0.8862874838934056
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 7",
                "ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n"
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n24 / 2 = 12 (left: 7 12)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n5 * 4 = 20 (left: 6 20)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n4 + 7 = 11 (left: 4 11)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n7 - 2 = 5 (left: 5 6)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n6 - 2 = 4 (left: 4 7)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n7 - 6 = 1 (left: 1 2)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n6 * 2 = 12 (left: 7 12)\n"
                ],
                "values": [
                    0.9990166808251487,
                    0.9955707544044792,
                    0.8710813719289586,
                    0.966897200313325,
                    0.9399601248799765,
                    0.9623215609558521,
                    0.9253324034994104,
                    0.97606539963309,
                    0.930493495219667
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n24 / 2 = 12 (left: 7 12)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n7 - 6 = 1 (left: 1 2)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n7 - 2 = 5 (left: 5 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 7",
                "ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n24 / 2 = 12 (left: 7 12)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n7 - 6 = 1 (left: 1 2)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "4 - 2 = 2 (left: 2 6 7)\n7 - 2 = 5 (left: 5 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 6 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 930,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 37338,
            "prompt_tokens": 523457,
            "cost": 0.18240519
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 10 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n"
                ],
                "values": [
                    0.9823066706187111,
                    0.9793546577449609,
                    0.910512150083531
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 10 10",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n"
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n2 * 2 = 4 (left: 4 10)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n2 + 2 = 4 (left: 4 10)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n10 / 2 = 5 (left: 2 5)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n2 * 10 = 20 (left: 2 20)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n10 - 5 = 5 (left: 5 5)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n10 / 5 = 2 (left: 2 5)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n5 + 5 = 10 (left: 10 10)\n"
                ],
                "values": [
                    0.9919030319872965,
                    0.9906578389845158,
                    0.9235733579730396,
                    0.9244224727546904,
                    0.9255186733395929,
                    0.9590545362076213,
                    0.9913159985939097,
                    0.9574593053649175,
                    0.8755949889333875
                ],
                "select_new_ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n10 - 5 = 5 (left: 5 5)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n2 * 10 = 20 (left: 2 20)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n10 / 5 = 2 (left: 2 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 10 10",
                "ys": [
                    "10 / 5 = 2 (left: 2 10 2)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n10 - 5 = 5 (left: 5 5)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n2 * 10 = 20 (left: 2 20)\n",
                    "10 / 2 = 5 (left: 5 10 5)\n10 / 5 = 2 (left: 2 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 10 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 931,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 38608,
            "prompt_tokens": 541155,
            "cost": 0.18858065
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n"
                ],
                "values": [
                    0.9977500676418345,
                    0.9745128568718473
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 7 12",
                "ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n7 - 6 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 / 6 = 1 (left: 1 7)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 * 7 = 42 (left: 6 42)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 + 6 = 12 (left: 7 12)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n5 * 6 = 30 (left: 6 30)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n"
                ],
                "values": [
                    0.950468066897393,
                    0.9103474895538318,
                    0.9449259490005216,
                    0.9835011701602313,
                    0.9803313513932855,
                    0.9226593954949229,
                    0.9273702553648988,
                    0.9928780741515789,
                    0.9402458423696487
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 + 6 = 12 (left: 7 12)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n7 - 6 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 * 7 = 42 (left: 6 42)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 + 6 = 12 (left: 7 12)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n7 - 6 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 * 7 = 42 (left: 6 42)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 6 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (6 * (12 - 7)) - 6 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (6 * (12 - 7)) - 6 = 24"
                ]
            }
        ],
        "idx": 932,
        "ys": [
            "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (6 * (12 - 7)) - 6 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 39675,
            "prompt_tokens": 556441,
            "cost": 0.19388157
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 9 = 2 (left: 2 6 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n"
                ],
                "values": [
                    0.992221802178129,
                    0.9223724466905358
                ],
                "select_new_ys": [
                    "11 - 9 = 2 (left: 2 6 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 9 11",
                "ys": [
                    "11 - 9 = 2 (left: 2 6 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n"
                ],
                "new_ys": [
                    "11 - 9 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 * 9 = 54 (left: 2 54)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 + 2 = 8 (left: 8 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 / 2 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 - 2 = 4 (left: 4 9)\n"
                ],
                "values": [
                    0.9918989678536739,
                    0.9602503639915552,
                    0.9248772013314372,
                    0.9251820265607812,
                    0.9607327018838409,
                    0.9417343321896099
                ],
                "select_new_ys": [
                    "11 - 9 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 / 2 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 - 2 = 4 (left: 4 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 + 2 = 8 (left: 8 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 9 11",
                "ys": [
                    "11 - 9 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 / 2 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 - 2 = 4 (left: 4 9)\n",
                    "11 - 9 = 2 (left: 6 9 2)\n6 + 2 = 8 (left: 8 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 9 9 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 933,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 40802,
            "prompt_tokens": 571077,
            "cost": 0.19907299
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n"
                ],
                "values": [
                    0.9913840417672439,
                    0.972899479433825,
                    0.9589935466724225,
                    0.9796957728154557,
                    0.9777253750085684
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 11 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n5 * 4 = 20 (left: 11 20)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n8 - 5 = 3 (left: -1 3)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n5 * 8 = 40 (left: -1 40)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n-1 + 5 = 4 (left: 4 8)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n-1 * 5 = -5 (left: -5 8)\n",
                    "11 - 12 = -1 (left: -1 5 8)\n5 + 8 = 13 (left: -1 13)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n5 - 1 = 4 (left: 4 8)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n8 + 6 = 14 (left: 12 14)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 / 3 = 4 (left: 4 11)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n"
                ],
                "values": [
                    0.9990727417012601,
                    0.9537043550371479,
                    0.9197624605461396,
                    0.9617951807369266,
                    0.9600768896730681,
                    0.912057663024736,
                    0.9243868087455778,
                    0.9252943361860557,
                    0.93132522162238,
                    0.9987784475796407,
                    0.9347005495077919,
                    0.9969203398044826,
                    0.9095137409348161,
                    0.9783944168400723,
                    0.9989295538779,
                    0.9522328471904185,
                    0.990994766781451
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 11 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 11 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24"
                ],
                "values": [
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24"
                ]
            }
        ],
        "idx": 934,
        "ys": [
            "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24",
            "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 42331,
            "prompt_tokens": 592178,
            "cost": 0.20645216
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n"
                ],
                "values": [
                    0.9967265775676825
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 10",
                "ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 3 4)\n"
                ],
                "values": [
                    0.9991534750856672
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 3 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 10",
                "ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 3 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 6 8 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 935,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 42781,
            "prompt_tokens": 597936,
            "cost": 0.20850182
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 11 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 11 = 1 (left: 1 6 13)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n",
                    "13 - 6 = 7 (left: 7 11 12)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n"
                ],
                "values": [
                    0.9517006163884457,
                    0.9562075467702206,
                    0.8995330913436217,
                    0.9840827372654722,
                    0.979739929579178
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 11 13)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n",
                    "13 - 6 = 7 (left: 7 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 11 12 13",
                "ys": [
                    "12 - 6 = 6 (left: 6 11 13)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n",
                    "13 - 6 = 7 (left: 7 11 12)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 11 13)\n11 - 6 = 5 (left: 5 13)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n13 - 6 = 7 (left: 7 11)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n13 - 11 = 2 (left: 2 6)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n6 + 11 = 17 (left: 13 17)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n6 * 11 = 66 (left: 13 66)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n12 / 6 = 2 (left: 2 2)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 1 = 10 (left: 6 10)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n6 - 1 = 5 (left: 5 11)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n6 * 1 = 6 (left: 6 11)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n6 / 1 = 6 (left: 6 11)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n1 * 6 = 6 (left: 6 13)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n1 + 6 = 7 (left: 7 13)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n1 + 13 = 14 (left: 6 14)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n",
                    "13 - 6 = 7 (left: 7 11 12)\n12 - 11 = 1 (left: 1 7)\n",
                    "13 - 6 = 7 (left: 7 11 12)\n12 - 7 = 5 (left: 5 11)\n"
                ],
                "values": [
                    0.9221928890186255,
                    0.9357459383551284,
                    0.9966453564082575,
                    0.9279872945249842,
                    0.9434704081079279,
                    0.9553375082009461,
                    0.9328614533543729,
                    0.9716750388340264,
                    0.8850885555739134,
                    0.9315619939224906,
                    0.998977807261626,
                    0.9446654365878856,
                    0.9256737220207375,
                    0.9739742051066995,
                    0.9562908748041175,
                    0.9909286564458815,
                    0.8830345428870048,
                    0.9479990201983486,
                    0.9382092558508875,
                    0.9817655350070994,
                    0.9992929061310546,
                    0.9308070688077272
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 7 11 12)\n12 - 11 = 1 (left: 1 7)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n13 - 11 = 2 (left: 2 6)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 11 12 13",
                "ys": [
                    "13 - 6 = 7 (left: 7 11 12)\n12 - 11 = 1 (left: 1 7)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n13 - 11 = 2 (left: 2 6)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 11 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 936,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 44201,
            "prompt_tokens": 618472,
            "cost": 0.21560854
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n"
                ],
                "values": [
                    0.9976156932852198
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 8",
                "ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n"
                ],
                "values": [
                    0.9120013778900194,
                    0.9896061523508652
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 8 8",
                "ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 2 8 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 937,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 44781,
            "prompt_tokens": 626214,
            "cost": 0.21833688
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 7 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n"
                ],
                "values": [
                    0.9966439838406936,
                    0.93917329760233,
                    0.9857519966347553,
                    0.9307896213783996
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 7 12 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 2 7)\n7 * 2 = 14 (left: 1 14)\n",
                    "13 - 12 = 1 (left: 1 2 7)\n1 * 2 = 2 (left: 2 7)\n",
                    "13 - 12 = 1 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n12 / 6 = 2 (left: 2 2)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n6 - 2 = 4 (left: 4 12)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 7 = 6 (left: 6 10)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n7 + 10 = 17 (left: 13 17)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n10 + 13 = 23 (left: 7 23)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n13 - 7 = 6 (left: 6 6)\n"
                ],
                "values": [
                    0.9518315359291535,
                    0.9225691358990968,
                    0.8801242391119831,
                    0.9284535546176289,
                    0.9553339152543799,
                    0.936717233625198,
                    0.9362838130923445,
                    0.9672611847546444,
                    0.9980496195649652,
                    0.9697998224275547,
                    0.9861885042108611,
                    0.9301769763967708,
                    0.9226230501748953,
                    0.9845452591848659
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n13 - 7 = 6 (left: 6 6)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 7 = 6 (left: 6 10)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 7 12 13",
                "ys": [
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n13 - 7 = 6 (left: 6 6)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 7 = 6 (left: 6 10)\n",
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 7 12 13",
                "ys": [
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 7) * 2 + 12 = 24"
                ],
                "values": [
                    0.001
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 7) * 2 + 12 = 24"
                ]
            }
        ],
        "idx": 938,
        "ys": [
            "13 - 7 = 6 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n12 + 12 = 24 (left: 24)\nAnswer: (13 - 7) * 2 + 12 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 46193,
            "prompt_tokens": 646231,
            "cost": 0.22529467
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 2 6 8)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n"
                ],
                "values": [
                    0.9557074369430213,
                    0.986620325051001,
                    0.9241604152958258
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 2 4 6)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 2 4 6)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n8 - 2 = 6 (left: 6 6)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n2 * 2 = 4 (left: 4 12)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n2 * 12 = 24 (left: 2 24)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)\n"
                ],
                "values": [
                    0.9465759268944739,
                    0.9309941695702418,
                    0.9321737320799796,
                    0.9307458442931104,
                    0.9608508841512441,
                    0.9466013045948921,
                    0.9857378490683132,
                    0.9382648035218998,
                    0.9327261403494632,
                    0.9912589094008709,
                    0.9708018475601965,
                    0.9843873504194106,
                    0.9788317775974871,
                    0.9855704973981271
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n2 * 12 = 24 (left: 2 24)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 12",
                "ys": [
                    "8 - 6 = 2 (left: 2 2 12)\n12 - 2 = 10 (left: 2 10)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n12 / 2 = 6 (left: 2 6)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n2 * 12 = 24 (left: 2 24)\n",
                    "8 - 6 = 2 (left: 2 2 12)\n2 + 2 = 4 (left: 4 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 6 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 939,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 47388,
            "prompt_tokens": 663476,
            "cost": 0.23126532
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n",
                    "13 - 4 = 9 (left: 3 9 9)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n"
                ],
                "values": [
                    0.9999075445973332,
                    0.9587708507216924,
                    0.9731610440412538,
                    0.9683649319111599,
                    0.9614339973317686
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n3 * 4 = 12 (left: 4 12)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)  \n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n5 - 3 = 2 (left: 2 13)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n4 + 6 = 10 (left: 10 13)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 4 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n6 + 4 = 10 (left: 10 13)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n4 * 3 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n3 + 4 = 7 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n3 * 4 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n4 - 3 = 1 (left: 1 4)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n4 / 4 = 1 (left: 1 3)\n"
                ],
                "values": [
                    0.9954387504666133,
                    0.9401503538525692,
                    0.9994608096616167,
                    0.9589381138650782,
                    0.9737999272762885,
                    0.9996688296595037,
                    0.9266811321314385,
                    0.9979159741564855,
                    0.892796724908511,
                    0.9459866027489972,
                    0.8732195216345556,
                    0.996013147538149,
                    0.8745445193686693,
                    0.9348838571784625,
                    0.9195389164078539,
                    0.9385508131981034
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n4 * 3 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 4)  \n4 * 3 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 4) * (13 - 5) = 24"
                ],
                "values": [
                    0.001
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 4) * (13 - 5) = 24"
                ]
            }
        ],
        "idx": 940,
        "ys": [
            "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 4) * (13 - 5) = 24"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 48977,
            "prompt_tokens": 685006,
            "cost": 0.23882631999999998
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n"
                ],
                "values": [
                    0.9903905547546055,
                    0.9391252489225943,
                    0.9747340025034914,
                    0.969694054526058
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "12 - 10 = 2 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n",
                    "12 - 10 = 2 (left: 2 4 5)\n4 + 2 = 6 (left: 5 6)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 6 7)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 / 4 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n5 * 4 = 20 (left: 12 20)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n5 + 4 = 9 (left: 9 12)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n6 * 5 = 30 (left: 12 30)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n6 - 5 = 1 (left: 1 12)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 / 6 = 2 (left: 2 5)\n"
                ],
                "values": [
                    0.9978803583515341,
                    0.9302185308633208,
                    0.9027721110861464,
                    0.9992265950780691,
                    0.984623923045418,
                    0.9975187991714685,
                    0.9494783156224625,
                    0.94509291953674,
                    0.8836582975854036,
                    0.9989665258861695,
                    0.9330645053568952,
                    0.9004685237824118,
                    0.9464583857810674
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "12 - 10 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 10 12",
                "ys": [
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "12 - 10 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 6 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 5 10 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 941,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 50385,
            "prompt_tokens": 704457,
            "cost": 0.24562689
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n"
                ],
                "values": [
                    0.9992015525947198,
                    0.94244802066884
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 11",
                "ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n1 + 2 = 3 (left: 3 4)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 7 = 2 (left: 1 2)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 1 = 8 (left: 7 8)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n1 + 7 = 8 (left: 8 9)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n7 - 1 = 6 (left: 6 9)\n"
                ],
                "values": [
                    0.9776718397438987,
                    0.9699367498050872,
                    0.9838438612744334,
                    0.9784292337469579,
                    0.8868332851208726,
                    0.9562592020776085,
                    0.9524403063645938,
                    0.9254721826792385,
                    0.9229471308832574
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 7 = 2 (left: 1 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 11",
                "ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 7 = 2 (left: 1 2)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 7 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 942,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 51451,
            "prompt_tokens": 719850,
            "cost": 0.2509556
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n",
                    "6 * 4 = 24 (left: 5 8)\n",
                    "8 - 4 = 4 (left: 4 5 6)\n"
                ],
                "values": [
                    0.9636950770336509,
                    0.9433025871629115,
                    0.8528108639217838,
                    0.9096290787896444
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n",
                    "8 - 4 = 4 (left: 4 5 6)\n",
                    "6 * 4 = 24 (left: 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n",
                    "8 - 4 = 4 (left: 4 5 6)\n",
                    "6 * 4 = 24 (left: 5 8)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n5 - 4 = 1 (left: 1 2)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "8 - 4 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "6 * 4 = 24 (left: 5 8)\n5 + 8 = 13 (left: 13)\n"
                ],
                "values": [
                    0.9974165777360415,
                    0.9434069871972236,
                    0.9673585014725081,
                    0.9808186408907696,
                    0.9960880290494398,
                    0.98936091733717,
                    0.932256637315982
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "8 - 4 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "8 - 4 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 8)\n5 * 8 = 40 (left: 40)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n5 * 2 = 10 (left: 4 10)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 5 6 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 943,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 52737,
            "prompt_tokens": 737527,
            "cost": 0.25714299
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 3 6 12)\n",
                    "13 - 12 = 1 (left: 1 6 10)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n"
                ],
                "values": [
                    0.9606809481386139,
                    0.9244819605843063,
                    0.9416419556545615,
                    0.9453476108612385,
                    0.9987433054521127
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n",
                    "13 - 12 = 1 (left: 1 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 10 12 13",
                "ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n",
                    "13 - 12 = 1 (left: 1 6 10)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 6 = 7 (left: 2 7)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n6 * 2 = 12 (left: 12 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n6 / 2 = 3 (left: 3 13)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n13 - 12 = 1 (left: 1 4)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n7 + 10 = 17 (left: 12 17)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n7 * 10 = 70 (left: 12 70)\n",
                    "13 - 12 = 1 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n",
                    "13 - 12 = 1 (left: 1 6 10)\n10 - 1 = 9 (left: 6 9)\n"
                ],
                "values": [
                    0.9990498145876081,
                    0.9491050407504462,
                    0.8919339235966427,
                    0.9965673087388695,
                    0.9355774119323391,
                    0.9425644363072548,
                    0.9621538542114226,
                    0.9505235037948013,
                    0.9922261908978386,
                    0.9994311918195586,
                    0.9578829751663406,
                    0.9567838092932041,
                    0.912038730173748,
                    0.9324198220572699,
                    0.9994606107582622,
                    0.969575123038385
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 6 = 7 (left: 2 7)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n13 - 12 = 1 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 10 12 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 6 10)\n10 - 6 = 4 (left: 1 4)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 6 = 7 (left: 2 7)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 4 12 13)\n13 - 12 = 1 (left: 1 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 10 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 944,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 54200,
            "prompt_tokens": 757415,
            "cost": 0.26412205
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 9 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n"
                ],
                "values": [
                    0.9996535931704542
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 9 9",
                "ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 3 = 6 (left: 1 6)\n"
                ],
                "values": [
                    0.934780881457956,
                    0.9968825857159306,
                    0.934108893535224,
                    0.9203836944238785,
                    0.9451351663394727
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 3 = 6 (left: 1 6)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 9 9",
                "ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 3 = 6 (left: 1 6)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 9 9",
                "ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (9 - 1) * (9 / 3) = 24",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) * (9 / 3) = 24"
                ],
                "values": [
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (9 - 1) * (9 / 3) = 24",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) * (9 / 3) = 24"
                ]
            }
        ],
        "idx": 945,
        "ys": [
            "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (9 - 1) * (9 / 3) = 24",
            "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (9 - 1) * (9 / 3) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 55136,
            "prompt_tokens": 770973,
            "cost": 0.26881231
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n"
                ],
                "values": [
                    0.9947583435339169
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 * 1 = 7 (left: 4 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 + 1 = 5 (left: 5 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 4 7)\n"
                ],
                "values": [
                    0.9676352747468171,
                    0.9805807539418034,
                    0.9564573661902261,
                    0.9307135817473765,
                    0.9188554477696961
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 * 1 = 7 (left: 4 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 + 1 = 5 (left: 5 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 * 1 = 7 (left: 4 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 + 1 = 5 (left: 5 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 * 1 = 4 (left: 4 7)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 4 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 4) * (4 - 1) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 4) * (4 - 1) = 24"
                ]
            }
        ],
        "idx": 946,
        "ys": [
            "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 4) * (4 - 1) = 24"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 56111,
            "prompt_tokens": 784806,
            "cost": 0.27361972
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n",
                    "10 - 9 = 1 (left: 1 2 3)\n",
                    "10 - 3 = 7 (left: 2 7 9)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n",
                    "9 - 2 = 7 (left: 3 7 10)\n"
                ],
                "values": [
                    0.9998678306613072,
                    0.9379426769010157,
                    0.9899736096813532,
                    0.9334640606261827,
                    0.9400473909730501
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n",
                    "10 - 3 = 7 (left: 2 7 9)\n",
                    "9 - 2 = 7 (left: 3 7 10)\n",
                    "10 - 9 = 1 (left: 1 2 3)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 9 10",
                "ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n",
                    "10 - 3 = 7 (left: 2 7 9)\n",
                    "9 - 2 = 7 (left: 3 7 10)\n",
                    "10 - 9 = 1 (left: 1 2 3)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "10 - 2 = 8 (left: 3 8 9)\n9 - 3 = 6 (left: 6 8)\n",
                    "10 - 3 = 7 (left: 2 7 9)\n9 - 7 = 2 (left: 2 2)\n",
                    "10 - 3 = 7 (left: 2 7 9)\n9 - 2 = 7 (left: 7 7)\n",
                    "9 - 2 = 7 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n",
                    "9 - 2 = 7 (left: 3 7 10)\n10 - 3 = 7 (left: 7 7)\n",
                    "10 - 9 = 1 (left: 1 2 3)\n3 - 1 = 2 (left: 2 2)\n",
                    "10 - 9 = 1 (left: 1 2 3)\n3 * 2 = 6 (left: 1 6)\n",
                    "10 - 9 = 1 (left: 1 2 3)\n3 - 2 = 1 (left: 1 1)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n6 * 2 = 12 (left: 10 12)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n"
                ],
                "values": [
                    0.9937563260570752,
                    0.9367372685150054,
                    0.9923670372549522,
                    0.9517409937210861,
                    0.9992681663067032,
                    0.9470268045642527,
                    0.9445987943387011,
                    0.9547136681994454,
                    0.929683110095669,
                    0.9443625576539376,
                    0.9467195185459581,
                    0.9667145499399885,
                    0.9835617572412971
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n",
                    "10 - 2 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "10 - 3 = 7 (left: 2 7 9)\n9 - 7 = 2 (left: 2 2)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 9 10",
                "ys": [
                    "9 - 2 = 7 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n",
                    "10 - 2 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "10 - 3 = 7 (left: 2 7 9)\n9 - 7 = 2 (left: 2 2)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 9 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 947,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 57652,
            "prompt_tokens": 806600,
            "cost": 0.2811992
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 3 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 1 = 12 (left: 2 3 12)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n",
                    "3 - 1 = 2 (left: 2 2 13)\n"
                ],
                "values": [
                    0.9974017610103949,
                    0.9497158414982406,
                    0.933567591127782
                ],
                "select_new_ys": [
                    "13 - 1 = 12 (left: 2 3 12)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n",
                    "3 - 1 = 2 (left: 2 2 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 3 13",
                "ys": [
                    "13 - 1 = 12 (left: 2 3 12)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n",
                    "3 - 1 = 2 (left: 2 2 13)\n"
                ],
                "new_ys": [
                    "13 - 1 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 * 2 = 24 (left: 3 24)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 1 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n1 * 3 = 3 (left: 3 11)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n3 - 1 = 2 (left: 2 11)\n",
                    "3 - 1 = 2 (left: 2 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "3 - 1 = 2 (left: 2 2 13)\n2 * 2 = 4 (left: 4 13)\n",
                    "3 - 1 = 2 (left: 2 2 13)\n2 * 13 = 26 (left: 2 26)\n",
                    "3 - 1 = 2 (left: 2 2 13)\n2 + 2 = 4 (left: 4 13)\n"
                ],
                "values": [
                    0.9970667977515404,
                    0.9149898048822088,
                    0.9297367800459286,
                    0.9490692025911994,
                    0.9824126927673924,
                    0.9995289622642657,
                    0.977291284518154,
                    0.8975653971065058,
                    0.9116001845252837,
                    0.9997306971699146,
                    0.9609301816490283,
                    0.977184552203923,
                    0.9564530101503225
                ],
                "select_new_ys": [
                    "3 - 1 = 2 (left: 2 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 1 = 10 (left: 3 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 3 13",
                "ys": [
                    "3 - 1 = 2 (left: 2 2 13)\n13 - 2 = 11 (left: 2 11)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "13 - 1 = 12 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 1 = 10 (left: 3 10)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 3 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 948,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 58850,
            "prompt_tokens": 823406,
            "cost": 0.28705462
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 6 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n"
                ],
                "values": [
                    0.9770182085035581,
                    0.9383236881372461,
                    0.9528527607979717
                ],
                "select_new_ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 6 6 6",
                "ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n"
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 1 = 2 (left: 2 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n6 - 1 = 5 (left: 1 5)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 * 1 = 1 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 6 = 7 (left: 1 7)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 * 6 = 6 (left: 1 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n5 * 6 = 30 (left: 6 30)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n36 / 6 = 6 (left: 1 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n6 - 1 = 5 (left: 5 36)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n6 * 1 = 6 (left: 6 36)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n6 / 1 = 6 (left: 6 36)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n36 - 6 = 30 (left: 1 30)\n"
                ],
                "values": [
                    0.9990132834132057,
                    0.9260250414948307,
                    0.9937838498947749,
                    0.9870728398255881,
                    0.9778119394670637,
                    0.9146679163744204,
                    0.9168048716425015,
                    0.9476603011501049,
                    0.9996015926056184,
                    0.9062954924545683,
                    0.9376438558415394,
                    0.90297489856865,
                    0.9787117927801193
                ],
                "select_new_ys": [
                    "6 * 6 = 36 (left: 1 6 36)\n36 / 6 = 6 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 1 = 2 (left: 2 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 * 1 = 1 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 6 = 7 (left: 1 7)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n36 - 6 = 30 (left: 1 30)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 6 6 6",
                "ys": [
                    "6 * 6 = 36 (left: 1 6 36)\n36 / 6 = 6 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 1 = 2 (left: 2 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 * 1 = 1 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 6 = 7 (left: 1 7)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n36 - 6 = 30 (left: 1 30)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 6 6 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 949,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 60048,
            "prompt_tokens": 840612,
            "cost": 0.29301804
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 2 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 2 2 8)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n"
                ],
                "values": [
                    0.9945371921141527,
                    0.8832070009210077,
                    0.9768472829642896
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 2 2 8)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 2 9",
                "ys": [
                    "9 - 1 = 8 (left: 2 2 8)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 + 2 = 4 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n4 - 1 = 3 (left: 3 9)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 + 9 = 11 (left: 2 11)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 * 9 = 18 (left: 2 18)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n9 - 2 = 7 (left: 2 7)\n"
                ],
                "values": [
                    0.9779309337326422,
                    0.9848539434241457,
                    0.9305794224862894,
                    0.948434402177853,
                    0.9850477156115472,
                    0.930389831464026,
                    0.939841469856211,
                    0.9823168551454242,
                    0.9663441553382947,
                    0.9190378131936128,
                    0.9802567892159625,
                    0.939763488797638
                ],
                "select_new_ys": [
                    "2 * 2 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 * 9 = 18 (left: 2 18)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 2 9",
                "ys": [
                    "2 * 2 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n",
                    "2 * 1 = 2 (left: 2 2 9)\n2 * 9 = 18 (left: 2 18)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 2 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 950,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 61258,
            "prompt_tokens": 858024,
            "cost": 0.29905028
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 1 3 5)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n",
                    "11 - 1 = 10 (left: 3 6 10)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n"
                ],
                "values": [
                    0.9857832272178224,
                    0.9460789959469844,
                    0.9893018463106857,
                    0.9688727669404477,
                    0.908158646118174
                ],
                "select_new_ys": [
                    "11 - 3 = 8 (left: 1 6 8)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n",
                    "11 - 1 = 10 (left: 3 6 10)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 6 11",
                "ys": [
                    "11 - 3 = 8 (left: 1 6 8)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n",
                    "11 - 1 = 10 (left: 3 6 10)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n"
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 6 8)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n5 - 1 = 4 (left: 3 4)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n5 * 3 = 15 (left: 1 15)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n3 * 1 = 3 (left: 3 5)\n",
                    "11 - 1 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 3 = 8 (left: 5 8)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 8 = 3 (left: 3 3 5)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n11 - 3 = 8 (left: 6 8)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n6 * 3 = 18 (left: 11 18)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n6 / 3 = 2 (left: 2 11)\n"
                ],
                "values": [
                    0.9948071693545332,
                    0.9416971620172992,
                    0.8954157598279504,
                    0.9272553858868718,
                    0.9490087589965929,
                    0.9386366668380405,
                    0.9451870222344808,
                    0.9068129345683232,
                    0.999603119488137,
                    0.9982727468570775,
                    0.9266567584575098,
                    0.9103844303128251,
                    0.9982220862451303,
                    0.9350921631083402,
                    0.9350291532872815,
                    0.9833478156946988,
                    0.8901912968489697
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n6 * 3 = 18 (left: 11 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 6 11",
                "ys": [
                    "11 - 1 = 10 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 * 1 = 6 (left: 3 6 11)\n6 * 3 = 18 (left: 11 18)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 3 6 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 951,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 62754,
            "prompt_tokens": 878797,
            "cost": 0.30630459
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 3 5 12)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n",
                    "10 - 5 = 5 (left: 5 12 13)\n"
                ],
                "values": [
                    0.9519944616075596,
                    0.9400186287362776,
                    0.9930180364730342,
                    0.9616987661796659,
                    0.9883105229565816
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 7 10 13)\n",
                    "10 - 5 = 5 (left: 5 12 13)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 10 12 13",
                "ys": [
                    "12 - 5 = 7 (left: 7 10 13)\n",
                    "10 - 5 = 5 (left: 5 12 13)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n"
                ],
                "new_ys": [
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 7 = 6 (left: 6 10)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "10 - 5 = 5 (left: 5 12 13)\n13 - 12 = 1 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 5 = 5 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n1 * 5 = 5 (left: 5 10)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 / 5 = 2 (left: 1 2)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 1 = 9 (left: 5 9)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 / 1 = 10 (left: 5 10)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n5 * 3 = 15 (left: 12 15)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 5)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n5 - 2 = 3 (left: 3 13)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 2 = 11 (left: 5 11)\n"
                ],
                "values": [
                    0.9980464648964198,
                    0.9717551216518702,
                    0.9858608487350853,
                    0.9798345805001649,
                    0.9992035671602745,
                    0.9168142985784941,
                    0.9808758108528618,
                    0.9717655991766173,
                    0.911020754445536,
                    0.9851247962281808,
                    0.945488876918841,
                    0.950941422096513,
                    0.9222377145607953,
                    0.9318036158589149,
                    0.9999391154107587,
                    0.9234044155343922,
                    0.9341596389060431
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 5 = 5 (left: 1 5)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 10 12 13",
                "ys": [
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 5 = 5 (left: 1 5)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 10 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 952,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 64225,
            "prompt_tokens": 899852,
            "cost": 0.31360754
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 2 3)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n"
                ],
                "values": [
                    0.9207396215198669,
                    0.9861990724257893,
                    0.9736266743346995,
                    0.9724822455292302
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n",
                    "6 / 6 = 1 (left: 1 2 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 6",
                "ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n",
                    "6 / 6 = 1 (left: 1 2 3)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n6 - 2 = 4 (left: 2 4)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 + 6 = 8 (left: 2 8)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n18 / 6 = 3 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n6 - 2 = 4 (left: 4 18)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n6 / 2 = 3 (left: 3 18)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n6 * 2 = 12 (left: 12 18)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n18 - 6 = 12 (left: 2 12)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "6 / 6 = 1 (left: 1 2 3)\n3 * 2 = 6 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 2 3)\n2 * 1 = 2 (left: 2 3)\n",
                    "6 / 6 = 1 (left: 1 2 3)\n3 - 1 = 2 (left: 2 2)\n"
                ],
                "values": [
                    0.9283109410238791,
                    0.9798045211288536,
                    0.9321644921719958,
                    0.9729481675103622,
                    0.9841626867952937,
                    0.938604662107704,
                    0.9505004008219486,
                    0.9418669038281228,
                    0.9110169310672599,
                    0.9841418212816849,
                    0.9897918863014843,
                    0.9324600360684866,
                    0.9411440960070685,
                    0.9921292476862378,
                    0.973168604558608,
                    0.9123430443581118,
                    0.9784539696317228
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n18 / 6 = 3 (left: 2 3)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 6",
                "ys": [
                    "6 - 2 = 4 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n18 / 6 = 3 (left: 2 3)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 6",
                "ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24"
                ],
                "values": [
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24"
                ]
            }
        ],
        "idx": 953,
        "ys": [
            "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24",
            "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 65593,
            "prompt_tokens": 919450,
            "cost": 0.3204038
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n"
                ],
                "values": [
                    0.9982087071482295,
                    0.9778099558870144,
                    0.981780176708579,
                    0.9280404147356364,
                    0.9852746403678099
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n7 - 2 = 5 (left: 5 6)\n",
                    "12 - 10 = 2 (left: 2 6 7)\n6 / 2 = 3 (left: 3 7)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n12 / 4 = 3 (left: 3 7)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n4 + 7 = 11 (left: 11 12)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n4 * 7 = 28 (left: 12 28)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 4 = 8 (left: 7 8)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n6 * 5 = 30 (left: 10 30)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 6 = 4 (left: 4 5)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n6 - 3 = 3 (left: 3 12)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n"
                ],
                "values": [
                    0.9622251796080241,
                    0.8969504710896088,
                    0.9967347364505327,
                    0.9348292614478173,
                    0.994930119425251,
                    0.9990086347042165,
                    0.9590897294568028,
                    0.9148123412932619,
                    0.9610441177510771,
                    0.9917415330615225,
                    0.9954374400382843,
                    0.9674473294284394,
                    0.9731951054968194,
                    0.9903683883658171,
                    0.9368409541402957,
                    0.919244985781738,
                    0.9725020680120255,
                    0.9563866880316548
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 4 = 8 (left: 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 10 12",
                "ys": [
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 4 = 8 (left: 7 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 7 10 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 954,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 67021,
            "prompt_tokens": 939381,
            "cost": 0.32735597
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n"
                ],
                "values": [
                    0.9911947630640272
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 8 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 / 4 = 2 (left: 2 7)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 4 = 4 (left: 4 7)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 * 4 = 32 (left: 7 32)\n"
                ],
                "values": [
                    0.9958922391457158,
                    0.9444579968341001,
                    0.9464043378297254,
                    0.9492282891305145
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 * 4 = 32 (left: 7 32)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 4 = 4 (left: 4 7)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 / 4 = 2 (left: 2 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 8 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 * 4 = 32 (left: 7 32)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 4 = 4 (left: 4 7)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 / 4 = 2 (left: 2 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "7 8 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 955,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 68013,
            "prompt_tokens": 951299,
            "cost": 0.33166502999999997
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 / 4 = 2 (left: 2 3 6)\n"
                ],
                "values": [
                    0.9804528377876319
                ],
                "select_new_ys": [
                    "8 / 4 = 2 (left: 2 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 8",
                "ys": [
                    "8 / 4 = 2 (left: 2 3 6)\n"
                ],
                "new_ys": [
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n"
                ],
                "values": [
                    0.9503602426405787,
                    0.9800057959419171,
                    0.9541277644018905,
                    0.931636048698977,
                    0.9608359556757372
                ],
                "select_new_ys": [
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 8",
                "ys": [
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 4 6 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 956,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 68953,
            "prompt_tokens": 964569,
            "cost": 0.33628192999999995
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n",
                    "9 - 1 = 8 (left: 7 8 11)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n"
                ],
                "values": [
                    0.9954765947876041,
                    0.9888377246327643,
                    0.9536250512643617,
                    0.9223521600050255,
                    0.8770978628573236
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n",
                    "9 - 1 = 8 (left: 7 8 11)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 9 11",
                "ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n",
                    "9 - 1 = 8 (left: 7 8 11)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n4 - 1 = 3 (left: 3 9)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n4 + 1 = 5 (left: 5 9)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n1 * 4 = 4 (left: 4 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 * 2 = 14 (left: 1 14)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n2 * 1 = 2 (left: 2 7)\n",
                    "9 - 1 = 8 (left: 7 8 11)\n11 - 8 = 3 (left: 3 7)\n",
                    "9 - 1 = 8 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n9 * 7 = 63 (left: 10 63)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n8 * 9 = 72 (left: 11 72)\n"
                ],
                "values": [
                    0.9574048904901122,
                    0.9137992950348773,
                    0.9545284485835701,
                    0.8989788795714649,
                    0.9113276310528473,
                    0.9731503833613903,
                    0.9962544636562004,
                    0.9455842974901603,
                    0.9542645874976452,
                    0.971057931271534,
                    0.9967428604532999,
                    0.9998899641967757,
                    0.9758970582369059,
                    0.930301922845642,
                    0.9995381644338862,
                    0.9677026930269103,
                    0.8846576498806203
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "9 - 1 = 8 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)\n",
                    "7 + 1 = 8 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "9 - 1 = 8 (left: 7 8 11)\n11 - 7 = 4 (left: 4 8)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 7 9 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 957,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 70444,
            "prompt_tokens": 985729,
            "cost": 0.34363523
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n",
                    "6 / 2 = 3 (left: 3 3 13)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n",
                    "3 + 6 = 9 (left: 2 9 13)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n"
                ],
                "values": [
                    0.9983638054393464,
                    0.9272721295090126,
                    0.9112948598081921,
                    0.9386200171783782,
                    0.970503875905857
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n",
                    "3 + 6 = 9 (left: 2 9 13)\n",
                    "6 / 2 = 3 (left: 3 3 13)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n",
                    "3 + 6 = 9 (left: 2 9 13)\n",
                    "6 / 2 = 3 (left: 3 3 13)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 10 12)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n",
                    "3 + 6 = 9 (left: 2 9 13)\n13 - 9 = 4 (left: 2 4)\n",
                    "6 / 2 = 3 (left: 3 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "6 / 2 = 3 (left: 3 3 13)\n3 * 3 = 9 (left: 9 13)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 13 = 5 (left: 2 5)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n13 - 2 = 11 (left: 11 18)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 2 = 16 (left: 13 16)\n"
                ],
                "values": [
                    0.9996297385293509,
                    0.979476499630349,
                    0.9095909097821742,
                    0.9669920295766534,
                    0.9110477194727387,
                    0.9999927913804972,
                    0.9996883739932133,
                    0.9430670981375919,
                    0.9992145918149942,
                    0.9422222442642244,
                    0.9541986818757938
                ],
                "select_new_ys": [
                    "3 + 6 = 9 (left: 2 9 13)\n13 - 9 = 4 (left: 2 4)\n",
                    "6 / 2 = 3 (left: 3 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "13 - 6 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 13 = 5 (left: 2 5)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 13",
                "ys": [
                    "3 + 6 = 9 (left: 2 9 13)\n13 - 9 = 4 (left: 2 4)\n",
                    "6 / 2 = 3 (left: 3 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "13 - 6 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 13 = 5 (left: 2 5)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 6 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 958,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 71929,
            "prompt_tokens": 1006190,
            "cost": 0.3507932
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 5 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n"
                ],
                "values": [
                    0.9620941117038474,
                    0.9393234537606306,
                    0.9353706803627386
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 5 12",
                "ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "12 / 2 = 6 (left: 2 5 6)\n5 * 6 = 30 (left: 2 30)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 * 2 = 4 (left: 4 7)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 7 = 9 (left: 2 9)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 5 = 2 (left: 2 2)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n5 * 2 = 10 (left: 10 10)\n"
                ],
                "values": [
                    0.9696195864436488,
                    0.8609195400928945,
                    0.9732831009641069,
                    0.9371854944974036,
                    0.9826944604264409,
                    0.9810029295224091,
                    0.9794743183877609,
                    0.9980914501269297,
                    0.9608142912450839,
                    0.9341372500139901,
                    0.9942891669088192,
                    0.9517165531453771
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 7 = 9 (left: 2 9)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 5 12",
                "ys": [
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 7 = 9 (left: 2 9)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 2 5 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 959,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 73094,
            "prompt_tokens": 1022288,
            "cost": 0.35642116
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n"
                ],
                "values": [
                    0.977581039654224,
                    0.9488760395353493,
                    0.9262046746828941,
                    0.9256591086556837
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n5 * 6 = 30 (left: 2 30)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n6 + 6 = 12 (left: 12 13)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n6 * 13 = 78 (left: 6 78)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n6 + 13 = 19 (left: 6 19)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 12 = 1 (left: 1 8)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 8 = 5 (left: 5 12)\n"
                ],
                "values": [
                    0.998761569151063,
                    0.9488681567841055,
                    0.9902112145171593,
                    0.9550870615370324,
                    0.9829501218585615,
                    0.9318676311020699,
                    0.9861797142986407,
                    0.9656998380279717,
                    0.9657385772347932,
                    0.9943296362669619,
                    0.9306903048682768
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 12 = 1 (left: 1 8)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 12 = 1 (left: 1 8)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n6 * 6 = 36 (left: 13 36)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 6 8 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 960,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 74499,
            "prompt_tokens": 1041777,
            "cost": 0.36322869
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "8 8 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 8 8)\n",
                    "12 - 10 = 2 (left: 2 8 8)  \n",
                    "12 - 8 = 4 (left: 4 8 10)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n"
                ],
                "values": [
                    0.9828889180471267,
                    0.9664672320856099,
                    0.9916160159314545,
                    0.9713202663345636
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 8 10)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n",
                    "12 - 10 = 2 (left: 2 8 8)  \n"
                ]
            },
            {
                "step": 1,
                "x": "8 8 10 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 8 10)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n",
                    "12 - 10 = 2 (left: 2 8 8)  \n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 8 = 2 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 4 = 6 (left: 6 8)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n8 - 4 = 4 (left: 4 10)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n8 * 4 = 32 (left: 10 32)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 * 2 = 16 (left: 8 16)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n8 * 2 = 16 (left: 12 16)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "12 - 10 = 2 (left: 2 8 8)  \n8 - 2 = 6 (left: 6 8)\n"
                ],
                "values": [
                    0.9996994532155277,
                    0.939624607587196,
                    0.9340562985582755,
                    0.916598505265861,
                    0.9958395979151496,
                    0.9373699410862895,
                    0.9407851445378991,
                    0.9997227782435001,
                    0.8912461705607869,
                    0.94905564495675,
                    0.9000027360630588,
                    0.9958396346633633
                ],
                "select_new_ys": [
                    "10 - 8 = 2 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 8 = 2 (left: 2 4)\n",
                    "12 - 10 = 2 (left: 2 8 8)  \n8 - 2 = 6 (left: 6 8)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "8 8 10 12",
                "ys": [
                    "10 - 8 = 2 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 8 = 2 (left: 2 4)\n",
                    "12 - 10 = 2 (left: 2 8 8)  \n8 - 2 = 6 (left: 6 8)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "8 8 10 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 961,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 75949,
            "prompt_tokens": 1061568,
            "cost": 0.37016726
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n"
                ],
                "values": [
                    0.9997329498208373
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 1 = 4 (left: 3 4)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 * 3 = 15 (left: 1 15)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n"
                ],
                "values": [
                    0.9490096967228046,
                    0.9521125789011144,
                    0.949305663059097,
                    0.8989079469758442
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 * 3 = 15 (left: 1 15)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 1 = 4 (left: 3 4)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 * 3 = 15 (left: 1 15)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 1 = 4 (left: 3 4)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 3 8 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 962,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 76753,
            "prompt_tokens": 1073223,
            "cost": 0.37419851
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ],
                "values": [
                    0.9988216339746214,
                    0.9456744689882872
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 7 10",
                "ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n"
                ],
                "values": [
                    0.9316394506402536,
                    0.9376679160261964,
                    0.9337915952108827,
                    0.9845302106833157,
                    0.9655875286480065,
                    0.9714089794595078,
                    0.9403668171704643
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 7 10",
                "ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 7 10",
                "ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - 7) * (4 + 4) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - 7) * (4 + 4) = 24"
                ]
            }
        ],
        "idx": 963,
        "ys": [
            "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - 7) * (4 + 4) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 77851,
            "prompt_tokens": 1088823,
            "cost": 0.37961831
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n"
                ],
                "values": [
                    0.9971162118640023,
                    0.937770586144904
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 3 6)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 * 3 = 21 (left: 1 21)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 7 = 6 (left: 6 9)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n7 + 9 = 16 (left: 13 16)\n"
                ],
                "values": [
                    0.9990049216361361,
                    0.9554066670274876,
                    0.892426963346018,
                    0.9990456628818799,
                    0.9343253517917611,
                    0.9551507738247095
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 3 6)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n7 + 9 = 16 (left: 13 16)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 7 = 6 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 10 13",
                "ys": [
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 3 6)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n7 + 9 = 16 (left: 13 16)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 7 = 6 (left: 6 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 7 10 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 964,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 78971,
            "prompt_tokens": 1104301,
            "cost": 0.38502937
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n"
                ],
                "values": [
                    0.9870960958840115
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 9 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 3 9)\n"
                ],
                "values": [
                    0.9746006174564191,
                    0.9317480688272914,
                    0.9369223168769353,
                    0.9667520159318929,
                    0.9309338563525531
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 9 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n3 - 1 = 2 (left: 2 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 3 9)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 9 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (9 - 1) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (9 - 1) = 24"
                ]
            }
        ],
        "idx": 965,
        "ys": [
            "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (9 - 1) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 79862,
            "prompt_tokens": 1117251,
            "cost": 0.38950597
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 3 = 8 (left: 3 4 8)\n",
                    "11 - 4 = 7 (left: 3 3 7)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n",
                    "3 * 11 = 33 (left: 3 4 33)\n"
                ],
                "values": [
                    0.9489387803254421,
                    0.9939056809681084,
                    0.9218506075366989,
                    0.9807636095483516,
                    0.9225650883586862
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 3 3 7)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n",
                    "3 * 11 = 33 (left: 3 4 33)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 3 3 7)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n",
                    "3 * 11 = 33 (left: 3 4 33)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n11 - 12 = -1 (left: 3 -1)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n12 - 3 = 9 (left: 9 11)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 / 4 = 2 (left: 2 3)\n",
                    "3 * 11 = 33 (left: 3 4 33)\n33 / 3 = 11 (left: 4 11)\n",
                    "3 * 11 = 33 (left: 3 4 33)\n33 - 4 = 29 (left: 3 29)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n7 - 3 = 4 (left: 4 11)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n7 - 3 = 4 (left: 4 11)  \n",
                    "3 + 4 = 7 (left: 3 7 11)\n11 - 3 = 8 (left: 7 8)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n11 - 7 = 4 (left: 3 4)\n"
                ],
                "values": [
                    0.991890472882298,
                    0.9989295300372039,
                    0.9496976348135497,
                    0.9280785735003632,
                    0.9845428630088158,
                    0.9086719250090037,
                    0.9846379728306963,
                    0.9516395721141411,
                    0.9436432499940324,
                    0.9668514052591166,
                    0.9653612456540863,
                    0.8911176933861316,
                    0.912837533728451,
                    0.9988877431635004
                ],
                "select_new_ys": [
                    "3 * 4 = 12 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n11 - 7 = 4 (left: 3 4)\n",
                    "11 - 4 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n11 - 12 = -1 (left: 3 -1)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 4 11",
                "ys": [
                    "3 * 4 = 12 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "3 + 4 = 7 (left: 3 7 11)\n11 - 7 = 4 (left: 3 4)\n",
                    "11 - 4 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                    "3 * 4 = 12 (left: 3 11 12)\n11 - 12 = -1 (left: 3 -1)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 4 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 966,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 81342,
            "prompt_tokens": 1137429,
            "cost": 0.39658203000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 7 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 - 2 = 3 (left: 3 7 7)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n"
                ],
                "values": [
                    0.899142320963498,
                    0.9949124200395085,
                    0.9037990058270354,
                    0.9797920265067288,
                    0.8981240318513085
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 2 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n",
                    "5 - 2 = 3 (left: 3 7 7)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 7 7",
                "ys": [
                    "7 - 5 = 2 (left: 2 2 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n",
                    "5 - 2 = 3 (left: 3 7 7)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 2 7)\n2 * 2 = 4 (left: 4 7)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 + 7 = 9 (left: 2 9)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 * 7 = 35 (left: 5 35)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 7 = 12 (left: 5 12)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n7 - 5 = 2 (left: 5 2)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 7 10)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n7 - 2 = 5 (left: 5 12)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n2 * 7 = 14 (left: 12 14)\n",
                    "5 - 2 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "5 - 2 = 3 (left: 3 7 7)\n7 / 7 = 1 (left: 1 3)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n"
                ],
                "values": [
                    0.9379724622179444,
                    0.9641807579243874,
                    0.9900160571849184,
                    0.9459134336332048,
                    0.9731569145183656,
                    0.9832386630678474,
                    0.9448545511728561,
                    0.9911351798833671,
                    0.8800196323289793,
                    0.9926710000598248,
                    0.9496003203024382,
                    0.9630968848407443,
                    0.9275200687358857,
                    0.9807339187690278,
                    0.9522460640743698,
                    0.9995692312453384
                ],
                "select_new_ys": [
                    "5 * 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 7 = 12 (left: 5 12)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 7 7",
                "ys": [
                    "5 * 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n",
                    "5 + 7 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 7 = 12 (left: 5 12)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 7 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 967,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 82770,
            "prompt_tokens": 1157310,
            "cost": 0.40352069999999995
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 3 3 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n"
                ],
                "values": [
                    0.9921920376589647,
                    0.9831304861204657,
                    0.9978754839649793,
                    0.937581801046015,
                    0.955341868418184
                ],
                "select_new_ys": [
                    "10 - 3 = 7 (left: 7 9 13)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 10 13",
                "ys": [
                    "10 - 3 = 7 (left: 7 9 13)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n"
                ],
                "new_ys": [
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 7 = 6 (left: 6 9)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n7 + 9 = 16 (left: 13 16)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n3 * 9 = 27 (left: 3 27)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n3 - 3 = 0 (left: 0 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 3 = 7 (left: 4 7)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n13 - 10 = 3 (left: 3 3)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n13 - 3 = 10 (left: 10 10)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n10 - 3 = 7 (left: 7 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n13 - 6 = 7 (left: 7 10)\n"
                ],
                "values": [
                    0.9974860898980785,
                    0.9463680075527571,
                    0.9553485271727734,
                    0.9442970213679399,
                    0.9428985798645013,
                    0.9874862098686984,
                    0.9542153146599915,
                    0.9350374871826576,
                    0.9998942945410078,
                    0.9958754116888976,
                    0.9997142096559369,
                    0.9354130616239543,
                    0.9656169054831608,
                    0.9998342313508936,
                    0.9367065123972204,
                    0.934553737024966
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n13 - 10 = 3 (left: 3 3)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 3 = 7 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 9 10 13",
                "ys": [
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "9 - 6 = 3 (left: 3 10 13)\n13 - 10 = 3 (left: 3 3)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 3 = 7 (left: 4 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 9 10 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 968,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 84276,
            "prompt_tokens": 1178300,
            "cost": 0.4108446
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n"
                ],
                "values": [
                    0.9944730603307432,
                    0.9369773680685399,
                    0.9340519807717164,
                    0.9265171839462292
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 7",
                "ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "7 - 3 = 4 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "7 - 3 = 4 (left: 2 4 4)\n4 / 2 = 2 (left: 2 4)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n2 * 3 = 6 (left: 3 6)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 4 = 17 (left: 2 17)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 / 2 = 10.5 (left: 4 10.5)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 / 4 = 5.25 (left: 2 5.25)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 2 = 19 (left: 4 19)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 7 10)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n7 - 2 = 5 (left: 5 12)\n"
                ],
                "values": [
                    0.9993255570382337,
                    0.9682986765327596,
                    0.9432700501231117,
                    0.9731498221621852,
                    0.9972533558140687,
                    0.9275433951984778,
                    0.9494560512523055,
                    0.9977557106686865,
                    0.9593695282615847,
                    0.9773294835300531,
                    0.929231973650673,
                    0.982855599314755,
                    0.949600108723125,
                    0.9630969643096744
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 4 = 17 (left: 2 17)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 / 4 = 5.25 (left: 2 5.25)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 7",
                "ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 4 = 17 (left: 2 17)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 / 4 = 5.25 (left: 2 5.25)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 4 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 969,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 85768,
            "prompt_tokens": 1198421,
            "cost": 0.41791847000000004
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.9962975370341011
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n4 * 4 = 16 (left: 4 16)\n",
                    "12 - 8 = 4 (left: 4 4 4)\n4 + 4 = 8 (left: 4 8)\n"
                ],
                "values": [
                    0.999090759712733,
                    0.9462590902790915
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n4 * 4 = 16 (left: 4 16)\n",
                    "12 - 8 = 4 (left: 4 4 4)\n4 + 4 = 8 (left: 4 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n4 * 4 = 16 (left: 4 16)\n",
                    "12 - 8 = 4 (left: 4 4 4)\n4 + 4 = 8 (left: 4 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 4 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 970,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 86348,
            "prompt_tokens": 1206283,
            "cost": 0.42067920999999997
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 1 2 4)\n"
                ],
                "values": [
                    0.9625127013906277
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 1 2 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 1 2 4)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 + 1 = 5 (left: 2 5)\n"
                ],
                "values": [
                    0.933323720413277,
                    0.9920135993672078,
                    0.9405053747821638,
                    0.9763808095235855,
                    0.9085734013553055
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 + 1 = 5 (left: 2 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 + 1 = 5 (left: 2 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 6 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 971,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 87303,
            "prompt_tokens": 1219849,
            "cost": 0.42539253
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n"
                ],
                "values": [
                    0.9997175452807527,
                    0.9667171679518944,
                    0.9831689291468234,
                    0.9434855802281584
                ],
                "select_new_ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 12 12",
                "ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n"
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 5 = 6 (left: 1 6)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 * 5 = 5 (left: 1 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 * 1 = 1 (left: 1 5)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n7 - 1 = 6 (left: 6 12)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n1 * 7 = 7 (left: 7 12)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n12 / 1 = 12 (left: 7 12)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n12 / 7 = 1 (left: 1 1)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n12 / 2.4 = 5 (left: 1 5)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n12 / 1 = 12 (left: 2.4 12)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n2.4 * 1 = 2.4 (left: 2.4 12)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n1 * 5 = 5 (left: 2.4 5)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n12 - 2.4 = 9.6 (left: 1 9.6)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n12 - 11 = 1 (left: 1 5)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n11 - 5 = 6 (left: 6 12)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n12 - 5 = 7 (left: 7 11)\n"
                ],
                "values": [
                    0.9969870078572156,
                    0.9615455023663433,
                    0.9735546977682391,
                    0.965917249273175,
                    0.9999687067624684,
                    0.9441915690774718,
                    0.9113008795880653,
                    0.9578766317220272,
                    0.8995674875277314,
                    0.9992197425946628,
                    0.9042648507178557,
                    0.9461036317157414,
                    0.9329269535000032,
                    0.9580671913534893,
                    0.9659444260170064,
                    0.9467013459500214,
                    0.9901935980259555
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n12 / 2.4 = 5 (left: 1 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n12 - 5 = 7 (left: 7 11)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 * 5 = 5 (left: 1 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 12 12",
                "ys": [
                    "12 - 5 = 7 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "12 / 5 = 2.4 (left: 1 2.4 12)\n12 / 2.4 = 5 (left: 1 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "12 - 1 = 11 (left: 5 11 12)\n12 - 5 = 7 (left: 7 11)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 * 5 = 5 (left: 1 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 5 12 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 972,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 88658,
            "prompt_tokens": 1239513,
            "cost": 0.43219230999999997
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n"
                ],
                "values": [
                    0.9639531271200605,
                    0.9443414090020613,
                    0.9447061840981609,
                    0.9444245389417337,
                    0.8792323229274523
                ],
                "select_new_ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 6 8",
                "ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n"
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 6 = 24 (left: 8 24)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 8 = 22 (left: 6 22)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n8 - 6 = 2 (left: 2 30)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n5 - 2 = 3 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n6 / 2 = 3 (left: 3 5)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 * 1 = 6 (left: 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n12 - 8 = 4 (left: 4 5)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n12 - 5 = 7 (left: 7 8)\n"
                ],
                "values": [
                    0.9987695346863344,
                    0.9675061413667831,
                    0.9728993297965524,
                    0.9111957772072737,
                    0.9687687070979297,
                    0.9133265043365001,
                    0.9671173284121224,
                    0.9420598346456063,
                    0.895568962865073,
                    0.9371071899440578,
                    0.9073158528263459,
                    0.991628850157377,
                    0.9841470912612559,
                    0.9958330640761066,
                    0.9764906624156505
                ],
                "select_new_ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n12 - 8 = 4 (left: 4 5)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n12 - 5 = 7 (left: 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 6 8",
                "ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n12 - 8 = 4 (left: 4 5)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 + 6 = 12 (left: 5 8 12)\n12 - 5 = 7 (left: 7 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 6 6 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 973,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 90139,
            "prompt_tokens": 1260289,
            "cost": 0.43943093
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 7 7 8)\n",
                    "11 - 8 = 3 (left: 3 7 7)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "7 + 7 = 14 (left: 8 11 14)\n"
                ],
                "values": [
                    0.9707572746972083,
                    0.9597650480008189,
                    0.9529368999059834,
                    0.989223781695615,
                    0.9620949593260114
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "11 - 7 = 4 (left: 7 7 8)\n",
                    "7 + 7 = 14 (left: 8 11 14)\n",
                    "11 - 8 = 3 (left: 3 7 7)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 7 8 11",
                "ys": [
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "11 - 7 = 4 (left: 7 7 8)\n",
                    "7 + 7 = 14 (left: 8 11 14)\n",
                    "11 - 8 = 3 (left: 3 7 7)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n4 + 7 = 11 (left: 8 11)\n",
                    "11 - 7 = 4 (left: 7 7 8)\n8 - 7 = 1 (left: 1 7)\n",
                    "11 - 7 = 4 (left: 7 7 8)\n7 + 7 = 14 (left: 8 14)\n",
                    "11 - 7 = 4 (left: 7 7 8)\n7 + 8 = 15 (left: 7 15)\n",
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n",
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 8 = 6 (left: 6 11)\n",
                    "11 - 8 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "11 - 8 = 3 (left: 3 7 7)\n7 / 7 = 1 (left: 1 3)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n7 - 1 = 6 (left: 6 11)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n11 - 1 = 10 (left: 7 10)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n11 - 7 = 4 (left: 1 4)\n"
                ],
                "values": [
                    0.9875035983704115,
                    0.9552290158822777,
                    0.9908599149005504,
                    0.9214940250037242,
                    0.9197866825312419,
                    0.9580297088576278,
                    0.9119535500678373,
                    0.9489683125278384,
                    0.9998413907692674,
                    0.9305659401847636,
                    0.9900655975533093,
                    0.9420008081945489,
                    0.9337669345187888,
                    0.9414435679388754,
                    0.999122341486257
                ],
                "select_new_ys": [
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n11 - 7 = 4 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 8 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 7 8 11",
                "ys": [
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n",
                    "8 - 7 = 1 (left: 1 7 11)\n11 - 7 = 4 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 8 = 3 (left: 3 7 7)\n7 - 3 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n"
                ],
                "new_ys": [
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "7 7 8 11",
                "ys": [
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 + 7 - 11) * 8 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 + 7 - 11) * 8 = 24"
                ]
            }
        ],
        "idx": 974,
        "ys": [
            "7 + 7 = 14 (left: 8 11 14)\n14 - 11 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 + 7 - 11) * 8 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 91620,
            "prompt_tokens": 1281122,
            "cost": 0.44668494000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n",
                    "1 * 3 = 3 (left: 3 7 10)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n"
                ],
                "values": [
                    0.9989831816781911,
                    0.9453539191538838,
                    0.9948704292156978,
                    0.9176326041039448,
                    0.8946835026594718
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n",
                    "1 * 3 = 3 (left: 3 7 10)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 7 10",
                "ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n",
                    "1 * 3 = 3 (left: 3 7 10)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 * 3 = 9 (left: 1 9)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 / 1 = 3 (left: 3 3)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 + 1 = 4 (left: 3 4)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n7 * 1 = 7 (left: 7 7)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n7 - 1 = 6 (left: 6 7)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n7 / 1 = 7 (left: 7 7)\n",
                    "10 - 3 = 7 (left: 1 7 7)\n7 - 7 = 0 (left: 0 1)\n",
                    "1 * 3 = 3 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n",
                    "1 * 3 = 3 (left: 3 7 10)\n10 - 3 = 7 (left: 7 7)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n10 * 1 = 10 (left: 10 10)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n10 / 10 = 1 (left: 1 1)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n10 - 1 = 9 (left: 9 10)\n"
                ],
                "values": [
                    0.9941253357444749,
                    0.9583532903904323,
                    0.9487146877646292,
                    0.9920273767649458,
                    0.9271405911895695,
                    0.9992962244200494,
                    0.9376095916336367,
                    0.9757373877111207,
                    0.9618633560065653,
                    0.9330653834290118,
                    0.999291541638942,
                    0.942351234306742,
                    0.9946592310591313,
                    0.9413759231739062,
                    0.996658419898516
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "1 * 3 = 3 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n10 * 1 = 10 (left: 10 10)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 7 10",
                "ys": [
                    "10 - 1 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "1 * 3 = 3 (left: 3 7 10)\n10 - 7 = 3 (left: 3 3)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n10 - 1 = 9 (left: 9 10)\n",
                    "3 + 7 = 10 (left: 1 10 10)\n10 * 1 = 10 (left: 10 10)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 3 7 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 975,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 93030,
            "prompt_tokens": 1301007,
            "cost": 0.45360489000000004
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n"
                ],
                "values": [
                    0.9966371938291381,
                    0.9508730595552644
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 + 3 = 6 (left: 3 6)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 / 3 = 1 (left: 1 3)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n3 * 4 = 12 (left: 3 12)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n3 + 4 = 7 (left: 3 7)\n"
                ],
                "values": [
                    0.9994481356582905,
                    0.9470143601443254,
                    0.9435093666870173,
                    0.996271747028489,
                    0.9959966923747153,
                    0.9694285744210432
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n3 * 4 = 12 (left: 3 12)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n3 + 4 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 + 3 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n3 * 4 = 12 (left: 3 12)\n",
                    "12 / 3 = 4 (left: 3 3 4)\n3 + 4 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 + 3 = 6 (left: 3 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 9 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 976,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 94150,
            "prompt_tokens": 1316497,
            "cost": 0.45901919
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n"
                ],
                "values": [
                    0.9980079389127329,
                    0.9538320010346022,
                    0.9822820380750126,
                    0.9582403285493521
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 7 10",
                "ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n5 * 3 = 15 (left: 7 15)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 - 3 = 2 (left: 2 7)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 + 3 = 8 (left: 7 8)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 + 7 = 12 (left: 3 12)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n7 - 5 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n3 * 5 = 15 (left: 3 15)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n3 - 3 = 0 (left: 0 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n5 * 7 = 35 (left: 7 35)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n7 / 7 = 1 (left: 1 5)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 / 2 = 5 (left: 3 5)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 3 = 7 (left: 2 7)\n"
                ],
                "values": [
                    0.9775674962354661,
                    0.9875939414133369,
                    0.9782246457404137,
                    0.9467920554626252,
                    0.9500541968514077,
                    0.9715458412408006,
                    0.8972667139889742,
                    0.963606222369212,
                    0.9258227981847319,
                    0.9993084084986031,
                    0.871097315449864,
                    0.9594980168431481,
                    0.8772272447701573,
                    0.9976593298346541,
                    0.9642185664610662,
                    0.9650114432711336
                ],
                "select_new_ys": [
                    "10 - 3 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 - 3 = 2 (left: 2 7)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 + 3 = 8 (left: 7 8)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 * 3 = 15 (left: 7 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 7 10",
                "ys": [
                    "10 - 3 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 - 3 = 2 (left: 2 7)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 + 3 = 8 (left: 7 8)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 * 3 = 15 (left: 7 15)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 7 10",
                "ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (10 - (7 - 5)) * 3 = 24",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 5) * (10 - 2) = 24"
                ],
                "values": [
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (10 - (7 - 5)) * 3 = 24",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 5) * (10 - 2) = 24"
                ]
            }
        ],
        "idx": 977,
        "ys": [
            "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (10 - (7 - 5)) * 3 = 24",
            "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (7 - 5) * (10 - 2) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 95534,
            "prompt_tokens": 1336383,
            "cost": 0.46591081
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 4 2 13)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n",
                    "13 - 12 = 1 (left: 4 10 1)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n",
                    "12 / 4 = 3 (left: 3 10 13)\n"
                ],
                "values": [
                    0.9185893127204386,
                    0.9132530510821126,
                    0.9846149243010567,
                    0.9193726377344456,
                    0.9351919261278053
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 4 10 1)\n",
                    "12 / 4 = 3 (left: 3 10 13)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n",
                    "12 - 10 = 2 (left: 4 2 13)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 10 12 13",
                "ys": [
                    "13 - 12 = 1 (left: 4 10 1)\n",
                    "12 / 4 = 3 (left: 3 10 13)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n",
                    "12 - 10 = 2 (left: 4 2 13)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 4 10 1)\n10 - 4 = 6 (left: 1 6)\n",
                    "13 - 12 = 1 (left: 4 10 1)\n10 - 1 = 9 (left: 4 9)\n",
                    "13 - 12 = 1 (left: 4 10 1)\n4 * 1 = 4 (left: 4 10)\n",
                    "13 - 12 = 1 (left: 4 10 1)\n4 * 10 = 40 (left: 1 40)\n",
                    "12 / 4 = 3 (left: 3 10 13)\n13 - 10 = 3 (left: 3 3)\n",
                    "12 / 4 = 3 (left: 3 10 13)\n13 - 10 = 3 (left: 3 3)  \n",
                    "12 / 4 = 3 (left: 3 10 13)\n10 - 3 = 7 (left: 7 13)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n10 - 9 = 1 (left: 1 12)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n12 - 10 = 2 (left: 2 9)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n12 - 9 = 3 (left: 3 10)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n12 / 9 = 1.333 (left: 1.333 10)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n10 + 9 = 19 (left: 12 19)\n",
                    "12 - 10 = 2 (left: 4 2 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "12 - 10 = 2 (left: 4 2 13)\n13 - 2 = 11 (left: 4 11)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n12 / 4 = 3 (left: 2 3)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n12 - 4 = 8 (left: 2 8)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n12 - 2 = 10 (left: 4 10)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n12 / 2 = 6 (left: 4 6)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n4 - 2 = 2 (left: 2 12)\n"
                ],
                "values": [
                    0.9995130556828431,
                    0.9785946728980536,
                    0.9138450643475927,
                    0.9516347106310058,
                    0.9997138791265635,
                    0.9537017505918064,
                    0.9619429377628672,
                    0.9391246504743974,
                    0.9863277643471319,
                    0.9524639604960257,
                    0.8870961395458321,
                    0.9340015724240687,
                    0.9997657661579421,
                    0.9356059057254387,
                    0.9992350926323511,
                    0.9769449611993032,
                    0.8946263195428809,
                    0.9108822877659238,
                    0.8917519427010935
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 4 2 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "12 / 4 = 3 (left: 3 10 13)\n13 - 10 = 3 (left: 3 3)\n",
                    "13 - 12 = 1 (left: 4 10 1)\n10 - 4 = 6 (left: 1 6)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n12 / 4 = 3 (left: 2 3)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n12 - 10 = 2 (left: 2 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 10 12 13",
                "ys": [
                    "12 - 10 = 2 (left: 4 2 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "12 / 4 = 3 (left: 3 10 13)\n13 - 10 = 3 (left: 3 3)\n",
                    "13 - 12 = 1 (left: 4 10 1)\n10 - 4 = 6 (left: 1 6)\n",
                    "13 - 10 = 3 (left: 4 2 12)\n12 / 4 = 3 (left: 2 3)\n",
                    "13 - 4 = 9 (left: 9 10 12)\n12 - 10 = 2 (left: 2 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 10 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 978,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 96997,
            "prompt_tokens": 1356729,
            "cost": 0.47301353
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n",
                    "10 * 2 = 20 (left: 3 12 20)\n"
                ],
                "values": [
                    0.9992818090047159,
                    0.9813533643202959,
                    0.9681480630778663,
                    0.9116586234235504,
                    0.9247505983882137
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n",
                    "10 * 2 = 20 (left: 3 12 20)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n",
                    "10 * 2 = 20 (left: 3 12 20)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n3 - 2 = 1 (left: 1 2)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 * 3 = 6 (left: 2 6)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n12 / 8 = 1.5 (left: 3 1.5)\n",
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n",
                    "10 * 2 = 20 (left: 3 12 20)\n8 * 3 = 24 (left: 12 24)\n",
                    "10 * 2 = 20 (left: 3 12 20)\n20 / 5 = 4 (left: 3 4 12)\n",
                    "10 * 2 = 20 (left: 3 12 20)\n12 / 3 = 4 (left: 4 20)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n2 * 1.2 = 2.4 (left: 2.4 3)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n2 * 3 = 6 (left: 1.2 6)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n3 - 2 = 1 (left: 1.2 1)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n1.2 * 2 = 2.4 (left: 2.4 3)\n",
                    "12 / 10 = 1.2 (left: 1.2 2 3)\n3 / 1.2 = 2.5 (left: 2 2.5)\n"
                ],
                "values": [
                    0.9048618729233981,
                    0.9946076415412338,
                    0.9990444249581419,
                    0.9834538575566578,
                    0.9987454216380232,
                    0.9824440442250391,
                    0.9078648846251578,
                    0.9998883724066308,
                    0.8834812715315449,
                    0.9356990841705757,
                    0.9388781638298889,
                    0.9577221997714227,
                    0.9818286759944829,
                    0.9366097538484071,
                    0.9435709788311384,
                    0.967489379033896
                ],
                "select_new_ys": [
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 * 3 = 6 (left: 2 6)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 10 12",
                "ys": [
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 * 3 = 6 (left: 2 6)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n"
                ],
                "new_ys": [
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 10 12",
                "ys": [
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 * 2 - 12) * 3 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 * 2 - 12) * 3 = 24"
                ]
            }
        ],
        "idx": 979,
        "ys": [
            "10 * 2 = 20 (left: 3 12 20)\n20 - 12 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 * 2 - 12) * 3 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 98514,
            "prompt_tokens": 1377849,
            "cost": 0.48038463
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 3 6)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n"
                ],
                "values": [
                    0.9426357212981209,
                    0.9738360309205073,
                    0.9681349094919237
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 3 6)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "6 * 4 = 24 (left: 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 6",
                "ys": [
                    "6 - 4 = 2 (left: 2 3 6)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "6 * 4 = 24 (left: 3 6)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "6 * 4 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "6 * 4 = 24 (left: 3 6)\nNone\n"
                ],
                "values": [
                    0.9421427991175716,
                    0.9317522124223528,
                    0.9956978395604158,
                    0.9834677591521485,
                    0.9855127314479135,
                    0.9401637145831215,
                    0.9995036908004613,
                    0.009368156003668138
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 6",
                "ys": [
                    "6 * 4 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 4 6 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 980,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 99613,
            "prompt_tokens": 1392685,
            "cost": 0.48559925
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 8 8)\n",
                    "8 / 8 = 1 (left: 1 5 8)\n"
                ],
                "values": [
                    0.9697514037113483,
                    0.9757896266616433
                ],
                "select_new_ys": [
                    "8 / 8 = 1 (left: 1 5 8)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 8 8",
                "ys": [
                    "8 / 8 = 1 (left: 1 5 8)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n"
                ],
                "new_ys": [
                    "8 / 8 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 / 8 = 1 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 / 3 = 2.666... (left: 2.666... 8)\n"
                ],
                "values": [
                    0.998780848329633,
                    0.9832486823425786,
                    0.9699012383858243,
                    0.8563235141914102
                ],
                "select_new_ys": [
                    "8 / 8 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 / 8 = 1 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 / 3 = 2.666... (left: 2.666... 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 8 8",
                "ys": [
                    "8 / 8 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 / 8 = 1 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 8 8)\n8 / 3 = 2.666... (left: 2.666... 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 8 8 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 981,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 100704,
            "prompt_tokens": 1406586,
            "cost": 0.49055262
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 6 8)\n"
                ],
                "values": [
                    0.9736178054162505
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 6 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 6 8)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n"
                ],
                "values": [
                    0.9957386839232988
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 6 8)\n8 - 6 = 2 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 8 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 982,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 101154,
            "prompt_tokens": 1412253,
            "cost": 0.49257771
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 2 3 5)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n"
                ],
                "values": [
                    0.9682693279595912,
                    0.9503208710447012,
                    0.9176606886816043,
                    0.9831550804410154,
                    0.9743276793034992
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 9",
                "ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n"
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n4 - 3 = 1 (left: 1 2)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n3 * 2 = 6 (left: 4 6)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n5 - 2 = 3 (left: 3 3)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n5 * 2 = 10 (left: 3 10)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n3 + 5 = 8 (left: 2 8)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n3 * 5 = 15 (left: 2 15)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n4 * 3 = 12 (left: 7 12)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n4 + 3 = 7 (left: 7 7)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n3 * 4 = 12 (left: 7 12)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n12 - 9 = 3 (left: 2 3)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n12 / 2 = 6 (left: 6 9)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n12 - 2 = 10 (left: 9 10)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n12 / 9 = 1.333 (left: 2 1.333)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n9 - 2 = 7 (left: 7 12)\n"
                ],
                "values": [
                    0.9692429286875376,
                    0.9629694552455316,
                    0.9735659268209121,
                    0.9444777632175003,
                    0.9421744860219534,
                    0.8914309895202617,
                    0.9866929487354545,
                    0.9556461659152032,
                    0.9068042023236164,
                    0.8902105199448982,
                    0.9687005350998059,
                    0.9340481020534429,
                    0.9174970686666375,
                    0.983076380362864,
                    0.9195856107450726,
                    0.9330482086942598,
                    0.9950562086436968,
                    0.9662656609202215,
                    0.932805022836868,
                    0.9069785231587657,
                    0.9833550073150202
                ],
                "select_new_ys": [
                    "4 * 3 = 12 (left: 2 9 12)\n12 - 9 = 3 (left: 2 3)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n9 - 2 = 7 (left: 7 12)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 9",
                "ys": [
                    "4 * 3 = 12 (left: 2 9 12)\n12 - 9 = 3 (left: 2 3)\n",
                    "9 - 4 = 5 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "4 * 3 = 12 (left: 2 9 12)\n9 - 2 = 7 (left: 7 12)\n",
                    "9 - 2 = 7 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "9 / 3 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 4 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 983,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 102546,
            "prompt_tokens": 1431693,
            "cost": 0.49935771
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n"
                ],
                "values": [
                    0.998604573907941
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 7 11",
                "ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n"
                ],
                "values": [
                    0.9464754512945617,
                    0.922780832317658,
                    0.9697648154582299,
                    0.9406794458019546,
                    0.9608500736335823
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 7 11",
                "ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 * 4 = 24 (left: 2 24)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 6 7 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 984,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 103444,
            "prompt_tokens": 1444321,
            "cost": 0.50375507
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 9 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n"
                ],
                "values": [
                    0.9883458898003572,
                    0.953433247306936,
                    0.9733048293212159,
                    0.9679491795955077,
                    0.955859683165292
                ],
                "select_new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 9 12 12",
                "ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n"
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n5 - 1 = 4 (left: 4 9)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n9 - 1 = 8 (left: 5 8)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n9 / 1 = 9 (left: 5 9)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n5 * 1 = 5 (left: 5 9)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n12 - 9 = 3 (left: 2.4 3)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n12 / 2.4 = 5 (left: 5 9)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n9 - 2.4 = 6.6 (left: 6.6 12)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n12 - 2.4 = 9.6 (left: 9 9.6)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n9 * 2.4 = 21.6 (left: 12 21.6)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n5 * 3 = 15 (left: 12 15)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n3 * 5 = 15 (left: 12 15)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n12 - 3 = 9 (left: 5 9)\n"
                ],
                "values": [
                    0.9981147532372991,
                    0.9459214882737105,
                    0.9307736424749857,
                    0.9263401801753505,
                    0.9713012009769703,
                    0.9929144947643527,
                    0.9864971811606538,
                    0.9702484702120399,
                    0.9215935477934348,
                    0.9299618008398886,
                    0.994318264287264,
                    0.9709786846550751,
                    0.9907742857167627,
                    0.9851085558318322,
                    0.9668250203508724,
                    0.9499640009009621,
                    0.931809918602059,
                    0.9417100904568119
                ],
                "select_new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n12 - 9 = 3 (left: 2.4 3)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n12 / 2.4 = 5 (left: 5 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 9 12 12",
                "ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n12 - 9 = 3 (left: 2.4 3)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 / 5 = 2.4 (left: 2.4 9 12)\n12 / 2.4 = 5 (left: 5 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 9 12 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 985,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 104930,
            "prompt_tokens": 1464509,
            "cost": 0.51084043
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n",
                    "12 / 7 = 1 (left: 1 1 2)\n",
                    "12 - 2 = 10 (left: 1 7 10)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n"
                ],
                "values": [
                    0.9845631040126631,
                    0.9743266337860952,
                    0.9326635097167779,
                    0.9541065367501647,
                    0.927451558822952
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n",
                    "12 - 2 = 10 (left: 1 7 10)\n",
                    "12 / 7 = 1 (left: 1 1 2)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n",
                    "12 - 2 = 10 (left: 1 7 10)\n",
                    "12 / 7 = 1 (left: 1 1 2)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 * 2 = 10 (left: 1 10)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "12 - 2 = 10 (left: 1 7 10)\n10 - 7 = 3 (left: 1 3)\n",
                    "12 - 2 = 10 (left: 1 7 10)\n10 - 1 = 9 (left: 7 9)\n",
                    "12 / 7 = 1 (left: 1 1 2)\n1 + 1 = 2 (left: 2 2)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n12 - 2 = 10 (left: 7 10)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n7 - 2 = 5 (left: 5 12)\n"
                ],
                "values": [
                    0.973025484609683,
                    0.9927781813496934,
                    0.9432629246476048,
                    0.9811493846675212,
                    0.9921122720085933,
                    0.9547128526403983,
                    0.9999752237423575,
                    0.955180809891992,
                    0.9974683741711243,
                    0.9343805640634613
                ],
                "select_new_ys": [
                    "12 / 7 = 1 (left: 1 1 2)\n1 + 1 = 2 (left: 2 2)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "12 - 2 = 10 (left: 1 7 10)\n10 - 7 = 3 (left: 1 3)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 12",
                "ys": [
                    "12 / 7 = 1 (left: 1 1 2)\n1 + 1 = 2 (left: 2 2)\n",
                    "2 * 1 = 2 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "12 - 2 = 10 (left: 1 7 10)\n10 - 7 = 3 (left: 1 3)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 7 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 986,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 106415,
            "prompt_tokens": 1485221,
            "cost": 0.51806617
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n",
                    "5 * 4 = 20 (left: 2 6 20)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n"
                ],
                "values": [
                    0.980313762733247,
                    0.956896564787774,
                    0.9151354827719078,
                    0.9448197916329235,
                    0.936974775737514
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n",
                    "5 * 4 = 20 (left: 2 6 20)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 6",
                "ys": [
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n",
                    "5 * 4 = 20 (left: 2 6 20)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n"
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n4 * 3 = 12 (left: 6 12)\n",
                    "5 * 4 = 20 (left: 2 6 20)\n20 - 6 = 14 (left: 2 14)\n",
                    "5 * 4 = 20 (left: 2 6 20)\n6 - 2 = 4 (left: 4 20)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n",
                    "6 - 5 = 1 (left: 1 2 4)\n1 + 2 = 3 (left: 3 4)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 * 5 = 10 (left: 2 10)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 * 2 = 4 (left: 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 2 = 4 (left: 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 5 = 7 (left: 2 7)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n5 - 2 = 3 (left: 2 3)\n"
                ],
                "values": [
                    0.9845171936754739,
                    0.9904229237894914,
                    0.9922294184623257,
                    0.9533093838332966,
                    0.9275049162814787,
                    0.998568927279958,
                    0.9400143994761351,
                    0.9776916851884814,
                    0.9535434823464167,
                    0.9498256406340437,
                    0.8828643927180995,
                    0.9233629594482606,
                    0.9497809410637345,
                    0.9668765911403843,
                    0.9537686629924319,
                    0.9955395631601801,
                    0.9484119162724365
                ],
                "select_new_ys": [
                    "5 * 4 = 20 (left: 2 6 20)\n20 - 6 = 14 (left: 2 14)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 5 = 7 (left: 2 7)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 6",
                "ys": [
                    "5 * 4 = 20 (left: 2 6 20)\n20 - 6 = 14 (left: 2 14)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 5 = 7 (left: 2 7)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 5 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 987,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 107827,
            "prompt_tokens": 1504952,
            "cost": 0.52494674
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n"
                ],
                "values": [
                    0.9531857118426547,
                    0.9304201273611711,
                    0.9096816038378285
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 10)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n5 * 3 = 15 (left: 13 15)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n5 - 3 = 2 (left: 2 13)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n5 + 3 = 8 (left: 8 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 / 8 = 1 (left: 1 5)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n5 + 8 = 13 (left: 8 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8 8)\n"
                ],
                "values": [
                    0.9431860202004619,
                    0.9973922904422435,
                    0.9996689329674647,
                    0.9473872613220007,
                    0.9313976498524756,
                    0.9142589709306574,
                    0.9450674859170387,
                    0.9236951951016377,
                    0.9914616455245736,
                    0.9732903922971322
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8 8)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n5 * 3 = 15 (left: 13 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 8 13",
                "ys": [
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8 8)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n5 * 3 = 15 (left: 13 15)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 8 13",
                "ys": [
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 5) * (8 - 5) = 24",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24"
                ],
                "values": [
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 5) * (8 - 5) = 24",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24"
                ]
            }
        ],
        "idx": 988,
        "ys": [
            "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 5) * (8 - 5) = 24",
            "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 109155,
            "prompt_tokens": 1523898,
            "cost": 0.53152296
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 3 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n"
                ],
                "values": [
                    0.9934992870981845,
                    0.9727325449524282,
                    0.9578669093813668,
                    0.9172271805515888,
                    0.9276023956052319
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 3 10",
                "ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 * 5 = 15 (left: 3 15)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n3 - 2 = 1 (left: 1 4)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 * 2 = 8 (left: 3 8)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n6 * 2 = 12 (left: 10 12)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n6 / 2 = 3 (left: 3 10)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n"
                ],
                "values": [
                    0.9853019189669265,
                    0.9549442348574765,
                    0.9887017037249862,
                    0.9996300067603604,
                    0.9524203824144589,
                    0.9270045328794717,
                    0.9670010159294082,
                    0.8987931761864172,
                    0.8816134569196731,
                    0.9344172675813389,
                    0.9188084539503522,
                    0.9399284048484958,
                    0.906568161277217,
                    0.9457073007646281
                ],
                "select_new_ys": [
                    "10 - 3 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n",
                    "10 - 2 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 * 5 = 15 (left: 3 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 3 10",
                "ys": [
                    "10 - 3 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n",
                    "10 - 2 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "10 - 6 = 4 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 * 5 = 15 (left: 3 15)\n"
                ],
                "new_ys": [
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 3 10",
                "ys": [
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + (10 / 2))) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + (10 / 2))) = 24"
                ]
            }
        ],
        "idx": 989,
        "ys": [
            "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (3 + (10 / 2))) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 110619,
            "prompt_tokens": 1544475,
            "cost": 0.53868915
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 4 4 8)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n"
                ],
                "values": [
                    0.9637559028852603,
                    0.9507399937980878,
                    0.9810657033260645,
                    0.9709594137619528,
                    0.9568384966738771
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 3 4 4)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 3 4 4)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n4 + 4 = 8 (left: 8 8)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n8 / 4 = 2 (left: 2 4)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n4 * 4 = 16 (left: 8 16)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n4 + 8 = 12 (left: 4 12)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n3 * 2 = 6 (left: 6 12)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n8 * 3 = 24 (left: 3 24)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n8 / 3 = 2 (left: 2 3 3)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n3 * 8 = 24 (left: 3 24)\n"
                ],
                "values": [
                    0.995410046080251,
                    0.9349493642512823,
                    0.9799719383824576,
                    0.976703494929742,
                    0.9697339428149436,
                    0.9353917827869829,
                    0.9883602671415666,
                    0.960458500692339,
                    0.9375724395121872,
                    0.9770171782171965,
                    0.9154421680645467,
                    0.9357415323173399,
                    0.962466252616173,
                    0.9396286157162564,
                    0.9978837848755827,
                    0.9195137616524863,
                    0.9181082716208138,
                    0.9546306666627743,
                    0.9355029289759325,
                    0.9341381908977344,
                    0.9845009291195352,
                    0.8482290144470386,
                    0.8993018926528767
                ],
                "select_new_ys": [
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 8 12",
                "ys": [
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "12 / 4 = 3 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 4 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 990,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 112142,
            "prompt_tokens": 1565308,
            "cost": 0.54598936
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n",
                    "6 * 4 = 24 (left: 2 11)\n"
                ],
                "values": [
                    0.957707978098247,
                    0.904609423176706,
                    0.8763324497840476
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n",
                    "6 * 4 = 24 (left: 2 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 11",
                "ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n",
                    "6 * 4 = 24 (left: 2 11)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n2 * 11 = 22 (left: 2 22)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n2 + 11 = 13 (left: 2 13)\n",
                    "6 * 4 = 24 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "6 * 4 = 24 (left: 2 11)\n2 + 11 = 13 (left: 13)\n"
                ],
                "values": [
                    0.9979214674098161,
                    0.9494934522458037,
                    0.8903556791272526,
                    0.9519503906742581,
                    0.9179910482758484,
                    0.9792824341493795,
                    0.9242869041653962
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "6 * 4 = 24 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "6 * 4 = 24 (left: 2 11)\n2 + 11 = 13 (left: 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 11",
                "ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "6 * 4 = 24 (left: 2 11)\n2 * 11 = 22 (left: 22)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n2 + 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "6 * 4 = 24 (left: 2 11)\n2 + 11 = 13 (left: 13)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 6 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 991,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 113164,
            "prompt_tokens": 1578989,
            "cost": 0.55080743
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n"
                ],
                "values": [
                    0.9994480027240814
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 9",
                "ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n"
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n"
                ],
                "values": [
                    0.9987680633891073
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 8 9",
                "ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 2 8 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 992,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 113614,
            "prompt_tokens": 1584656,
            "cost": 0.5528325199999999
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n",
                    "6 - 5 = 1 (left: 1 1 7)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n"
                ],
                "values": [
                    0.9940318437499737,
                    0.9448476741889614,
                    0.9254667609419573,
                    0.8962058600316212,
                    0.9583870422566181
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n",
                    "6 - 5 = 1 (left: 1 1 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 7",
                "ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n",
                    "6 - 5 = 1 (left: 1 1 7)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n6 - 2 = 4 (left: 1 4)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 * 2 = 12 (left: 1 12)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n5 + 7 = 12 (left: 5 12)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n5 * 7 = 35 (left: 5 35)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n6 - 4 = 2 (left: 2 7)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n6 * 4 = 24 (left: 7 24)\n",
                    "6 - 5 = 1 (left: 1 1 7)\n1 + 1 = 2 (left: 2 7)\n"
                ],
                "values": [
                    0.9338323691910063,
                    0.9361125302053661,
                    0.9928555389358902,
                    0.980331457692774,
                    0.9710450116371337,
                    0.9906964708283483,
                    0.9147647693019504,
                    0.986484862254845,
                    0.9701913292153415,
                    0.968094739456532,
                    0.9728005731429961,
                    0.9717055412010123,
                    0.9348360212025858,
                    0.9356809191357373,
                    0.9827730502331957,
                    0.9957215710354334
                ],
                "select_new_ys": [
                    "6 - 5 = 1 (left: 1 1 7)\n1 + 1 = 2 (left: 2 7)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n6 * 4 = 24 (left: 7 24)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 7",
                "ys": [
                    "6 - 5 = 1 (left: 1 1 7)\n1 + 1 = 2 (left: 2 7)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "7 - 1 = 6 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "6 - 1 = 5 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "5 - 1 = 4 (left: 4 6 7)\n6 * 4 = 24 (left: 7 24)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 5 6 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 993,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 115133,
            "prompt_tokens": 1606016,
            "cost": 0.56027062
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n"
                ],
                "values": [
                    0.9862272992408366,
                    0.9354626582419661,
                    0.9242812203138189,
                    0.9377304206687112
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 10 11",
                "ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n8 * 5 = 40 (left: 11 40)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n5 - 2 = 3 (left: 3 11)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 5 9)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n5 - -1 = 6 (left: 6 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n8 - 5 = 3 (left: -1 3)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n5 * 8 = 40 (left: -1 40)\n"
                ],
                "values": [
                    0.9912445565620925,
                    0.9902725380040074,
                    0.952223691828401,
                    0.9374031012872547,
                    0.9987934603637536,
                    0.9979279961053723,
                    0.9074773604918789,
                    0.9552524298455168,
                    0.9635345937392863,
                    0.9443142379315845,
                    0.902232741175171
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n5 - -1 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 10 11",
                "ys": [
                    "11 - 10 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "10 - 11 = -1 (left: -1 5 8)\n5 - -1 = 6 (left: 6 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 8 10 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 994,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 116553,
            "prompt_tokens": 1626022,
            "cost": 0.56723424
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n"
                ],
                "values": [
                    0.9850883580059971,
                    0.9382477760963145,
                    0.9624723116522657
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 4 = 8 (left: 5 8)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 8 = 4 (left: 4 5 4)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n5 * 4 = 20 (left: 12 20)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n9 - 8 = 1 (left: 1 4)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n9 - 4 = 5 (left: 5 8)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n8 - 4 = 4 (left: 4 9)\n"
                ],
                "values": [
                    0.995847641754414,
                    0.9344967236838253,
                    0.9351216918416466,
                    0.9723151818767516,
                    0.9975199832445392,
                    0.9294117477349265,
                    0.9265671609755676,
                    0.9559010977338374,
                    0.9759672041978382,
                    0.9809153754289668,
                    0.943578663680066
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n9 - 4 = 5 (left: 5 8)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n9 - 8 = 1 (left: 1 4)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 9 12",
                "ys": [
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n9 - 4 = 5 (left: 5 8)\n",
                    "12 - 4 = 8 (left: 4 8 9)\n9 - 8 = 1 (left: 1 4)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 4 9 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 995,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 117825,
            "prompt_tokens": 1643875,
            "cost": 0.57345375
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 2 5)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n",
                    "6 - 2 = 4 (left: 4 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n"
                ],
                "values": [
                    0.9585893608829184,
                    0.9266973142160572,
                    0.9827298919121138,
                    0.9786348904813075,
                    0.9038809236942107
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 4 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n",
                    "6 / 6 = 1 (left: 1 2 5)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 6 6",
                "ys": [
                    "6 - 2 = 4 (left: 4 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n",
                    "6 / 6 = 1 (left: 1 2 5)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n"
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 - 2 = 4 (left: 4 5 6)\n5 + 6 = 11 (left: 4 11)\n",
                    "6 - 2 = 4 (left: 4 5 6)\n5 + 4 = 9 (left: 6 9)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n6 / 6 = 1 (left: 5 12 1)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 6 7)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n5 * 6 = 30 (left: 12 30)\n",
                    "6 / 6 = 1 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "6 / 6 = 1 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "6 / 6 = 1 (left: 1 2 5)\n5 * 2 = 10 (left: 1 10)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 - 2 = 4 (left: 1 4)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 * 2 = 12 (left: 1 12)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n30 / 6 = 5 (left: 2 5)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n6 / 2 = 3 (left: 3 30)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n6 - 2 = 4 (left: 4 30)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n6 * 2 = 12 (left: 12 30)\n"
                ],
                "values": [
                    0.996759652217669,
                    0.8911005443968125,
                    0.8771976227632676,
                    0.9983469144649605,
                    0.8870975558660906,
                    0.9938355104514424,
                    0.9271079994579445,
                    0.9002580127460892,
                    0.9738106130568609,
                    0.9468798852953191,
                    0.9436345729739914,
                    0.9501013985513921,
                    0.9886260732595431,
                    0.9835493375347427,
                    0.9956619472534809,
                    0.9510780843787817,
                    0.9311916740126829,
                    0.9522821824108588
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "6 - 2 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n30 / 6 = 5 (left: 2 5)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 6 7)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 - 2 = 4 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 6 6",
                "ys": [
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "6 - 2 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 5 = 30 (left: 2 6 30)\n30 / 6 = 5 (left: 2 5)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 6 7)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 - 2 = 4 (left: 1 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 6 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 996,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 119267,
            "prompt_tokens": 1664206,
            "cost": 0.58052932
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n"
                ],
                "values": [
                    0.9938015886203777,
                    0.9512785794260749
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 9 12",
                "ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n3 - 2 = 1 (left: 1 9)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 - 2 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 2 = 8 (left: 3 8)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n"
                ],
                "values": [
                    0.9991681308002321,
                    0.9858843870526641,
                    0.8978492474423057,
                    0.9288356883662925,
                    0.9704249340565044,
                    0.9329881783279691,
                    0.9538341458271049,
                    0.9404502205209078,
                    0.9301680678663139
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 9 12",
                "ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (4 * (12 - 9)) = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 * (12 - 9)) = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 - 9) * 4 * 2 = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 9) * 4 * 2 = 24"
                ],
                "values": [
                    0.001,
                    20.0,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 * (12 - 9)) = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 - 9) * 4 * 2 = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 9) * 4 * 2 = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (4 * (12 - 9)) = 24"
                ]
            }
        ],
        "idx": 997,
        "ys": [
            "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 * (12 - 9)) = 24",
            "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 - 9) * 4 * 2 = 24",
            "12 - 9 = 3 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 - 9) * 4 * 2 = 24",
            "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (4 * (12 - 9)) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 120378,
            "prompt_tokens": 1680556,
            "cost": 0.58616592
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 8 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 11 = 2 (left: 2 4 8)\n",
                    "11 - 8 = 3 (left: 3 4 13)\n",
                    "11 - 4 = 7 (left: 7 8 13)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n"
                ],
                "values": [
                    0.9967888839378469,
                    0.934455933612152,
                    0.9426941726910568,
                    0.9836428921400442,
                    0.9379683608065681
                ],
                "select_new_ys": [
                    "13 - 11 = 2 (left: 2 4 8)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n",
                    "11 - 4 = 7 (left: 7 8 13)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n",
                    "11 - 8 = 3 (left: 3 4 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 8 11 13",
                "ys": [
                    "13 - 11 = 2 (left: 2 4 8)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n",
                    "11 - 4 = 7 (left: 7 8 13)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n",
                    "11 - 8 = 3 (left: 3 4 13)\n"
                ],
                "new_ys": [
                    "13 - 11 = 2 (left: 2 4 8)\n8 * 2 = 16 (left: 4 16)\n",
                    "13 - 11 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "13 - 11 = 2 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "13 - 11 = 2 (left: 2 4 8)\n8 / 4 = 2 (left: 2 2)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n5 * 4 = 20 (left: 11 20)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n4 * 5 = 20 (left: 11 20)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "11 - 4 = 7 (left: 7 8 13)\n13 - 7 = 6 (left: 6 8)\n",
                    "11 - 4 = 7 (left: 7 8 13)\n13 - 8 = 5 (left: 5 7)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n13 - 11 = 2 (left: 2 4)\n",
                    "11 - 8 = 3 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)\n",
                    "11 - 8 = 3 (left: 3 4 13)\n13 - 3 = 10 (left: 4 10)\n"
                ],
                "values": [
                    0.9330729149957989,
                    0.9883356769504097,
                    0.9341959694142398,
                    0.9306218835142617,
                    0.9990829072109731,
                    0.9654753645325548,
                    0.9569643451912216,
                    0.9232530172290492,
                    0.9336572677757141,
                    0.9395334333338595,
                    0.996972768381022,
                    0.9995659541388467,
                    0.9990133478663045,
                    0.9480770815922387
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 4 11 13)\n13 - 11 = 2 (left: 2 4)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 8 = 3 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)\n",
                    "11 - 4 = 7 (left: 7 8 13)\n13 - 8 = 5 (left: 5 7)\n",
                    "13 - 11 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 8 11 13",
                "ys": [
                    "8 - 4 = 4 (left: 4 11 13)\n13 - 11 = 2 (left: 2 4)\n",
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 8 = 3 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)\n",
                    "11 - 4 = 7 (left: 7 8 13)\n13 - 8 = 5 (left: 5 7)\n",
                    "13 - 11 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 8 11 13",
                "ys": [
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - (13 - 8)) * 4 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - (13 - 8)) * 4 = 24"
                ]
            }
        ],
        "idx": 998,
        "ys": [
            "13 - 8 = 5 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - (13 - 8)) * 4 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 121967,
            "prompt_tokens": 1702861,
            "cost": 0.5939361700000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n"
                ],
                "values": [
                    0.9925472112226207
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n4 * 3 = 12 (left: 9 12)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 / 3 = 3 (left: 3 4)\n"
                ],
                "values": [
                    0.9975570643906101,
                    0.994124453311517,
                    0.9503348642975552,
                    0.9436378934662961
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n4 * 3 = 12 (left: 9 12)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 / 3 = 3 (left: 3 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n4 * 3 = 12 (left: 9 12)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 / 3 = 3 (left: 3 4)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (13 - 10)) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (13 - 10)) = 24"
                ]
            }
        ],
        "idx": 999,
        "ys": [
            "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: 4 * (9 - (13 - 10)) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 122826,
            "prompt_tokens": 1714936,
            "cost": 0.59814132
        }
    }
]