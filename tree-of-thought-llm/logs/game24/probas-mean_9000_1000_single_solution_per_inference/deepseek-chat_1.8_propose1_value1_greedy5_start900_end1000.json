[
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 5 10 24)\n",
                    "10 - 6 = 4 (left: 4 4 5)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n"
                ],
                "values": [
                    0.9103981240871868,
                    0.9771317123378315,
                    0.9499021547394375,
                    0.943335567273819,
                    0.9327987175026304
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 4 5)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 10",
                "ys": [
                    "10 - 6 = 4 (left: 4 4 5)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n5 - 4 = 1 (left: 1 6)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 - 4 = 2 (left: 2 5)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 * 5 = 30 (left: 4 30)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n30 / 10 = 3 (left: 3 4)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n4 + 10 = 14 (left: 14 30)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n30 - 10 = 20 (left: 4 20)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n30 / 4 = 7.5 (left: 7.5 10)\n",
                    "6 * 5 = 30 (left: 4 10 30)\n10 * 4 = 40 (left: 30 40)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n5 * 6 = 30 (left: 6 30)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n24 - 10 = 14 (left: 5 14)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n24 / 10 = 2.4 (left: 2.4 5)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n10 - 5 = 5 (left: 5 24)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n5 * 10 = 50 (left: 24 50)\n"
                ],
                "values": [
                    0.9726862445367578,
                    0.8899204691077228,
                    0.9881218143298639,
                    0.9476507186614239,
                    0.9081715155123079,
                    0.9977815099725411,
                    0.8934857598458594,
                    0.9339934776571368,
                    0.9260868318153292,
                    0.9349350878809829,
                    0.969654187839651,
                    0.9574796119962163,
                    0.880998635575074,
                    0.988175223717229,
                    0.951700050414415,
                    0.957751815107499,
                    0.9833561917595989,
                    0.9354566986568442
                ],
                "select_new_ys": [
                    "6 * 5 = 30 (left: 4 10 30)\n30 / 10 = 3 (left: 3 4)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n10 - 5 = 5 (left: 5 24)\n",
                    "10 - 6 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 10",
                "ys": [
                    "6 * 5 = 30 (left: 4 10 30)\n30 / 10 = 3 (left: 3 4)\n",
                    "10 - 4 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "10 - 5 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 * 4 = 24 (left: 5 10 24)\n10 - 5 = 5 (left: 5 24)\n",
                    "10 - 6 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 5 6 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 900,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 1468,
            "prompt_tokens": 20684,
            "cost": 0.007199480000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n"
                ],
                "values": [
                    0.9804039335913297,
                    0.939269174280457,
                    0.9334971670605268,
                    0.9329249124217562,
                    0.8806799079056161
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 4 7",
                "ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n"
                ],
                "new_ys": [
                    "7 - 4 = 3 (left: 1 2 3)\n3 * 2 = 6 (left: 1 6)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n3 - 1 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n2 * 3 = 6 (left: 1 6)\n",
                    "7 - 4 = 3 (left: 1 2 3)\n1 + 2 = 3 (left: 3 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n4 + 1 = 5 (left: 5 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n5 * 1 = 5 (left: 4 5)\n",
                    "7 - 2 = 5 (left: 1 4 5)\n5 - 4 = 1 (left: 1 1)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 6 8)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "7 - 1 = 6 (left: 2 4 6)\n4 * 6 = 24 (left: 2 24)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n1 + 2 = 3 (left: 3 7)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n2 * 1 = 2 (left: 2 7)\n"
                ],
                "values": [
                    0.9661242543122055,
                    0.950657537504813,
                    0.9160086686742162,
                    0.9372702620392264,
                    0.9885340588857414,
                    0.9778294655686041,
                    0.9965728054910953,
                    0.8800243220521113,
                    0.9197210647461372,
                    0.9466456053851041,
                    0.9537654366560145,
                    0.9120590807804019,
                    0.9486822621400743,
                    0.9612570545496656,
                    0.8760171107410154,
                    0.9705346094900934,
                    0.9886533777764244,
                    0.9281212322258081,
                    0.9227589113302292
                ],
                "select_new_ys": [
                    "7 - 2 = 5 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 4 7",
                "ys": [
                    "7 - 2 = 5 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "1 + 2 = 3 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "4 - 2 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 4 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 901,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 2906,
            "prompt_tokens": 41551,
            "cost": 0.014415370000000002
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 - 5 = 3 (left: 2 3 11)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n",
                    "11 - 5 = 6 (left: 2 6 8)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n"
                ],
                "values": [
                    0.9570749436431581,
                    0.9646101111662164,
                    0.9674294329817024,
                    0.9741855470311397,
                    0.9270255459515182
                ],
                "select_new_ys": [
                    "11 - 5 = 6 (left: 2 6 8)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 8 11",
                "ys": [
                    "11 - 5 = 6 (left: 2 6 8)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n"
                ],
                "new_ys": [
                    "11 - 5 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "11 - 5 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "11 - 5 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "11 - 5 = 6 (left: 2 6 8)\n6 + 8 = 14 (left: 2 14)\n",
                    "11 - 5 = 6 (left: 2 6 8)\n8 - 6 = 2 (left: 2 2)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n8 - 5 = 3 (left: 3 9)\n",
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 8 = 1 (left: 1 5)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n5 - 2 = 3 (left: 3 3)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n3 * 2 = 6 (left: 5 6)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n3 * 5 = 15 (left: 2 15)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n3 + 5 = 8 (left: 2 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n3 * 2 = 6 (left: 6 11)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n11 - 10 = 1 (left: 1 8)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n11 - 8 = 3 (left: 3 10)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n10 - 8 = 2 (left: 2 11)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n10 + 11 = 21 (left: 8 21)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n10 * 8 = 80 (left: 11 80)\n"
                ],
                "values": [
                    0.9403798117013416,
                    0.9749445476843149,
                    0.9607113471556762,
                    0.889258778614795,
                    0.8790075763947144,
                    0.9964809851089796,
                    0.9488568693620026,
                    0.9640601383836436,
                    0.9752086211998018,
                    0.9571554273355214,
                    0.9195383340345399,
                    0.9367597824472259,
                    0.9684796713056092,
                    0.9910640037183334,
                    0.9649461915018094,
                    0.926655031092887,
                    0.9723738597283886,
                    0.9669356182360247,
                    0.9572803256163883,
                    0.9261132850345936,
                    0.892094550436714
                ],
                "select_new_ys": [
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "11 - 5 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n11 - 10 = 1 (left: 1 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 8 11",
                "ys": [
                    "11 - 2 = 9 (left: 5 8 9)\n9 - 5 = 4 (left: 4 8)\n",
                    "8 - 5 = 3 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "11 - 8 = 3 (left: 2 3 5)\n5 - 3 = 2 (left: 2 2)\n",
                    "11 - 5 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "5 * 2 = 10 (left: 8 10 11)\n11 - 10 = 1 (left: 1 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 8 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 902,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 4323,
            "prompt_tokens": 62065,
            "cost": 0.02151285
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 4 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n",
                    "4 * 3 = 12 (left: 4 12 13)\n"
                ],
                "values": [
                    0.9981394443906024,
                    0.9121208364581075
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n",
                    "4 * 3 = 12 (left: 4 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 4 13",
                "ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n",
                    "4 * 3 = 12 (left: 4 12 13)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n",
                    "4 * 3 = 12 (left: 4 12 13)\n13 - 12 = 1 (left: 1 4)\n"
                ],
                "values": [
                    0.9938100591852611,
                    0.9824462501136313,
                    0.9266467687508543,
                    0.9844546643942588
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "4 * 3 = 12 (left: 4 12 13)\n13 - 12 = 1 (left: 1 4)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 4 13",
                "ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "4 * 3 = 12 (left: 4 12 13)\n13 - 12 = 1 (left: 1 4)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "13 - 4 = 9 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 4 13",
                "ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 4 - 3) * 4 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 4 - 3) * 4 = 24"
                ]
            }
        ],
        "idx": 903,
        "ys": [
            "13 - 4 = 9 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 4 - 3) * 4 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 5296,
            "prompt_tokens": 76194,
            "cost": 0.02639798
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 7 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n"
                ],
                "values": [
                    0.9791217513982633,
                    0.9497477878291423,
                    0.9931516606833762,
                    0.9215583335499703
                ],
                "select_new_ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 9",
                "ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n"
                ],
                "new_ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n6 * 1 = 6 (left: 6 7)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n6 - 1 = 5 (left: 5 7)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n6 / 1 = 6 (left: 6 7)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 6 = 1 (left: 1 1)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n8 - 7 = 1 (left: 1 3)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n8 - 3 = 5 (left: 5 7)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n8 / 7 \u2248 1 (left: 1 3)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n48 / 8 = 6 (left: 7 9 6)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n9 - 7 = 2 (left: 2 48)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n7 + 9 = 16 (left: 16 48)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n7 * 9 = 63 (left: 48 63)\n",
                    "8 * 6 = 48 (left: 7 9 48)\n48 / 8 = 6 (left: 6 7 9)\n"
                ],
                "values": [
                    0.930448830254251,
                    0.919289606455692,
                    0.9130518230866372,
                    0.9909432366406398,
                    0.9702539473561639,
                    0.964691796123689,
                    0.9590082859415939,
                    0.9459602043706226,
                    0.8363688631313436,
                    0.986963525553495,
                    0.9370327620639495,
                    0.9603721168698744,
                    0.9353984290243028,
                    0.9491638059547477,
                    0.9225473048002383,
                    0.9334267002170111,
                    0.9573293020768081
                ],
                "select_new_ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 6 = 1 (left: 1 1)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 9",
                "ys": [
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "9 - 8 = 1 (left: 1 6 7)\n7 - 6 = 1 (left: 1 1)\n",
                    "9 - 6 = 3 (left: 3 7 8)\n7 - 3 = 4 (left: 4 8)\n",
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n"
                ],
                "new_ys": [
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 7 8 9",
                "ys": [
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / (9 - 7)) * 8 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / (9 - 7)) * 8 = 24"
                ]
            }
        ],
        "idx": 904,
        "ys": [
            "9 - 7 = 2 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (6 / (9 - 7)) * 8 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 6580,
            "prompt_tokens": 94961,
            "cost": 0.03287747
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 11 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "values": [
                    0.9803928896367949,
                    0.938378112524554
                ],
                "select_new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 11 11 13",
                "ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n"
                ],
                "new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n2 * 1 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n1 * 2 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n13 - 11 = 2 (left: 2 10)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n10 - 11 = -1 (left: -1 13)\n"
                ],
                "values": [
                    0.9769039253084266,
                    0.9216092843179026,
                    0.9425934324652515,
                    0.9552527160289818,
                    0.9471785176701627,
                    0.9211729498236753,
                    0.9050789886905352
                ],
                "select_new_ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n1 * 2 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n2 * 1 = 2 (left: 2 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 11 11 13",
                "ys": [
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "11 - 1 = 10 (left: 10 11 13)\n11 - 10 = 1 (left: 1 13)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n1 * 2 = 2 (left: 2 11)\n",
                    "13 - 11 = 2 (left: 1 2 11)\n2 * 1 = 2 (left: 2 11)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 11 11 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 905,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 7652,
            "prompt_tokens": 111173,
            "cost": 0.03843391
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 8 = 3 (left: 1 3 10)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n",
                    "11 - 1 = 10 (left: 8 10 10)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n"
                ],
                "values": [
                    0.9693472697390277,
                    0.9835318936424943,
                    0.9629188494823673,
                    0.9719308332833404,
                    0.9661987920520838
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 1 8)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 8 10 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 8 10 11",
                "ys": [
                    "11 - 10 = 1 (left: 1 1 8)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n",
                    "11 - 1 = 10 (left: 8 10 10)\n"
                ],
                "new_ys": [
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 * 1 = 1 (left: 1 8)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 8 = 9 (left: 1 9)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 * 8 = 8 (left: 1 8)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 8 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n9 * 8 = 72 (left: 11 72)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n10 - 3 = 7 (left: 1 7)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n3 * 10 = 30 (left: 1 30)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n10 - 1 = 9 (left: 3 9)\n",
                    "11 - 8 = 3 (left: 1 3 10)\n1 * 3 = 3 (left: 3 10)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n1 + 2 = 3 (left: 3 11)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n2 - 1 = 1 (left: 1 11)\n",
                    "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n"
                ],
                "values": [
                    0.9779740762260413,
                    0.9563735725051635,
                    0.9589737313250278,
                    0.9754816053933465,
                    0.9979489383319606,
                    0.9613237094206905,
                    0.8887285570747211,
                    0.9721581386987509,
                    0.91069500330371,
                    0.9043002138480115,
                    0.9100469538508269,
                    0.9755449633103236,
                    0.9323706197257308,
                    0.9953963847080393,
                    0.8704752742885502,
                    0.9995287061381224
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 8 10 11",
                "ys": [
                    "11 - 1 = 10 (left: 8 10 10)\n10 - 8 = 2 (left: 2 10)\n",
                    "10 - 1 = 9 (left: 8 9 11)\n11 - 9 = 2 (left: 2 8)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n11 - 1 = 10 (left: 2 10)\n",
                    "11 - 10 = 1 (left: 1 1 8)\n1 + 1 = 2 (left: 2 8)\n",
                    "10 - 8 = 2 (left: 1 2 11)\n11 - 2 = 9 (left: 1 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 8 10 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 906,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 9203,
            "prompt_tokens": 132751,
            "cost": 0.045966070000000005
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n"
                ],
                "values": [
                    0.9834048816739098,
                    0.8783887023665226,
                    0.9413784872505685,
                    0.9495033200256641,
                    0.9502091122788469
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 9",
                "ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 2 3 3)\n3 * 2 = 6 (left: 3 6)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n3 + 3 = 6 (left: 2 6)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n2 * 3 = 6 (left: 3 6)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n2 + 3 = 5 (left: 3 5)\n",
                    "9 - 6 = 3 (left: 2 3 3)\n3 + 2 = 5 (left: 3 5)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "6 / 2 = 3 (left: 3 3 9)\n3 + 9 = 12 (left: 3 12)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 7 9)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 * 3 = 18 (left: 2 18)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n"
                ],
                "values": [
                    0.952135647455537,
                    0.9244941457505328,
                    0.9599027527543272,
                    0.931748660330523,
                    0.8886160956055531,
                    0.9316618050108024,
                    0.953531085141899,
                    0.9306922866543108,
                    0.9515383337450928,
                    0.9545213818538102,
                    0.9938068813135241,
                    0.9858916412392046,
                    0.9238556040281523,
                    0.8894488471233557,
                    0.9527697783922612,
                    0.9629732222786038,
                    0.9853229337559495,
                    0.9673794708622832,
                    0.9461735134738393,
                    0.940328590101904,
                    0.9486624285067612,
                    0.9738610224100509,
                    0.9540060830733574,
                    0.9416542302591011
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 9",
                "ys": [
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "9 - 3 = 6 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "9 / 3 = 3 (left: 2 3 6)\n6 - 3 = 3 (left: 2 3)\n"
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 9",
                "ys": [
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * (9 - 3) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * (9 - 3) = 24"
                ]
            }
        ],
        "idx": 907,
        "ys": [
            "6 - 2 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (6 - 2) * (9 - 3) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 10556,
            "prompt_tokens": 152265,
            "cost": 0.052723149999999996
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 5 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n",
                    "5 * 3 = 15 (left: 1 9 15)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n"
                ],
                "values": [
                    0.9972619604744746,
                    0.8935312255607967,
                    0.9229871351072702,
                    0.8866609017091117,
                    0.8960268582596792
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n",
                    "5 * 3 = 15 (left: 1 9 15)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 5 9",
                "ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n",
                    "5 * 3 = 15 (left: 1 9 15)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 1 3 4)\n4 * 3 = 12 (left: 1 12)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n3 - 1 = 2 (left: 2 4)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n4 - 1 = 3 (left: 3 3)\n",
                    "9 - 5 = 4 (left: 1 3 4)\n4 - 3 = 1 (left: 1 1)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n4 * 3 = 12 (left: 9 12)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 / 3 = 3 (left: 3 4)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n3 + 4 = 7 (left: 7 9)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n14 - 3 = 11 (left: 1 11)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n14 - 1 = 13 (left: 3 13)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n3 - 1 = 2 (left: 2 14)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n3 * 1 = 3 (left: 3 14)\n",
                    "5 * 3 = 15 (left: 1 9 15)\n15 - 9 = 6 (left: 1 6)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n9 - 1 = 8 (left: 2 8)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n9 - 2 = 7 (left: 1 7)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n9 * 1 = 9 (left: 2 9)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n9 / 1 = 9 (left: 2 9)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n2 * 1 = 2 (left: 2 9)\n"
                ],
                "values": [
                    0.9237991245468514,
                    0.9090071547542221,
                    0.9499327685525876,
                    0.933747962515028,
                    0.9942830927429519,
                    0.9866235994378934,
                    0.932955319223489,
                    0.9268232922071162,
                    0.8966642480028671,
                    0.9986308367296319,
                    0.8951910261746663,
                    0.9294646594130287,
                    0.9136026029531955,
                    0.9991992267742412,
                    0.9544156392009719,
                    0.984795274354624,
                    0.9123089944841142,
                    0.9304681962183975,
                    0.9379218716930555
                ],
                "select_new_ys": [
                    "5 * 3 = 15 (left: 1 9 15)\n15 - 9 = 6 (left: 1 6)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n14 - 3 = 11 (left: 1 11)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n9 - 2 = 7 (left: 1 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 5 9",
                "ys": [
                    "5 * 3 = 15 (left: 1 9 15)\n15 - 9 = 6 (left: 1 6)\n",
                    "5 + 9 = 14 (left: 1 3 14)\n14 - 3 = 11 (left: 1 11)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "5 - 3 = 2 (left: 1 2 9)\n9 - 2 = 7 (left: 1 7)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 3 5 9",
                "ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (5 - 1) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (5 - 1) = 24"
                ]
            }
        ],
        "idx": 908,
        "ys": [
            "5 - 1 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - 3) * (5 - 1) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 12051,
            "prompt_tokens": 173194,
            "cost": 0.06001848
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n"
                ],
                "values": [
                    0.9933854989575901,
                    0.9519258347958038,
                    0.9482044107386853,
                    0.8971352591609644,
                    0.9034648737901658
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n3 * 5 = 15 (left: 3 15)\n",
                    "12 - 7 = 5 (left: 3 3 5)\n3 + 3 = 6 (left: 5 6)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 + 4 = 7 (left: 7 7)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 * 4 = 12 (left: 7 12)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n4 * 3 = 12 (left: 7 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "7 - 3 = 4 (left: 3 4 12)\n12 - 3 = 9 (left: 4 9)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n12 - 10 = 2 (left: 2 3)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n10 - 3 = 7 (left: 7 12)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n10 + 3 = 13 (left: 12 13)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n10 * 3 = 30 (left: 12 30)\n",
                    "7 + 3 = 10 (left: 3 10 12)\n10 - 12 = -2 (left: -2 3)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 3 = 6 (left: 6 7)\n"
                ],
                "values": [
                    0.9586874755731823,
                    0.8835429873902433,
                    0.9400717474236263,
                    0.9885301104885755,
                    0.9255071228425461,
                    0.9650132825786818,
                    0.9856109548229953,
                    0.8931513638047027,
                    0.9630443554160312,
                    0.9355688320142567,
                    0.9650094746649329,
                    0.9572334999491344,
                    0.9254993269911228,
                    0.9979853462674547,
                    0.9565997557214457,
                    0.8965910671219846,
                    0.8951619747979032,
                    0.8955392293113486,
                    0.9965735934813096,
                    0.9339081246777057
                ],
                "select_new_ys": [
                    "7 + 3 = 10 (left: 3 10 12)\n12 - 10 = 2 (left: 2 3)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 * 4 = 12 (left: 7 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 7 12",
                "ys": [
                    "7 + 3 = 10 (left: 3 10 12)\n12 - 10 = 2 (left: 2 3)\n",
                    "12 - 3 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "12 / 3 = 4 (left: 3 4 7)\n3 * 4 = 12 (left: 7 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 7 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 909,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 13471,
            "prompt_tokens": 192857,
            "cost": 0.06688949
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 7 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n"
                ],
                "values": [
                    0.9950659251749763,
                    0.894630677724317,
                    0.9395068561775104,
                    0.9566771370589897,
                    0.9469381627848064
                ],
                "select_new_ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 7 9",
                "ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n"
                ],
                "new_ys": [
                    "9 - 5 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n4 * 2 = 8 (left: 8 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n4 + 9 = 13 (left: 2 13)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n2 * 4 = 8 (left: 8 9)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n9 - 2 = 7 (left: 4 7)\n",
                    "7 - 5 = 2 (left: 2 4 9)\n4 * 9 = 36 (left: 2 36)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n3 * 5 = 15 (left: 9 15)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n5 * 3 = 15 (left: 9 15)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n45 - 7 = 38 (left: 4 38)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n7 - 4 = 3 (left: 3 45)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n7 * 4 = 28 (left: 28 45)\n"
                ],
                "values": [
                    0.9652559824507977,
                    0.9679892704672697,
                    0.9922551068823828,
                    0.9337823562665465,
                    0.9256843440272906,
                    0.9292686071071744,
                    0.9530452217109346,
                    0.8569915910240857,
                    0.9339516455800861,
                    0.9818938738244422,
                    0.9057132177188796,
                    0.974738490720246,
                    0.939996478107014,
                    0.9345483948695844,
                    0.9167269003277937
                ],
                "select_new_ys": [
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 7 9",
                "ys": [
                    "9 - 7 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "9 - 5 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n"
                ],
                "new_ys": [
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 5 7 9",
                "ys": [
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 * 5) / 7 * 4 = 24"
                ],
                "values": [
                    0.0
                ],
                "select_new_ys": [
                    "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 * 5) / 7 * 4 = 24"
                ]
            }
        ],
        "idx": 910,
        "ys": [
            "9 * 5 = 45 (left: 4 7 45)\n45 / 7 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 * 5) / 7 * 4 = 24"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 15022,
            "prompt_tokens": 212835,
            "cost": 0.07398965
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n"
                ],
                "values": [
                    0.9912517139205427,
                    0.9284198815444276,
                    0.9183171224821143,
                    0.9283701237497937,
                    0.9822702812700974
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "13 - 8 = 5 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "13 - 8 = 5 (left: 1 2 5)\n5 * 2 = 10 (left: 1 10)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n8 * 2 = 16 (left: 12 16)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n12 / 2 = 6 (left: 6 8)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n6 - 1 = 5 (left: 5 13)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n13 - 1 = 12 (left: 4 12)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n13 - 4 = 9 (left: 1 9)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n4 + 1 = 5 (left: 5 13)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n4 * 1 = 4 (left: 4 13)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n16 - 13 = 3 (left: 1 3)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n16 / 1 = 16 (left: 13 16)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n1 * 3 = 3 (left: 3 13)\n",
                    "8 * 2 = 16 (left: 1 13 16)\n13 - 1 = 12 (left: 12 16)\n"
                ],
                "values": [
                    0.9583662584436813,
                    0.9447709047709677,
                    0.945689702555684,
                    0.9984947290802292,
                    0.8963940643758167,
                    0.9141038438471992,
                    0.9661487701292759,
                    0.9909083905231811,
                    0.9239326708403638,
                    0.9500836399384179,
                    0.9962770608434188,
                    0.9693232672184274,
                    0.8814842785764568,
                    0.9497732842861082,
                    0.9995480242693434,
                    0.9092874467741547,
                    0.8517495100274654,
                    0.9566994653926566
                ],
                "select_new_ys": [
                    "8 * 2 = 16 (left: 1 13 16)\n16 - 13 = 3 (left: 1 3)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n13 - 1 = 12 (left: 4 12)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n13 - 4 = 9 (left: 1 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 8 13",
                "ys": [
                    "8 * 2 = 16 (left: 1 13 16)\n16 - 13 = 3 (left: 1 3)\n",
                    "13 - 1 = 12 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n13 - 1 = 12 (left: 4 12)\n",
                    "8 - 2 = 6 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "8 / 2 = 4 (left: 1 4 13)\n13 - 4 = 9 (left: 1 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 8 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 911,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 16524,
            "prompt_tokens": 234378,
            "cost": 0.08145846000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 6 6 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 4 6)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n",
                    "6 * 4 = 24 (left: 6 9 24)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n"
                ],
                "values": [
                    0.9375623511160395,
                    0.926925467501846,
                    0.9324698817859711,
                    0.9365656182076507
                ],
                "select_new_ys": [
                    "9 - 6 = 3 (left: 3 4 6)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n",
                    "6 * 4 = 24 (left: 6 9 24)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 6 6 9",
                "ys": [
                    "9 - 6 = 3 (left: 3 4 6)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n",
                    "6 * 4 = 24 (left: 6 9 24)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n"
                ],
                "new_ys": [
                    "9 - 6 = 3 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 * 1 = 9 (left: 4 9)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n4 * 1 = 4 (left: 4 9)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "6 * 4 = 24 (left: 6 9 24)\n24 - 9 = 15 (left: 6 15)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "6 - 4 = 2 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3)\n"
                ],
                "values": [
                    0.9808294477001056,
                    0.9800793180958212,
                    0.9454950096051901,
                    0.9781033415878151,
                    0.9156789044854626,
                    0.9175578463465704,
                    0.9318087640544394,
                    0.9803380010919476,
                    0.9831145214580647,
                    0.9361975288783488,
                    0.9698421953395285,
                    0.937682962039458
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 * 4 = 24 (left: 6 9 24)\n24 - 9 = 15 (left: 6 15)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 6 6 9",
                "ys": [
                    "6 - 4 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 * 4 = 24 (left: 6 9 24)\n24 - 9 = 15 (left: 6 15)\n",
                    "9 - 6 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 / 6 = 1 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 6 6 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 912,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 17944,
            "prompt_tokens": 254445,
            "cost": 0.08843855
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)\n"
                ],
                "values": [
                    0.9923802570778356,
                    0.9328143026474478
                ],
                "select_new_ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 8",
                "ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)\n"
                ],
                "new_ys": [
                    "8 / 4 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n1 + 2 = 3 (left: 3 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)\n4 - 1 = 3 (left: 3 4)\n",
                    "8 - 4 = 4 (left: 1 4 4)\n4 / 4 = 1 (left: 1 1)\n",
                    "8 - 4 = 4 (left: 1 4 4)\n4 * 4 = 16 (left: 1 16)\n"
                ],
                "values": [
                    0.9768971054495985,
                    0.9599814515163779,
                    0.9705607404822219,
                    0.9653781334253534,
                    0.9141710967683233,
                    0.9786455685840637,
                    0.9534872062615437,
                    0.9398274496367608,
                    0.9024655399989906
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 4 4)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 4 8",
                "ys": [
                    "8 - 4 = 4 (left: 1 4 4)\n4 * 1 = 4 (left: 4 4)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 4 4 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 913,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 19097,
            "prompt_tokens": 270478,
            "cost": 0.09403576000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 1 5 11)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n"
                ],
                "values": [
                    0.9593440837566852,
                    0.9807168391826894,
                    0.9468611591170436
                ],
                "select_new_ys": [
                    "11 - 10 = 1 (left: 1 1 5)\n",
                    "10 - 5 = 5 (left: 1 5 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 10 11",
                "ys": [
                    "11 - 10 = 1 (left: 1 1 5)\n",
                    "10 - 5 = 5 (left: 1 5 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n"
                ],
                "new_ys": [
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 * 1 = 1 (left: 1 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n5 - 1 = 4 (left: 1 4)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 * 5 = 5 (left: 1 5)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 5 = 6 (left: 1 6)\n",
                    "10 - 5 = 5 (left: 1 5 11)\n11 - 5 = 6 (left: 1 6)\n",
                    "10 - 5 = 5 (left: 1 5 11)\n11 - 1 = 10 (left: 5 10)\n",
                    "10 - 5 = 5 (left: 1 5 11)\n5 * 1 = 5 (left: 5 11)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 5 = 6 (left: 6 9)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 9 = 2 (left: 2 5)\n"
                ],
                "values": [
                    0.9908426342499276,
                    0.9223926966251471,
                    0.9638033355341362,
                    0.9629271965603454,
                    0.9344423018117073,
                    0.9994478468188353,
                    0.9333350152557585,
                    0.9245740025611072,
                    0.9719688478054188,
                    0.9801122964549919
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 1 5 11)\n11 - 5 = 6 (left: 1 6)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 9 = 2 (left: 2 5)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 5 = 6 (left: 6 9)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n5 - 1 = 4 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 10 11",
                "ys": [
                    "10 - 5 = 5 (left: 1 5 11)\n11 - 5 = 6 (left: 1 6)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 9 = 2 (left: 2 5)\n",
                    "10 - 1 = 9 (left: 5 9 11)\n11 - 5 = 6 (left: 6 9)\n",
                    "11 - 10 = 1 (left: 1 1 5)\n5 - 1 = 4 (left: 1 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 5 10 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 914,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 20316,
            "prompt_tokens": 287416,
            "cost": 0.09994992
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 3 11)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n"
                ],
                "values": [
                    0.9700565203645378,
                    0.9610908853331026
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 3 11)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 11",
                "ys": [
                    "6 - 4 = 2 (left: 2 3 11)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n3 * 2 = 6 (left: 6 11)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n4 * 5 = 20 (left: 3 20)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n4 * 3 = 12 (left: 5 12)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n5 - 4 = 1 (left: 1 3)\n"
                ],
                "values": [
                    0.9915550748968698,
                    0.9105716110827624,
                    0.9962414787287076,
                    0.9693530052607078,
                    0.8575428067062805,
                    0.9237514798737081,
                    0.923189772021646,
                    0.8994557021091248
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n4 * 3 = 12 (left: 5 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 11",
                "ys": [
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 2 = 9 (left: 3 9)\n",
                    "6 - 4 = 2 (left: 2 3 11)\n11 - 3 = 8 (left: 2 8)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n4 + 5 = 9 (left: 3 9)\n",
                    "11 - 6 = 5 (left: 3 4 5)\n4 * 3 = 12 (left: 5 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 4 6 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 915,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 21424,
            "prompt_tokens": 302893,
            "cost": 0.10534750999999999
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n"
                ],
                "values": [
                    0.9426199159770668,
                    0.9191834726526404,
                    0.9564624722026343,
                    0.9510788870189101,
                    0.9438027686765975
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 2 5 8)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 8 9",
                "ys": [
                    "9 - 4 = 5 (left: 2 5 8)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n5 - 2 = 3 (left: 3 8)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 2 = 6 (left: 5 6)\n",
                    "9 - 4 = 5 (left: 2 5 8)\n5 * 2 = 10 (left: 8 10)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n2 * 2 = 4 (left: 4 9)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n9 - 2 = 7 (left: 2 7)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n2 + 9 = 11 (left: 2 11)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n2 * 9 = 18 (left: 2 18)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n2 + 2 = 4 (left: 4 9)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n1 * 2 = 2 (left: 2 4)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n1 * 4 = 4 (left: 2 4)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n4 + 4 = 8 (left: 8 9)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n4 * 4 = 16 (left: 9 16)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n4 + 9 = 13 (left: 4 13)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 / 4 = 2 (left: 2 7)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)\n"
                ],
                "values": [
                    0.989530930005115,
                    0.9287993073662366,
                    0.9503795076202531,
                    0.8823764770396488,
                    0.959380084107543,
                    0.9541190399627447,
                    0.9281782537584764,
                    0.9857005830296879,
                    0.9503671550767236,
                    0.9771328245685361,
                    0.9249760547561617,
                    0.9678448313610952,
                    0.9182412865453273,
                    0.9537278857592016,
                    0.9757858964436017,
                    0.9285125454419649,
                    0.9507636021125186,
                    0.9093699292230941,
                    0.9716892643827519,
                    0.9052497944086648,
                    0.9302107165926009,
                    0.8872829787156534
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n2 * 9 = 18 (left: 2 18)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 8 9",
                "ys": [
                    "9 - 4 = 5 (left: 2 5 8)\n8 - 5 = 3 (left: 2 3)\n",
                    "8 / 4 = 2 (left: 2 2 9)\n2 * 9 = 18 (left: 2 18)\n",
                    "9 - 8 = 1 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "8 / 2 = 4 (left: 4 4 9)\n9 - 4 = 5 (left: 4 5)\n",
                    "9 - 2 = 7 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 8 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 916,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 22731,
            "prompt_tokens": 322215,
            "cost": 0.11200215
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 5 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n",
                    "1 * 4 = 4 (left: 4 5 13)\n"
                ],
                "values": [
                    0.9972092341246743,
                    0.933127176595999,
                    0.9357634564983524,
                    0.9369676310336036,
                    0.8848664034792606
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n",
                    "1 * 4 = 4 (left: 4 5 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 5 13",
                "ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n",
                    "1 * 4 = 4 (left: 4 5 13)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 - 1 = 7 (left: 4 7)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 * 1 = 8 (left: 4 8)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n5 + 5 = 10 (left: 10 13)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 13 25)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n5 + 13 = 18 (left: 5 18)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n20 - 13 = 7 (left: 1 7)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n13 - 1 = 12 (left: 12 20)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n12 + 1 = 13 (left: 13 20)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n1 * 13 = 13 (left: 13 20)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n20 - 1 = 19 (left: 13 19)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n12 / 4 = 3 (left: 3 5)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n4 + 5 = 9 (left: 9 12)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n12 - 4 = 8 (left: 5 8)\n",
                    "1 * 4 = 4 (left: 4 5 13)\n13 - 5 = 8 (left: 4 8)\n",
                    "1 * 4 = 4 (left: 4 5 13)\n5 * 4 = 20 (left: 13 20)\n",
                    "1 * 4 = 4 (left: 4 5 13)\n5 + 4 = 9 (left: 9 13)\n"
                ],
                "values": [
                    0.9953036163999568,
                    0.8870618402291388,
                    0.9289003995060513,
                    0.9282670992580795,
                    0.9583519381335321,
                    0.967148578082427,
                    0.9530212830666209,
                    0.9992514377382925,
                    0.9346355446310484,
                    0.8370123155974423,
                    0.9060859473317422,
                    0.9451535281206404,
                    0.938084255650644,
                    0.9632060845466358,
                    0.8966152736641302,
                    0.9394948208040895,
                    0.9994577933032006,
                    0.9252322871756896,
                    0.9309970718965367
                ],
                "select_new_ys": [
                    "1 * 4 = 4 (left: 4 5 13)\n13 - 5 = 8 (left: 4 8)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n20 - 13 = 7 (left: 1 7)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 13 25)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 5 13",
                "ys": [
                    "1 * 4 = 4 (left: 4 5 13)\n13 - 5 = 8 (left: 4 8)\n",
                    "5 * 4 = 20 (left: 1 13 20)\n20 - 13 = 7 (left: 1 7)\n",
                    "13 - 5 = 8 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "1 + 4 = 5 (left: 5 5 13)\n5 * 5 = 25 (left: 13 25)\n",
                    "13 - 1 = 12 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 4 5 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 917,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 24178,
            "prompt_tokens": 343133,
            "cost": 0.11924171
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n"
                ],
                "values": [
                    0.9817625600841529,
                    0.8070228414163894
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 7 12",
                "ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n"
                ],
                "new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 2 = 8 (left: 7 8)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n7 - 2 = 5 (left: 5 10)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 7 = 3 (left: 2 3)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 7 = 3 (left: 2 3 10)\n"
                ],
                "values": [
                    0.993979412102535,
                    0.9956895858187841,
                    0.9294674547031996,
                    0.9750772213941338,
                    0.8905952249758388
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 2 = 8 (left: 7 8)\n",
                    "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 7 = 3 (left: 2 3)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n7 - 2 = 5 (left: 5 10)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 7 = 3 (left: 2 3 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 7 12",
                "ys": [
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 2 = 8 (left: 7 8)\n",
                    "12 - 2 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 7 = 3 (left: 2 3)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n7 - 2 = 5 (left: 5 10)\n",
                    "12 - 2 = 10 (left: 2 7 10)  \n10 - 7 = 3 (left: 2 3 10)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 2 7 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 918,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 25300,
            "prompt_tokens": 357504,
            "cost": 0.12435608000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "7 - 4 = 3 (left: 3 3 6)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n"
                ],
                "values": [
                    0.9762330304992703,
                    0.9316464424743182,
                    0.9517672654826458,
                    0.9272891096299998,
                    0.7806690136825274
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n",
                    "7 - 4 = 3 (left: 3 3 6)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 6 7",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n",
                    "7 - 4 = 3 (left: 3 3 6)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 3 = 3 (left: 3 4)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 / 4 = 1.5 (left: 1.5 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n1 * 3 = 3 (left: 3 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n3 / 1 = 3 (left: 3 3)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n3 - 3 = 0 (left: 1 0)\n",
                    "7 - 6 = 1 (left: 1 3 3)\n3 / 3 = 1 (left: 1 1)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n7 * 3 = 21 (left: 3 21)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n3 * 3 = 9 (left: 7 9)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n3 + 7 = 10 (left: 3 10)\n",
                    "7 - 4 = 3 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n",
                    "7 - 4 = 3 (left: 3 3 6)\n6 - 3 = 3 (left: 3 3)\n",
                    "7 - 4 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n",
                    "7 - 4 = 3 (left: 3 3 6)\n3 * 6 = 18 (left: 3 18)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n7 - 3 = 4 (left: 3 4 6)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n3 * 6 = 18 (left: 3 4 18)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n3 + 4 = 7 (left: 3 6 7)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n6 * 4 = 24 (left: 3 24)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n3 * 4 = 12 (left: 6 12)\n"
                ],
                "values": [
                    0.9660825532566435,
                    0.9819101320451986,
                    0.945491775402247,
                    0.9159863503663814,
                    0.9560039726532492,
                    0.9402535060792953,
                    0.9582449163562289,
                    0.9554841987280577,
                    0.8750152921431098,
                    0.9137860901926744,
                    0.9268800070067101,
                    0.9604310473154837,
                    0.9606305787340499,
                    0.9267899711696772,
                    0.9650081073199561,
                    0.9144808876747287,
                    0.9544788967259448,
                    0.9416474357953051,
                    0.9227189917250734,
                    0.9780456472609961,
                    0.860272770011316,
                    0.9106947304564494,
                    0.8652822806812249,
                    0.9007171437240082
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n7 - 3 = 4 (left: 3 4 6)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n3 + 7 = 10 (left: 3 10)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 6 7",
                "ys": [
                    "7 - 3 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "7 - 4 is not a valid operation, since 4 is not in the original set of numbers (3, 3, 6, 7). Here's a valid next step from the given numbers:\n7 - 3 = 4 (left: 3 4 6)\n",
                    "7 - 3 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n3 + 7 = 10 (left: 3 10)\n",
                    "6 - 3 = 3 (left: 3 3 7)\n3 + 3 = 6 (left: 6 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 6 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 919,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 26606,
            "prompt_tokens": 375608,
            "cost": 0.13068076
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n"
                ],
                "values": [
                    0.9981466897985842
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n"
                ],
                "values": [
                    0.9965972396863294
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 1 4 5)\n5 - 1 = 4 (left: 4 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 5 9 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 920,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 27056,
            "prompt_tokens": 381379,
            "cost": 0.13273393
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 7 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n"
                ],
                "values": [
                    0.9803695906242416,
                    0.9433793683064622,
                    0.8745776104364384,
                    0.9463638041291167
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 7 13",
                "ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "13 - 5 = 8 (left: 6 7 8)\n8 - 7 = 1 (left: 1 6)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n5 * 6 = 30 (left: 6 30)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n5 + 6 = 11 (left: 6 11)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n6 + 6 = 12 (left: 5 12)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n6 - 5 = 1 (left: 6 1)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 * 7 = 35 (left: 7 35)\n",
                    "13 - 6 = 7 (left: 5 7 7)\n5 + 7 = 12 (left: 7 12)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 / 8 = 7 (left: 5 6 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 - 6 = 50 (left: 5 50)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 - 5 = 51 (left: 6 51)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 / 6 = 9 (left: 5 9)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 / 7 = 8 (left: 5 6 8)\n"
                ],
                "values": [
                    0.996162848299533,
                    0.9384539533656693,
                    0.9704014102143304,
                    0.9152564671757806,
                    0.9265868430420803,
                    0.9432717247828387,
                    0.8986336501222282,
                    0.9974389933713484,
                    0.8753709139748159,
                    0.9546230234911204,
                    0.988006536248791,
                    0.9835559886610701,
                    0.9295118882647201,
                    0.9044157068854887,
                    0.9366001436490431
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "13 - 5 = 8 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 / 8 = 7 (left: 5 6 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 - 6 = 50 (left: 5 50)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 7 13",
                "ys": [
                    "13 - 6 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "13 - 5 = 8 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 / 8 = 7 (left: 5 6 7)\n",
                    "8 * 7 = 56 (left: 5 6 56)\n56 - 6 = 50 (left: 5 50)\n",
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 7 13",
                "ys": [
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (6 * 5) - (13 - 7) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (6 * 5) - (13 - 7) = 24"
                ]
            }
        ],
        "idx": 921,
        "ys": [
            "13 - 7 = 6 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n30 - 6 = 24 (left: 24)\nAnswer: (6 * 5) - (13 - 7) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 28533,
            "prompt_tokens": 400918,
            "cost": 0.13963416
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n"
                ],
                "values": [
                    0.9992825593354415,
                    0.9405440351298063
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 8 10",
                "ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 8 10)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 5 = 25 (left: 2 25)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 + 5 = 10 (left: 2 10)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 / 5 = 1 (left: 1 2)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 2 = 10 (left: 5 10)\n"
                ],
                "values": [
                    0.9831215875380467,
                    0.932870106929337,
                    0.9521252989920246,
                    0.9871442275359265,
                    0.9282378328701242,
                    0.9315654657742515,
                    0.9515528142475611
                ],
                "select_new_ys": [
                    "10 - 8 = 2 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 8 10)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 5 = 25 (left: 2 25)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 2 = 10 (left: 5 10)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 8 10",
                "ys": [
                    "10 - 8 = 2 (left: 2 5 5)\n5 - 2 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n5 + 5 = 10 (left: 8 10)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 5 = 25 (left: 2 25)\n",
                    "10 - 8 = 2 (left: 2 5 5)\n5 * 2 = 10 (left: 5 10)\n",
                    "10 - 5 = 5 (left: 5 5 8)\n8 - 5 = 3 (left: 3 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 5 8 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 922,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 29696,
            "prompt_tokens": 416185,
            "cost": 0.14503555
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n",
                    "12 * 2 = 24 (left: 4 6 24)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n"
                ],
                "values": [
                    0.9953375259925515,
                    0.94094895871034,
                    0.9548511288564422,
                    0.9308680202801327,
                    0.8848328747769179
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n",
                    "12 * 2 = 24 (left: 4 6 24)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 12",
                "ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n",
                    "12 * 2 = 24 (left: 4 6 24)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n"
                ],
                "new_ys": [
                    "12 / 6 = 2 (left: 2 2 4)\n4 - 2 = 2 (left: 2 2)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 4 = 8 (left: 2 8)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 * 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 2 = 4 (left: 4 4)\n",
                    "12 / 6 = 2 (left: 2 2 4)\n2 + 4 = 6 (left: 2 6)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n4 * 2 = 8 (left: 6 8)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n6 + 2 = 8 (left: 4 8)\n",
                    "12 * 2 = 24 (left: 4 6 24)\n24 / 6 = 4 (left: 4 4)\n",
                    "12 * 2 = 24 (left: 4 6 24)\n6 * 4 = 24 (left: 24 24)\n",
                    "12 * 2 = 24 (left: 4 6 24)\n6 - 4 = 2 (left: 2 24)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n8 + 6 = 14 (left: 12 14)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n8 * 6 = 48 (left: 12 48)\n"
                ],
                "values": [
                    0.941629955427325,
                    0.8875054206475691,
                    0.9441277428143241,
                    0.9446921805559785,
                    0.9281495364279604,
                    0.9760954481965151,
                    0.9370350262366764,
                    0.9607118318501143,
                    0.9260765001782882,
                    0.9342987741329641,
                    0.9237628138999376,
                    0.9664577013828899,
                    0.8996192717938784,
                    0.9987033253616013,
                    0.9157203103924301,
                    0.9125503162483165,
                    0.9907161257615439,
                    0.9046672606166992,
                    0.9816292960817834,
                    0.8773049487715717
                ],
                "select_new_ys": [
                    "12 * 2 = 24 (left: 4 6 24)\n24 / 6 = 4 (left: 4 4)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 12",
                "ys": [
                    "12 * 2 = 24 (left: 4 6 24)\n24 / 6 = 4 (left: 4 4)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "12 - 4 = 8 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "12 - 6 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n"
                ],
                "new_ys": [
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 6 12",
                "ys": [
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - (4 * 2)) * 6 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - (4 * 2)) * 6 = 24"
                ]
            }
        ],
        "idx": 923,
        "ys": [
            "4 * 2 = 8 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - (4 * 2)) * 6 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 31167,
            "prompt_tokens": 437337,
            "cost": 0.15236469
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n"
                ],
                "values": [
                    0.9929714355378068
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 8 11",
                "ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n",
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n"
                ],
                "values": [
                    0.931354777319934,
                    0.9961171848838858
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 8 11",
                "ys": [
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "8 - 6 = 2 (left: 2 7 11)\n11 - 2 = 9 (left: 7 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 7 8 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 924,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 31735,
            "prompt_tokens": 445067,
            "cost": 0.15507659000000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 9 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n"
                ],
                "values": [
                    0.9882537401200622,
                    0.8784070409617577
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 9 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 7 9 4)\n7 - 4 = 3 (left: 3 9)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 7 = 2 (left: 2 4)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n7 + 4 = 11 (left: 9 11)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n7 * 4 = 28 (left: 9 28)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 4 = 5 (left: 5 7)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n13 - 7 = 6 (left: 1 6)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n1 + 7 = 8 (left: 8 13)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n7 - 1 = 6 (left: 6 13)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n7 + 1 = 8 (left: 8 13)\n",
                    "9 / 9 = 1 (left: 7 1 13)\n8 - 1 = 7 (left: 7 13)\n"
                ],
                "values": [
                    0.9058398190303638,
                    0.9668799949337011,
                    0.9340869709474691,
                    0.9720671327435715,
                    0.9671642426937325,
                    0.9969787342861004,
                    0.9273869812752814,
                    0.9308165363280275,
                    0.8873957721196284,
                    0.8919119057125227
                ],
                "select_new_ys": [
                    "9 / 9 = 1 (left: 7 1 13)\n13 - 7 = 6 (left: 1 6)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n7 * 4 = 28 (left: 9 28)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 4 = 5 (left: 5 7)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 7 = 2 (left: 2 4)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n7 + 4 = 11 (left: 9 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 9 9 13",
                "ys": [
                    "9 / 9 = 1 (left: 7 1 13)\n13 - 7 = 6 (left: 1 6)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n7 * 4 = 28 (left: 9 28)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 4 = 5 (left: 5 7)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n9 - 7 = 2 (left: 2 4)\n",
                    "13 - 9 = 4 (left: 7 9 4)\n7 + 4 = 11 (left: 9 11)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "7 9 9 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 925,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 32750,
            "prompt_tokens": 459320,
            "cost": 0.1600414
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 6 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 4 6 9)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n"
                ],
                "values": [
                    0.92581689155035,
                    0.9453859013568352,
                    0.9620596070556351,
                    0.9138082862402911,
                    0.9502006177509955
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 3 6)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 6 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 3 6)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 3 6)\n6 - 3 = 3 (left: 3 3)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n3 + 3 = 6 (left: 6 6)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n6 / 3 = 2 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 3 3 6)\n6 * 3 = 18 (left: 3 18)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n6 * 3 = 18 (left: 3 6 18)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n6 - 3 = 3 (left: 3 3 6)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n3 + 3 = 6 (left: 6 6 6)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n12 / 3 = 4 (left: 3 4)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n12 - 3 = 9 (left: 3 9)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 * 3 = 9 (left: 9 12)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 + 3 = 6 (left: 6 12)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 + 12 = 15 (left: 3 15)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n6 - 4 = 2 (left: 2 9)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 * 4 = 36 (left: 6 36)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n18 - 12 = 6 (left: 6 9)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n18 - 9 = 9 (left: 9 12)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n12 - 9 = 3 (left: 3 18)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n12 / 9 = 1.333 (left: 1.333 18)\n",
                    "6 * 3 = 18 (left: 9 12 18)\n18 / 9 = 2 (left: 2 12)\n"
                ],
                "values": [
                    0.9530889936481113,
                    0.9417944834818665,
                    0.9334682809968271,
                    0.9163901856248214,
                    0.9849031037895254,
                    0.9516013279597345,
                    0.9921083242316753,
                    0.9137389383836921,
                    0.94623383141086,
                    0.9684257656442296,
                    0.940383349429862,
                    0.9895547870082737,
                    0.9293765199452423,
                    0.9901918489280895,
                    0.9236819717516176,
                    0.9776459659022877,
                    0.9266289874522197,
                    0.9990142355833121,
                    0.9382452491077065,
                    0.9328728035965334,
                    0.9182751020456099,
                    0.9672333757953029
                ],
                "select_new_ys": [
                    "6 * 3 = 18 (left: 9 12 18)\n18 - 12 = 6 (left: 6 9)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 + 3 = 6 (left: 6 12)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n6 * 3 = 18 (left: 3 6 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 6 9 12",
                "ys": [
                    "6 * 3 = 18 (left: 9 12 18)\n18 - 12 = 6 (left: 6 9)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n6 / 3 = 2 (left: 2 3 6)\n",
                    "12 / 3 = 4 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "9 - 6 = 3 (left: 3 3 12)\n3 + 3 = 6 (left: 6 12)\n",
                    "12 - 9 = 3 (left: 3 3 6 6)\n6 * 3 = 18 (left: 3 6 18)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 6 9 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 926,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 34215,
            "prompt_tokens": 479577,
            "cost": 0.16712229
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 + 6 = 18 (left: 9 13 18)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n",
                    "12 - 6 = 6 (left: 9 13 6)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n"
                ],
                "values": [
                    0.894342681310008,
                    0.8848040381734829,
                    0.9513845622204339,
                    0.9526562276066275,
                    0.9340198020684842
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 12 13",
                "ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n",
                    "12 - 6 = 6 (left: 9 13 6)\n6 - 4 = 2 (left: 2 9)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n9 - 6 = 3 (left: 1 3)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n9 / 1 = 9 (left: 6 9)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n6 * 1 = 6 (left: 6 9)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n6 + 1 = 7 (left: 7 9)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n13 - 6 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n13 - 3 = 10 (left: 6 10)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n6 - 3 = 3 (left: 3 13)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n18 - 13 = 5 (left: 5 9)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n18 - 9 = 9 (left: 9 13)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n9 + 13 = 22 (left: 18 22)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n13 + 9 = 22 (left: 18 22)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n13 - 9 = 4 (left: 4 18)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n12 / 6 = 2 (left: 2 4)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n6 * 4 = 24 (left: 12 24)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n12 / 4 = 3 (left: 3 6)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n12 - 6 = 6 (left: 4 6)\n"
                ],
                "values": [
                    0.999754809152341,
                    0.911287565694757,
                    0.963759428641712,
                    0.9251333096444204,
                    0.9740665245943603,
                    0.9067890069561348,
                    0.9987245301731914,
                    0.9357373007471799,
                    0.9117510425547581,
                    0.9986030103693745,
                    0.9636285308553998,
                    0.9473279396143538,
                    0.9036271541460857,
                    0.9456847657278626,
                    0.9823718616422987,
                    0.9265751517209176,
                    0.9362791152315005,
                    0.9594541291514334
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n13 - 6 = 7 (left: 3 7)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n18 - 13 = 5 (left: 5 9)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n12 / 6 = 2 (left: 2 4)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n6 * 1 = 6 (left: 6 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 12 13",
                "ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n",
                    "12 - 9 = 3 (left: 6 13 3)\n13 - 6 = 7 (left: 3 7)\n",
                    "12 + 6 = 18 (left: 9 13 18)\n18 - 13 = 5 (left: 5 9)\n",
                    "13 - 9 = 4 (left: 6 12 4)\n12 / 6 = 2 (left: 2 4)\n",
                    "13 - 12 = 1 (left: 6 9 1)\n6 * 1 = 6 (left: 6 9)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 12 13",
                "ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (12 - 6) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (12 - 6) = 24"
                ]
            }
        ],
        "idx": 927,
        "ys": [
            "12 - 6 = 6 (left: 9 13 6)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (12 - 6) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 35725,
            "prompt_tokens": 501085,
            "cost": 0.17459045
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 7 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n"
                ],
                "values": [
                    0.999381552455449,
                    0.9139012281214433,
                    0.9475652684698797,
                    0.9694336554477052,
                    0.9609977267023214
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 7 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 4 7)\n4 + 4 = 8 (left: 7 8)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 * 7 = 28 (left: 4 28)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 + 7 = 11 (left: 4 11)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 2 = 11 (left: 4 11)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n4 * 6 = 24 (left: 9 24)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 4 = 5 (left: 5 6)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n6 * 4 = 24 (left: 9 24)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n13 - 3 = 10 (left: 9 10)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n9 + 3 = 12 (left: 12 13)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n9 / 3 = 3 (left: 3 13)\n",
                    "7 - 4 = 3 (left: 3 9 13)\n9 - 3 = 6 (left: 6 13)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 7 = 6 (left: 5 6)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8 8)\n"
                ],
                "values": [
                    0.9004137609442088,
                    0.9587062284059714,
                    0.9770084789901202,
                    0.9031686796954914,
                    0.9595781981669429,
                    0.9884797483241218,
                    0.9543031006466545,
                    0.9900340386003056,
                    0.9234572482337706,
                    0.9588707669115132,
                    0.9233072792056617,
                    0.99960728478966,
                    0.9327628387721991,
                    0.876020206173857,
                    0.9203740787239254,
                    0.8972191817873301,
                    0.9756781596771357,
                    0.9623197466313024,
                    0.9171432419805192
                ],
                "select_new_ys": [
                    "7 - 4 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 3 4)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 7 9 13",
                "ys": [
                    "7 - 4 = 3 (left: 3 9 13)\n13 - 9 = 4 (left: 3 4)\n",
                    "13 - 7 = 6 (left: 4 6 9)\n9 - 6 = 3 (left: 3 4)\n",
                    "9 - 7 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "13 - 9 = 4 (left: 4 4 7)\n4 * 4 = 16 (left: 7 16)\n",
                    "9 - 4 = 5 (left: 5 7 13)\n13 - 5 = 8 (left: 7 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 7 9 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 928,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 37100,
            "prompt_tokens": 520594,
            "cost": 0.18137038000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n"
                ],
                "values": [
                    0.9777100129103324,
                    0.9526148801791547,
                    0.8884628005099605,
                    0.913343805414635,
                    0.9215186541631644
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 4 5 6)\n5 * 4 = 20 (left: 6 20)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 - 5 = 1 (left: 1 8)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 8 = 48 (left: 5 48)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n6 + 8 = 14 (left: 5 14)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n8 - 5 = 3 (left: 3 6)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n6 - 5 = 1 (left: 1 8)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 7 = 1 (left: 1 6)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n12 - 8 = 4 (left: 4 11)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n12 - 11 = 1 (left: 1 8)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n8 + 11 = 19 (left: 12 19)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n11 + 12 = 23 (left: 8 23)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n8 * 11 = 88 (left: 12 88)\n"
                ],
                "values": [
                    0.9877300338269493,
                    0.8842719186781978,
                    0.9820337792382161,
                    0.9400882108165667,
                    0.9304267999287515,
                    0.9833658087028663,
                    0.8890496378227073,
                    0.9404683288242928,
                    0.9540784312462629,
                    0.9946607978952456,
                    0.9353751673893765,
                    0.9871451986198386,
                    0.9730537616215806,
                    0.9268211458492883,
                    0.8851188157753961,
                    0.9169230862545782
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "12 - 8 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n12 - 8 = 4 (left: 4 11)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 12",
                "ys": [
                    "12 - 5 = 7 (left: 6 7 8)\n8 - 6 = 2 (left: 2 7)\n",
                    "12 - 8 = 4 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "6 + 5 = 11 (left: 8 11 12)\n12 - 8 = 4 (left: 4 11)\n",
                    "12 - 7 = 5 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n8 * 30 = 240 (left: 240)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n8 * 30 = 240 (left: 240)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 6 8 12",
                "ys": [
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n8 * 30 = 240 (left: 240)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n8 * 30 = 240 (left: 240)\nAnswer: (8 * (5 * (12 - 6))) = 240"
                ],
                "values": [
                    0.001
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n8 * 30 = 240 (left: 240)\nAnswer: (8 * (5 * (12 - 6))) = 240"
                ]
            }
        ],
        "idx": 929,
        "ys": [
            "12 - 6 = 6 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n8 * 30 = 240 (left: 240)\nAnswer: (8 * (5 * (12 - 6))) = 240"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 38573,
            "prompt_tokens": 541932,
            "cost": 0.18875194
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 2 = 5 (left: 4 5 6)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n",
                    "6 * 4 = 24 (left: 2 7 24)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n",
                    "6 / 2 = 3 (left: 3 4 7)\n"
                ],
                "values": [
                    0.9336581234389941,
                    0.9477506037733681,
                    0.9449752259370489,
                    0.9472729497823451,
                    0.9552099962529778
                ],
                "select_new_ys": [
                    "6 / 2 = 3 (left: 3 4 7)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n",
                    "6 * 4 = 24 (left: 2 7 24)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 7",
                "ys": [
                    "6 / 2 = 3 (left: 3 4 7)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n",
                    "6 * 4 = 24 (left: 2 7 24)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n"
                ],
                "new_ys": [
                    "6 / 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "6 / 2 = 3 (left: 3 4 7)\n7 - 3 = 4 (left: 4 4)\n",
                    "6 - 2 = 4 (left: 4 4 7)\n7 - 4 = 3 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 * 3 = 18 (left: 2 18)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "6 * 4 = 24 (left: 2 7 24)\n24 / 2 = 12 (left: 7 12)\n",
                    "6 * 4 = 24 (left: 2 7 24)\n24 - 7 = 17 (left: 2 17)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n"
                ],
                "values": [
                    0.987830112126271,
                    0.9669893847725606,
                    0.9654781537605633,
                    0.9450129040413917,
                    0.9207240016963162,
                    0.9348768104363879,
                    0.9687656169527981,
                    0.9717041121456325,
                    0.9988081341321434,
                    0.9207404430044609,
                    0.9826963320718037
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n24 / 2 = 12 (left: 7 12)\n",
                    "6 / 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 7",
                "ys": [
                    "6 * 4 = 24 (left: 2 7 24)\n24 / 2 = 12 (left: 7 12)\n",
                    "6 / 2 = 3 (left: 3 4 7)\n7 - 4 = 3 (left: 3 3)\n",
                    "7 - 2 = 5 (left: 4 5 6)\n6 - 5 = 1 (left: 1 4)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "7 - 4 = 3 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 6 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 930,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 40054,
            "prompt_tokens": 561902,
            "cost": 0.19577294
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 10 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 / 5 = 2 (left: 2 2 10)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n",
                    "10 - 2 = 8 (left: 5 8 10)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n"
                ],
                "values": [
                    0.940367253462323,
                    0.9033435794506762,
                    0.9564400828718479,
                    0.9373587858317255,
                    0.9464773115357972
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 5 8 10)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 10 10",
                "ys": [
                    "10 - 2 = 8 (left: 5 8 10)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 5 8)\n",
                    "10 - 2 = 8 (left: 5 8 10)\n10 - 8 = 2 (left: 2 5)\n",
                    "10 - 2 = 8 (left: 5 8 10)\n5 + 8 = 13 (left: 10 13)\n",
                    "10 - 2 = 8 (left: 5 8 10)\n5 + 10 = 15 (left: 8 15)\n",
                    "10 - 2 = 8 (left: 5 8 10)\n8 * 5 = 40 (left: 10 40)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n20 / 5 = 4 (left: 4 10)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n10 - 5 = 5 (left: 5 20)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n20 - 10 = 10 (left: 5 10)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n10 / 5 = 2 (left: 2 20)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n20 / 10 = 2 (left: 2 5)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n2 * 10 = 20 (left: 2 20)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n10 / 5 = 2 (left: 2 2)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n10 * 2 = 20 (left: 20 10)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n10 / 2 = 5 (left: 5 10)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n10 + 2 = 12 (left: 10 12)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n10 * 2 = 20 (left: 10 20)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n10 - 2 = 8 (left: 8 10)\n"
                ],
                "values": [
                    0.9962982876607818,
                    0.9650288364018176,
                    0.914377400426303,
                    0.8865473141731434,
                    0.9424658144468258,
                    0.9921577402358074,
                    0.9641662095569339,
                    0.9240916999614852,
                    0.9479999039900419,
                    0.9365993990645181,
                    0.9854201193905064,
                    0.8788783449641702,
                    0.9885044097393352,
                    0.9343337563217151,
                    0.961553030712357,
                    0.9524444692934269,
                    0.8768337012276439,
                    0.9678255110118961,
                    0.9475386463254682,
                    0.9200430866673506,
                    0.9632930631852231
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 5 8)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n20 / 5 = 4 (left: 4 10)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n10 / 2 = 5 (left: 5 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 10 10",
                "ys": [
                    "10 - 2 = 8 (left: 5 8 10)\n10 - 5 = 5 (left: 5 8)\n",
                    "10 * 2 = 20 (left: 5 10 20)\n20 / 5 = 4 (left: 4 10)\n",
                    "10 - 5 = 5 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "10 / 5 = 2 (left: 2 2 10)\n10 - 2 = 8 (left: 2 8)\n",
                    "10 / 5 = 2 (left: 2 10 10)\n10 / 2 = 5 (left: 5 10)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 10 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 931,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 41538,
            "prompt_tokens": 582416,
            "cost": 0.20294412000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 6 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n"
                ],
                "values": [
                    0.9959367560445168,
                    0.961316900787421,
                    0.8717960961561507,
                    0.9462229401384223,
                    0.964454335468575
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 6 7 12",
                "ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n"
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 6 6 7)\n6 * 6 = 36 (left: 7 36)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n7 - 6 = 1 (left: 1 6)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 / 6 = 1 (left: 1 7)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 + 7 = 13 (left: 6 13)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 * 7 = 42 (left: 6 42)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n6 - 2 = 4 (left: 4 7)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n2 * 6 = 12 (left: 7 12)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n6 / 2 = 3 (left: 3 7)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n6 + 7 = 13 (left: 2 13)\n",
                    "12 / 6 = 2 (left: 2 6 7)\n7 - 2 = 5 (left: 5 6)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n36 / 12 = 3 (left: 3 7)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n12 - 7 = 5 (left: 5 36)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n7 - 3 = 4 (left: 4 12 36)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n36 - 12 = 24 (left: 7 24)\n",
                    "6 * 6 = 36 (left: 7 12 36)\n12 / 7 = 1 (left: 1 36)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n13 - 12 = 1 (left: 1 6)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n12 - 6 = 6 (left: 6 13)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n12 - 13 = -1 (left: -1 6)\n"
                ],
                "values": [
                    0.9642294212101546,
                    0.9574148355975199,
                    0.9688091372150684,
                    0.9453798259811965,
                    0.9425940082170399,
                    0.9090731454445415,
                    0.9228906064393329,
                    0.9459081615265138,
                    0.9283197503631939,
                    0.9445488307087317,
                    0.963621518175678,
                    0.9539051742893448,
                    0.9717305030934293,
                    0.9917478453726448,
                    0.9215747187306801,
                    0.8992925930333227,
                    0.9260156117055599,
                    0.8811190425213897,
                    0.9761002063999515,
                    0.9408638477271841,
                    0.9810349168956498,
                    0.9105741950492896
                ],
                "select_new_ys": [
                    "6 * 6 = 36 (left: 7 12 36)\n36 / 12 = 3 (left: 3 7)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n13 - 12 = 1 (left: 1 6)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 / 6 = 1 (left: 1 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 6 7 12",
                "ys": [
                    "6 * 6 = 36 (left: 7 12 36)\n36 / 12 = 3 (left: 3 7)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n13 - 6 = 7 (left: 7 12)\n",
                    "6 + 7 = 13 (left: 6 12 13)\n13 - 12 = 1 (left: 1 6)\n",
                    "12 - 7 = 5 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 6 6 7)\n6 / 6 = 1 (left: 1 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 6 7 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 932,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 42910,
            "prompt_tokens": 602282,
            "cost": 0.20981714
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 9 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 9 = 2 (left: 2 6 9)\n",
                    "11 - 9 = 2 (left: 2 6 9\n",
                    "11 - 6 = 5 (left: 5 9 9)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n"
                ],
                "values": [
                    0.992082254119258,
                    0.9924104596173864,
                    0.9833743313492787,
                    0.9161619131829708
                ],
                "select_new_ys": [
                    "11 - 9 = 2 (left: 2 6 9\n",
                    "11 - 9 = 2 (left: 2 6 9)\n",
                    "11 - 6 = 5 (left: 5 9 9)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 9 9 11",
                "ys": [
                    "11 - 9 = 2 (left: 2 6 9\n",
                    "11 - 9 = 2 (left: 2 6 9)\n",
                    "11 - 6 = 5 (left: 5 9 9)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n"
                ],
                "new_ys": [
                    "11 - 9 = 2 (left: 2 6 9\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 2 6 9\n6 - 2 = 4 (left: 4 9)\n",
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "11 - 9 = 2 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 2 6 9)\n6 + 2 = 8 (left: 8 9)\n",
                    "11 - 6 = 5 (left: 5 9 9)\n9 / 9 = 1 (left: 1 5)\n",
                    "11 - 6 = 5 (left: 5 9 9)\n5 * 9 = 45 (left: 9 45)\n",
                    "11 - 6 = 5 (left: 5 9 9)\n5 + 9 = 14 (left: 9 14)\n",
                    "11 - 6 = 5 (left: 5 9 9)\n9 - 5 = 4 (left: 4 9)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n54 / 9 = 6 (left: 6 11)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n11 - 9 = 2 (left: 2 54)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n54 - 11 = 43 (left: 9 43)\n"
                ],
                "values": [
                    0.9840473290316819,
                    0.9345884261975032,
                    0.9769119522386226,
                    0.9820948703303,
                    0.9343108455277462,
                    0.9769103947288905,
                    0.9215734583166652,
                    0.9568178809511212,
                    0.9026834988801095,
                    0.9254273476712976,
                    0.9487661760786696,
                    0.9881047416974975,
                    0.9862608759356947,
                    0.9089970897279437
                ],
                "select_new_ys": [
                    "6 * 9 = 54 (left: 9 11 54)\n54 / 9 = 6 (left: 6 11)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n11 - 9 = 2 (left: 2 54)\n",
                    "11 - 9 = 2 (left: 2 6 9\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 9 9 11",
                "ys": [
                    "6 * 9 = 54 (left: 9 11 54)\n54 / 9 = 6 (left: 6 11)\n",
                    "6 * 9 = 54 (left: 9 11 54)\n11 - 9 = 2 (left: 2 54)\n",
                    "11 - 9 = 2 (left: 2 6 9\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n"
                ],
                "new_ys": [
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n27 - 3 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n27 - 3 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 9 9 11",
                "ys": [
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n27 - 3 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n27 - 3 = 24 (left: 24)\nAnswer: (9 - (6 / (11 - 9))) * 3 = 24"
                ],
                "values": [
                    0.001
                ],
                "select_new_ys": [
                    "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n27 - 3 = 24 (left: 24)\nAnswer: (9 - (6 / (11 - 9))) * 3 = 24"
                ]
            }
        ],
        "idx": 933,
        "ys": [
            "11 - 9 = 2 (left: 2 6 9\n6 / 2 = 3 (left: 3 9)\n27 - 3 = 24 (left: 24)\nAnswer: (9 - (6 / (11 - 9))) * 3 = 24"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 44351,
            "prompt_tokens": 622537,
            "cost": 0.21687109000000002
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 11 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n"
                ],
                "values": [
                    0.9573757147272766,
                    0.9675170970315785,
                    0.9553230911886302,
                    0.9753427691716668,
                    0.9888267532328605
                ],
                "select_new_ys": [
                    "12 - 11 = 1 (left: 1 5 8)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 11 12",
                "ys": [
                    "12 - 11 = 1 (left: 1 5 8)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n"
                ],
                "new_ys": [
                    "12 - 11 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "12 - 11 = 1 (left: 1 5 8)\n5 - 1 = 4 (left: 4 8)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 5)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n3 * 5 = 15 (left: 12 15)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n3 + 5 = 8 (left: 8 12)\n",
                    "11 - 8 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 6 = 6 (left: 6 8)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n6 + 8 = 14 (left: 12 14)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n8 + 6 = 14 (left: 12 14)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 / 6 = 2 (left: 2 8)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n5 + 4 = 9 (left: 9 11)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n5 * 4 = 20 (left: 11 20)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n4 + 5 = 9 (left: 9 11)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 4 = 7 (left: 5 7)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 / 3 = 4 (left: 4 11)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n"
                ],
                "values": [
                    0.9960352398859532,
                    0.9356167397665958,
                    0.9495798813494485,
                    0.9345029411302391,
                    0.9217089734167099,
                    0.9205636479450013,
                    0.9604809793399689,
                    0.9491023326489395,
                    0.9237785774589111,
                    0.9804163465412666,
                    0.93057739003457,
                    0.9272266779650067,
                    0.8789036350223579,
                    0.9469088749560696,
                    0.9045433636550905,
                    0.9923194266105556,
                    0.9449434710684882,
                    0.995788384794747,
                    0.9472392550350501,
                    0.9801648323415264
                ],
                "select_new_ys": [
                    "12 - 11 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 11 12",
                "ys": [
                    "12 - 11 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n",
                    "8 - 5 = 3 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 11 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\n",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 5) * (12 - 8) = 24",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (11 - 5) * (12 - 8) = 24",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24"
                ],
                "values": [
                    20.0,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 5) * (12 - 8) = 24",
                    "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (11 - 5) * (12 - 8) = 24",
                    "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24"
                ]
            }
        ],
        "idx": 934,
        "ys": [
            "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (11 - 5) * (12 - 8) = 24",
            "12 - 8 = 4 (left: 4 5 11)\n11 - 5 = 6 (left: 4 6)\n6 * 4 = 24 (left: 24)\nAnswer: (11 - 5) * (12 - 8) = 24",
            "11 - 5 = 6 (left: 6 8 12)\n12 - 8 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (12 - 8) * (11 - 5) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 45719,
            "prompt_tokens": 642518,
            "cost": 0.22377076
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 8 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 6 8)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n",
                    "10 - 6 = 4 (left: 4 5 8)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n"
                ],
                "values": [
                    0.9443551012783812,
                    0.9156862617968852,
                    0.9765108122941492,
                    0.9844561079795137,
                    0.9414837864440077
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 8 10",
                "ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n"
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 3 4)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n5 - 2 = 3 (left: 3 6)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n6 / 2 = 3 (left: 3 5)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n",
                    "10 - 8 = 2 (left: 2 5 6)\n5 * 2 = 10 (left: 6 10)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n6 - 5 = 1 (left: 1 8)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n5 + 6 = 11 (left: 8 11)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n10 -\n",
                    "8 - 5 = 3 (left: 3 6 10)\n10 -95 6 = 4 (left: 3 4)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n30 - 10 = 20 (left: 8 20)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n10 + 8 = 18 (left: 18 30)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n30 - 8 = 22 (left: 10 22)\n"
                ],
                "values": [
                    0.9967060180964747,
                    0.896238531878352,
                    0.9767949892182028,
                    0.9250675495794963,
                    0.8976566032565357,
                    0.9368017708209699,
                    0.9826530989119185,
                    0.9401623103063292,
                    0.9199590841282801,
                    0.998180478789709,
                    0.9818397224222478,
                    0.8689931454545478,
                    0.9876617041378651,
                    0.8844850204485859,
                    0.94599518226281
                ],
                "select_new_ys": [
                    "8 - 5 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "10 - 6 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 3 4)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n30 - 10 = 20 (left: 8 20)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n10 -\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 8 10",
                "ys": [
                    "8 - 5 = 3 (left: 3 6 10)\n10 - 6 = 4 (left: 3 4)\n",
                    "10 - 6 = 4 (left: 4 5 8)\n8 - 5 = 3 (left: 3 4)\n",
                    "6 * 5 = 30 (left: 8 10 30)\n30 - 10 = 20 (left: 8 20)\n",
                    "10 - 5 = 5 (left: 5 6 8)\n6 * 5 = 30 (left: 8 30)\n",
                    "8 - 5 = 3 (left: 3 6 10)\n10 -\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 6 8 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 935,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 47014,
            "prompt_tokens": 661851,
            "cost": 0.23041517
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 11 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 11 = 2 (left: 2 6 12)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n"
                ],
                "values": [
                    0.9609984122409422,
                    0.9283218589680546,
                    0.9218662167267316,
                    0.944466561516154,
                    0.982883506046255
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 6 11)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 11 12 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 6 11)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n6 - 1 = 5 (left: 5 11)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n6 / 1 = 6 (left: 6 11)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 1 = 10 (left: 6 10)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n6 * 1 = 6 (left: 6 11)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n12 / 6 = 2 (left: 2 2)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n6 / 2 = 3 (left: 3 12)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n12 - 6 = 6 (left: 2 6)\n",
                    "13 - 11 = 2 (left: 2 6 12)\n6 * 2 = 12 (left: 12 12)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 1 = 12 (left: 6 12)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n6 - 1 = 5 (left: 5 13)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n13 - 11 = 2 (left: 2 6)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n13 - 11 = 2 (left: 2 2)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n11 - 2 = 9 (left: 9 13)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n13 - 2 = 11 (left: 11 11)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n11 + 2 = 13 (left: 13 13)\n",
                    "12 / 6 = 2 (left: 2 11 13)\n11 + 13 = 24 (left: 2 24)\n"
                ],
                "values": [
                    0.9964967583156052,
                    0.9474256764383642,
                    0.937810512811683,
                    0.9815444393712381,
                    0.9378195110008292,
                    0.9686987133173685,
                    0.9307148271532338,
                    0.8933479491639733,
                    0.9488117113141321,
                    0.9787036757838126,
                    0.929256759570843,
                    0.9500844425268199,
                    0.9964908981198264,
                    0.9984747985843487,
                    0.9489203059232091,
                    0.9305357228648943,
                    0.9013597635579412,
                    0.9195748041185762
                ],
                "select_new_ys": [
                    "12 / 6 = 2 (left: 2 11 13)\n13 - 11 = 2 (left: 2 2)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n13 - 11 = 2 (left: 2 6)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 1 = 10 (left: 6 10)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 11 12 13",
                "ys": [
                    "12 / 6 = 2 (left: 2 11 13)\n13 - 11 = 2 (left: 2 2)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 6 = 5 (left: 1 5)\n",
                    "12 - 6 = 6 (left: 6 11 13)\n13 - 11 = 2 (left: 2 6)\n",
                    "13 - 12 = 1 (left: 1 6 11)\n11 - 1 = 10 (left: 6 10)\n",
                    "12 - 11 = 1 (left: 1 6 13)\n13 - 6 = 7 (left: 1 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 11 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 936,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 48549,
            "prompt_tokens": 683010,
            "cost": 0.23781660000000002
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n"
                ],
                "values": [
                    0.9937213624739663,
                    0.9345850024045873
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 8",
                "ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 * 2 = 16 (left: 4 16)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n4 + 2 = 6 (left: 6 8)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n16 / 8 = 2 (left: 2 2)\n"
                ],
                "values": [
                    0.9940548826192958,
                    0.9121121261180978,
                    0.9291540336568418,
                    0.9539936938239031,
                    0.8777968116882013,
                    0.9531677359851558
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n16 / 8 = 2 (left: 2 2)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 * 2 = 16 (left: 4 16)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 8 8",
                "ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "2 * 8 = 16 (left: 2 8 16)\n16 / 8 = 2 (left: 2 2)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 * 2 = 16 (left: 4 16)\n",
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 2 8 8",
                "ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (8 - 2) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (8 - 2) = 24"
                ]
            }
        ],
        "idx": 937,
        "ys": [
            "8 / 2 = 4 (left: 2 4 8)\n8 - 2 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 / 2) * (8 - 2) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 49583,
            "prompt_tokens": 698084,
            "cost": 0.24302397999999997
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 7 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n",
                    "12 + 13 = 25 (left: 2 7 25)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n"
                ],
                "values": [
                    0.9932028675086351,
                    0.9250164724951186,
                    0.9008044526839274,
                    0.968668244386347,
                    0.9212298982440632
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n",
                    "12 + 13 = 25 (left: 2 7 25)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 7 12 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n",
                    "12 + 13 = 25 (left: 2 7 25)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 2 7)\n2 + 1 = 3 (left: 3 7)\n",
                    "13 - 12 = 1 (left: 1 2 7)\n2 - 1 = 1 (left: 1 7)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n5 * 2 = 10 (left: 10 13)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n5 + 2 = 7 (left: 7 13)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n13 - 2 = 11 (left: 5 11)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n5 + 13 = 18 (left: 2 18)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 7 = 6 (left: 6 10)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n13 - 7 = 6 (left: 6 6)\n",
                    "12 + 13 = 25 (left: 2 7 25)\n25 - 7 = 18 (left: 2 18)\n",
                    "12 + 13 = 25 (left: 2 7 25)\n25 - 2 = 23 (left: 7 23)\n",
                    "12 + 13 = 25 (left: 2 7 25)\n7 - 2 = 5 (left: 5 25)\n"
                ],
                "values": [
                    0.9536580345246668,
                    0.8706464691695541,
                    0.8824581286821174,
                    0.9995489211828766,
                    0.8957123535362512,
                    0.9295741381746475,
                    0.9751598400138697,
                    0.9239870388771124,
                    0.9948988792296894,
                    0.9640397964511344,
                    0.9523066015417764,
                    0.9865011009502995,
                    0.9996435917071907,
                    0.9464986826857306,
                    0.9486702919146622
                ],
                "select_new_ys": [
                    "12 + 13 = 25 (left: 2 7 25)\n25 - 7 = 18 (left: 2 18)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n13 - 7 = 6 (left: 6 6)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n13 - 2 = 11 (left: 5 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 7 12 13",
                "ys": [
                    "12 + 13 = 25 (left: 2 7 25)\n25 - 7 = 18 (left: 2 18)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "12 - 2 = 10 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 / 2 = 6 (left: 6 7 13)\n13 - 7 = 6 (left: 6 6)\n",
                    "12 - 7 = 5 (left: 2 5 13)\n13 - 2 = 11 (left: 5 11)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 7 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 938,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 51184,
            "prompt_tokens": 720269,
            "cost": 0.25077503
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 6 = 6 (left: 2 6 8)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n"
                ],
                "values": [
                    0.9674057727171474,
                    0.8977434658464398,
                    0.969532151645726,
                    0.9271180576406461,
                    0.9387437348647882
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 2 4 6)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 2 4 6)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n2 * 4 = 8 (left: 6 8)\n",
                    "12 - 8 = 4 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 * 2 = 12 (left: 8 12)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 / 2 = 3 (left: 3 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 + 2 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 + 8 = 10 (left: 2 10)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n8 - 6 = 2 (left: 2 10)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n8 * 6 = 48 (left: 10 48)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n12 / 6 = 2 (left: 2 4)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n12 - 6 = 6 (left: 4 6)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n6 - 4 = 2 (left: 2 12)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n4 * 6 = 24 (left: 12 24)\n",
                    "8 / 2 = 4 (left: 4 6 12)\n6 * 4 = 24 (left: 12 24)\n"
                ],
                "values": [
                    0.9246637170176786,
                    0.9197462263021081,
                    0.9267990676958173,
                    0.949512062036986,
                    0.9485582580165494,
                    0.9829811758502861,
                    0.9603748425705743,
                    0.9683705036950011,
                    0.9789903176702788,
                    0.9665450352071352,
                    0.9857386889088258,
                    0.9566216508193979,
                    0.9989443206582126,
                    0.8947727047443329,
                    0.9837743992923913,
                    0.9117475253361553,
                    0.9779129209352867,
                    0.9368403037826559,
                    0.9514578339070244,
                    0.9281669958485925,
                    0.9390802696710369
                ],
                "select_new_ys": [
                    "12 - 2 = 10 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 + 8 = 10 (left: 2 10)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 12",
                "ys": [
                    "12 - 2 = 10 (left: 6 8 10)\n10 - 6 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 + 8 = 10 (left: 2 10)\n",
                    "12 - 2 = 10 (left: 6 8 10)\n10 - 8 = 2 (left: 2 6)\n",
                    "12 - 6 = 6 (left: 2 6 8)\n6 - 2 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 6 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 939,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 52614,
            "prompt_tokens": 740432,
            "cost": 0.25779204
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 9 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n"
                ],
                "values": [
                    0.999381831757596,
                    0.923502116950059,
                    0.9618464082906684,
                    0.9639422103492256
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 9 13",
                "ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n3 * 4 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 4 = 9 (left: 6 9)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n6 - 4 = 2 (left: 2 13)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n6 * 4 = 24 (left: 13 24)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n5 * 3 = 15 (left: 13 15)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n5 + 3 = 8 (left: 8 13)\n",
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 3 = 10 (left: 5 10)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n"
                ],
                "values": [
                    0.9898909726651293,
                    0.9205478528705852,
                    0.9519318563558503,
                    0.9588887183314336,
                    0.892752257020906,
                    0.9938668933853579,
                    0.9273270175883662,
                    0.8985616602506185,
                    0.9095084628103525,
                    0.998339353869136,
                    0.9386682101340672,
                    0.9358136868137931,
                    0.9291126559564404,
                    0.9982450513976804,
                    0.9431893661489571
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 4 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 4 6 13)\n13 - 6 = 7 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "13 - 9 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 9 13",
                "ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (13 - (9 - 4))) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (13 - (9 - 4))) = 24"
                ]
            }
        ],
        "idx": 940,
        "ys": [
            "9 - 4 = 5 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (3 * (13 - (9 - 4))) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 54101,
            "prompt_tokens": 760391,
            "cost": 0.26481667
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n",
                    "5 * 4 = 20 (left: 10 12 20)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n"
                ],
                "values": [
                    0.9681560847202505,
                    0.9265803885096816,
                    0.963458654286047,
                    0.9423379259898351,
                    0.9537053165653999
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n",
                    "5 * 4 = 20 (left: 10 12 20)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n",
                    "5 * 4 = 20 (left: 10 12 20)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 4 5)\n4 * 2 = 8 (left: 5 8)\n",
                    "12 - 10 = 2 (left: 2 4 5)\n4 * 5 = 20 (left: 2 20)\n",
                    "12 - 10 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 - 5 = 7 (left: 6 7)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n6 + 5 = 11 (left: 11 12)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n6 * 5 = 30 (left: 12 30)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 / 6 = 2 (left: 2 5)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 - 4 = 8 (left: 5 8)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n5 * 4 = 20 (left: 12 20)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n5 + 4 = 9 (left: 9 12)\n",
                    "5 * 4 = 20 (left: 10 12 20)\n20 - 12 = 8 (left: 8 10)\n",
                    "5 * 4 = 20 (left: 10 12 20)\n20 - 10 = 10 (left: 10 12)\n",
                    "5 * 4 = 20 (left: 10 12 20)\n12 - 10 = 2 (left: 2 20)\n",
                    "5 * 4 = 20 (left: 10 12 20)\n10 + 12 = 22 (left: 20 22)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 4 = 6 (left: 6 7)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n7 * 4 = 28 (left: 10 28)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n7 + 4 = 11 (left: 10 11)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n4 * 7 = 28 (left: 10 28)\n"
                ],
                "values": [
                    0.9138606820541734,
                    0.9076769040481799,
                    0.9470604524928322,
                    0.930894753764476,
                    0.9909300573564201,
                    0.9267834483065868,
                    0.9730301413764881,
                    0.9803229703649616,
                    0.9931934706538005,
                    0.9189063428412756,
                    0.9462795072522059,
                    0.9062043903738278,
                    0.9970846271424968,
                    0.9500289359457451,
                    0.9299591592370251,
                    0.9666499154909414,
                    0.9969156987297514,
                    0.9785038061883351,
                    0.9242278469649242,
                    0.8716507490204782,
                    0.9127286719667169
                ],
                "select_new_ys": [
                    "5 * 4 = 20 (left: 10 12 20)\n20 - 12 = 8 (left: 8 10)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 / 6 = 2 (left: 2 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 10 12",
                "ys": [
                    "5 * 4 = 20 (left: 10 12 20)\n20 - 12 = 8 (left: 8 10)\n",
                    "12 - 5 = 7 (left: 4 7 10)\n10 - 7 = 3 (left: 3 4)\n",
                    "10 - 5 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "10 - 4 = 6 (left: 5 6 12)\n12 / 6 = 2 (left: 2 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 5 10 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 941,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 55530,
            "prompt_tokens": 780792,
            "cost": 0.27189684000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n",
                    "11 - 1 = 10 (left: 2 7 10)\n"
                ],
                "values": [
                    0.9976599646805352,
                    0.9441586313485535,
                    0.9618842757636794
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n",
                    "11 - 1 = 10 (left: 2 7 10)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 11",
                "ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n",
                    "11 - 1 = 10 (left: 2 7 10)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 * 1 = 4 (left: 2 4)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 / 2 = 2 (left: 1 2)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "11 - 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "11 - 1 = 10 (left: 2 7 10)\n10 - 7 = 3 (left: 2 3)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 7 = 2 (left: 1 2)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 1 = 8 (left: 7 8)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 * 1 = 9 (left: 7 9)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 / 1 = 9 (left: 7 9)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n7 * 1 = 7 (left: 7 9)\n"
                ],
                "values": [
                    0.934091862647142,
                    0.9818148032243926,
                    0.9143815796931235,
                    0.9410172404820852,
                    0.9487211774500378,
                    0.9956496018912773,
                    0.9394524130094631,
                    0.9470204985311609,
                    0.9620425919032869,
                    0.923117965903268,
                    0.9220362511595559,
                    0.9228542751960898
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 1 = 8 (left: 7 8)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 7 = 2 (left: 1 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 11",
                "ys": [
                    "11 - 1 = 10 (left: 2 7 10)\n10 - 2 = 8 (left: 7 8)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 1 = 8 (left: 7 8)\n",
                    "11 - 7 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "11 - 2 = 9 (left: 1 7 9)\n9 - 7 = 2 (left: 1 2)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 7 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 942,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 56713,
            "prompt_tokens": 797721,
            "cost": 0.27776897
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 5 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 - 5 = 1 (left: 1 4 8)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n"
                ],
                "values": [
                    0.9314728738448167,
                    0.9719595011913067,
                    0.9417748145694037
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 5 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n5 - 2 = 3 (left: 3 6)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 / 2 = 3 (left: 3 5)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n2 * 5 = 10 (left: 6 10)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "6 - 5 = 1 (left: 1 4 8)\n8 - 4 = 4 (left: 1 4)\n"
                ],
                "values": [
                    0.9923046961308404,
                    0.8984880337068782,
                    0.9754763304547771,
                    0.9338719511027306,
                    0.949969228975968,
                    0.9240160129646241,
                    0.9953216871458702,
                    0.9187700504245359
                ],
                "select_new_ys": [
                    "6 - 5 = 1 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 / 2 = 3 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 5 6 8",
                "ys": [
                    "6 - 5 = 1 (left: 1 4 8)\n8 / 4 = 2 (left: 1 2)\n",
                    "8 - 6 = 2 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)\n",
                    "8 / 4 = 2 (left: 2 5 6)\n6 / 2 = 3 (left: 3 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 5 6 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 943,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 57971,
            "prompt_tokens": 815488,
            "cost": 0.28394986
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 3 6 12)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n",
                    "12 - 6 = 6 (left: 6 10 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n"
                ],
                "values": [
                    0.960816873398922,
                    0.9175600833975732,
                    0.9296824338428573,
                    0.93276200788707,
                    0.9628264336045693
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n",
                    "12 - 6 = 6 (left: 6 10 13)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 10 12 13",
                "ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n",
                    "12 - 6 = 6 (left: 6 10 13)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 6 = 7 (left: 2 7)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n6 * 2 = 12 (left: 12 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 2 = 11 (left: 6 11)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n6 / 2 = 3 (left: 3 13)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n3 * 6 = 18 (left: 12 18)\n",
                    "12 - 6 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "12 - 6 = 6 (left: 6 10 13)\n10 - 6 = 4 (left: 4 13)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n60 / 12 = 5 (left: 5 13)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n12 - 5 = 7 (left: 7 13)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n60 - 12 = 48 (left: 13 48)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n13 - 12 = 1 (left: 1 60)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n60 - 13 = 47 (left: 12 47)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n"
                ],
                "values": [
                    0.9965302618383617,
                    0.9438637567590489,
                    0.92313172120029,
                    0.9069095869351338,
                    0.9906516921930959,
                    0.9350281230868418,
                    0.9352945563131642,
                    0.9134407310077517,
                    0.9303594449605097,
                    0.9991038882029009,
                    0.9391205075335919,
                    0.9969971645013421,
                    0.9044256632587331,
                    0.8922212768385351,
                    0.9576851904075695,
                    0.9365372303567443,
                    0.9977994706405761,
                    0.9595980167039209
                ],
                "select_new_ys": [
                    "12 - 6 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n60 / 12 = 5 (left: 5 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 6 = 7 (left: 2 7)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 10 12 13",
                "ys": [
                    "12 - 6 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "13 - 6 = 7 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "6 * 10 = 60 (left: 12 13 60)\n60 / 12 = 5 (left: 5 13)\n",
                    "12 - 10 = 2 (left: 2 6 13)\n13 - 6 = 7 (left: 2 7)\n",
                    "13 - 10 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 10 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 944,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 59344,
            "prompt_tokens": 835079,
            "cost": 0.29074973
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 9 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 / 9 = 1 (left: 1 1 3)\n",
                    "1 * 3 = 3 (left: 3 9 9)\n",
                    "9 / 1 = 9 (left: 3 9 9)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n"
                ],
                "values": [
                    0.9438826358895204,
                    0.9139448925309094,
                    0.9227357591909299,
                    0.9838357541720887,
                    0.9363718493581332
                ],
                "select_new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n",
                    "9 / 1 = 9 (left: 3 9 9)\n",
                    "1 * 3 = 3 (left: 3 9 9)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 9 9",
                "ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n",
                    "9 / 1 = 9 (left: 3 9 9)\n",
                    "1 * 3 = 3 (left: 3 9 9)\n"
                ],
                "new_ys": [
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 - 3 = 6 (left: 1 6)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 3 9)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n3 - 1 = 2 (left: 1 2)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n1 + 1 = 2 (left: 2 3)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n1 * 1 = 1 (left: 1 3)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n1 * 3 = 3 (left: 1 3)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n1 + 3 = 4 (left: 1 4)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n9 - 1 = 8 (left: 6 8)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n6 - 1 = 5 (left: 5 9)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n6 * 1 = 6 (left: 6 9)\n",
                    "9 / 1 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 / 1 = 9 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n",
                    "1 * 3 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "1 * 3 = 3 (left: 3 9 9)\n9 - 3 = 6 (left: 6 9)\n"
                ],
                "values": [
                    0.9498862355630296,
                    0.9898008257692127,
                    0.9237317358414503,
                    0.9372345190712943,
                    0.9110993750976186,
                    0.9314369142486251,
                    0.9889138029111574,
                    0.979534702173538,
                    0.9698421295382447,
                    0.9500697595094854,
                    0.992325786892397,
                    0.9720890295158787,
                    0.9022637188390524,
                    0.9408524628564195,
                    0.9961065954083667,
                    0.9420729866266331,
                    0.9961203223166611,
                    0.9420703220569259
                ],
                "select_new_ys": [
                    "1 * 3 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 / 1 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n1 + 1 = 2 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 9 9",
                "ys": [
                    "1 * 3 = 3 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 / 1 = 9 (left: 3 9 9)\n9 / 3 = 3 (left: 3 9)\n",
                    "9 - 3 = 6 (left: 1 6 9)\n9 - 6 = 3 (left: 1 3)\n",
                    "9 / 3 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "9 / 9 = 1 (left: 1 1 3)\n1 + 1 = 2 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 3 9 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 945,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 60771,
            "prompt_tokens": 855298,
            "cost": 0.29777856
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 4 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n"
                ],
                "values": [
                    0.9882597768265934
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 4 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 3 7)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n"
                ],
                "values": [
                    0.9773576878382981,
                    0.9274157911341286,
                    0.985125267626238
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 3 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 4 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 4 = 3 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 1 4 7)\n4 - 1 = 3 (left: 3 7)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 4 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 * (11 - 4 - 1)) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 * (11 - 4 - 1)) = 24"
                ]
            }
        ],
        "idx": 946,
        "ys": [
            "11 - 4 = 7 (left: 1 4 7)\n7 - 1 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (4 * (11 - 4 - 1)) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 61476,
            "prompt_tokens": 865559,
            "cost": 0.30132453000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 9 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n",
                    "3 * 9 = 27 (left: 2 10 27)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n"
                ],
                "values": [
                    0.998889660882715,
                    0.9084763925181902,
                    0.941512701998064,
                    0.9450443131338588
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n",
                    "3 * 9 = 27 (left: 2 10 27)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 9 10",
                "ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n",
                    "3 * 9 = 27 (left: 2 10 27)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n6 * 2 = 12 (left: 10 12)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n6 / 2 = 3 (left: 3 10)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n5 + 3 = 8 (left: 8 9)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n9 / 3 = 3 (left: 3 5)\n",
                    "3 * 9 = 27 (left: 2 10 27)\n27 - 10 = 17 (left: 2 17)\n",
                    "3 * 9 = 27 (left: 2 10 27)\n10 - 2 = 8 (left: 8 27)\n"
                ],
                "values": [
                    0.9944905911474721,
                    0.9425214923321857,
                    0.9035294827148369,
                    0.9553799795860262,
                    0.9365068419053795,
                    0.9858351398789243,
                    0.8929462443513222,
                    0.9210883224287225,
                    0.9966715541465665,
                    0.9486857996035114
                ],
                "select_new_ys": [
                    "3 * 9 = 27 (left: 2 10 27)\n27 - 10 = 17 (left: 2 17)\n",
                    "10 - 2 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n6 / 2 = 3 (left: 3 10)\n",
                    "3 * 9 = 27 (left: 2 10 27)\n10 - 2 = 8 (left: 8 27)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 9 10",
                "ys": [
                    "3 * 9 = 27 (left: 2 10 27)\n27 - 10 = 17 (left: 2 17)\n",
                    "10 - 2 = 8 (left: 3 8 9)\n9 - 8 = 1 (left: 1 3)\n",
                    "10 / 2 = 5 (left: 3 5 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "9 - 3 = 6 (left: 2 6 10)\n6 / 2 = 3 (left: 3 10)\n",
                    "3 * 9 = 27 (left: 2 10 27)\n10 - 2 = 8 (left: 8 27)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 9 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 947,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 62908,
            "prompt_tokens": 885508,
            "cost": 0.30828596
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 3 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 2 = 11 (left: 1 3 11)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n",
                    "1 + 2 = 3 (left: 3 3 13)\n"
                ],
                "values": [
                    0.9413986445654009,
                    0.9877910477755601,
                    0.9467807236269181
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 1 2 10)\n",
                    "1 + 2 = 3 (left: 3 3 13)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 3 13",
                "ys": [
                    "13 - 3 = 10 (left: 1 2 10)\n",
                    "1 + 2 = 3 (left: 3 3 13)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n"
                ],
                "new_ys": [
                    "13 - 3 = 10 (left: 1 2 10)\n10 * 2 = 20 (left: 1 20)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 - 2 = 8 (left: 1 8)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 - 1 = 9 (left: 2 9)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n2 * 10 = 20 (left: 1 20)\n",
                    "1 + 2 = 3 (left: 3 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 1 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n3 - 1 = 2 (left: 2 11)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n1 * 3 = 3 (left: 3 11)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n3 * 1 = 3 (left: 3 11)\n"
                ],
                "values": [
                    0.9683260509436694,
                    0.9645445721224557,
                    0.9689803781556728,
                    0.967503311827778,
                    0.9333624927863805,
                    0.9986547610872212,
                    0.9975910628249031,
                    0.9651949516815572,
                    0.9007324677514377,
                    0.926586283863501,
                    0.9372104975232208
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 3 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 * 2 = 20 (left: 1 20)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 - 1 = 9 (left: 2 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 3 13",
                "ys": [
                    "1 + 2 = 3 (left: 3 3 13)\n13 - 3 = 10 (left: 3 10)\n",
                    "13 - 2 = 11 (left: 1 3 11)\n11 - 3 = 8 (left: 1 8)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 / 2 = 5 (left: 1 5)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 * 2 = 20 (left: 1 20)\n",
                    "13 - 3 = 10 (left: 1 2 10)\n10 - 1 = 9 (left: 2 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 3 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 948,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 64110,
            "prompt_tokens": 902785,
            "cost": 0.31427295
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 6 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n"
                ],
                "values": [
                    0.9741580452528382,
                    0.9323699382986006,
                    0.9379498058654718,
                    0.9640895266468206
                ],
                "select_new_ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 6 6 6",
                "ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n"
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 1 = 2 (left: 2 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 * 1 = 1 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n6 * 1 = 6 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 6 = 7 (left: 1 7)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 * 6 = 6 (left: 1 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 * 5 = 30 (left: 6 30)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 - 5 = 1 (left: 1 6)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 / 6 = 1 (left: 1 5)\n",
                    "6 - 1 = 5 (left: 5 6 6)\n6 / 5 = 1.2 (left: 1.2 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 * 6 = 36 (left: 6 36)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 + 6 = 12 (left: 6 12)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 - 6 = 0 (left: 0 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n36 / 6 = 6 (left: 1 6)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n6 * 1 = 6 (left: 6 36)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n6 - 1 = 5 (left: 5 36)\n",
                    "6 * 6 = 36 (left: 1 6 36)\n36 / 1 = 36 (left: 6 36)\n"
                ],
                "values": [
                    0.9945546403158008,
                    0.9300907793190926,
                    0.9227738578116631,
                    0.9866581043296166,
                    0.9639681737639987,
                    0.9704321316746809,
                    0.9667374043400591,
                    0.9717527876943912,
                    0.9312777140989202,
                    0.9922010544300417,
                    0.9720505954695894,
                    0.939738239828023,
                    0.994211091178547,
                    0.9982718949878504,
                    0.9123437671366095,
                    0.9226286758767028,
                    0.9569971763806995
                ],
                "select_new_ys": [
                    "6 * 6 = 36 (left: 1 6 36)\n36 / 6 = 6 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 1 = 2 (left: 2 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 * 6 = 36 (left: 6 36)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 6 = 7 (left: 1 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 6 6 6",
                "ys": [
                    "6 * 6 = 36 (left: 1 6 36)\n36 / 6 = 6 (left: 1 6)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 1 = 2 (left: 2 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 / 6 = 1 (left: 1 6)\n",
                    "6 * 1 = 6 (left: 6 6 6)\n6 * 6 = 36 (left: 6 36)\n",
                    "6 / 6 = 1 (left: 1 1 6)\n1 + 6 = 7 (left: 1 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 6 6 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 949,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 65480,
            "prompt_tokens": 921811,
            "cost": 0.32091697
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 2 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n",
                    "9 * 2 = 18 (left: 1 2 18)\n",
                    "1 + 2 = 3 (left: 2 3 9)\n"
                ],
                "values": [
                    0.932828858133186,
                    0.9458654520098281,
                    0.8983935757305626,
                    0.9331546488115974,
                    0.9458883794554107
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 3 9)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n",
                    "9 * 2 = 18 (left: 1 2 18)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 2 9",
                "ys": [
                    "1 + 2 = 3 (left: 2 3 9)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n",
                    "9 * 2 = 18 (left: 1 2 18)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n"
                ],
                "new_ys": [
                    "1 + 2 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n",
                    "1 + 2 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "1 + 2 = 3 (left: 2 3 9)\n3 * 2 = 6 (left: 6 9)\n",
                    "1 + 2 = 3 (left: 2 3 9)\n9 - 2 = 7 (left: 3 7)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 2 = 4 (left: 4 8)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 + 2 = 4 (left: 4 8)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 + 8 = 10 (left: 2 10)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n8 - 2 = 6 (left: 2 6)\n",
                    "9 * 2 = 18 (left: 1 2 18)\n18 - 2 = 16 (left: 1 16)\n",
                    "9 * 2 = 18 (left: 1 2 18)\n18 / 2 = 9 (left: 1 9)\n",
                    "9 * 2 = 18 (left: 1 2 18)\n1 * 2 = 2 (left: 2 18)\n",
                    "9 * 2 = 18 (left: 1 2 18)\n1 + 2 = 3 (left: 3 18)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n4 - 1 = 3 (left: 3 9)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n8 / 4 = 2 (left: 1 2 9)\n",
                    "2 * 2 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n7 * 1 = 7 (left: 2 7)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n7 * 2 = 14 (left: 1 14)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n2 + 1 = 3 (left: 3 7)\n"
                ],
                "values": [
                    0.993704089898463,
                    0.9762667601961397,
                    0.9440706722846611,
                    0.9416899048443995,
                    0.9683716639176979,
                    0.9789866940691966,
                    0.9461647857712419,
                    0.9764437746245204,
                    0.9584366910121468,
                    0.9440129571002054,
                    0.9607071050757785,
                    0.8915507819526617,
                    0.9162964779909019,
                    0.9679949840529454,
                    0.923204374076403,
                    0.9120019097595342,
                    0.9262201355227676,
                    0.9685909846457016,
                    0.990015973787195,
                    0.9415767164854488,
                    0.9215810726887637,
                    0.8859963430563725
                ],
                "select_new_ys": [
                    "1 + 2 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 + 8 = 10 (left: 2 10)\n",
                    "1 + 2 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 2 9",
                "ys": [
                    "1 + 2 = 3 (left: 2 3 9)\n9 - 3 = 6 (left: 2 6)\n",
                    "9 - 2 = 7 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 * 8 = 16 (left: 2 16)\n",
                    "9 - 1 = 8 (left: 2 2 8)\n2 + 8 = 10 (left: 2 10)\n",
                    "1 + 2 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 2 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 950,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 66926,
            "prompt_tokens": 942518,
            "cost": 0.32809846
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 1 3 5)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n"
                ],
                "values": [
                    0.9811636452130088,
                    0.9492056365818783,
                    0.9392807847975481
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 1 3 5)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 6 11",
                "ys": [
                    "11 - 6 = 5 (left: 1 3 5)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 1 3 5)\n5 - 1 = 4 (left: 3 4)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n6 * 1 = 6 (left: 6 8)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 / 1 = 8 (left: 6 8)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 3 = 8 (left: 5 8)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n5 * 3 = 15 (left: 11 15)\n"
                ],
                "values": [
                    0.9380052041253518,
                    0.9474579388875679,
                    0.9923442654516351,
                    0.9146898243991498,
                    0.8866632733111096,
                    0.951270542399879,
                    0.994899570999286,
                    0.9230836757965164,
                    0.942342233056183
                ],
                "select_new_ys": [
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 / 1 = 8 (left: 6 8)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n5 * 3 = 15 (left: 11 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 6 11",
                "ys": [
                    "6 - 1 = 5 (left: 3 5 11)\n11 - 5 = 6 (left: 3 6)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "11 - 3 = 8 (left: 1 6 8)\n8 / 1 = 8 (left: 6 8)\n",
                    "11 - 6 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "6 - 1 = 5 (left: 3 5 11)\n5 * 3 = 15 (left: 11 15)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 3 6 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 951,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 68196,
            "prompt_tokens": 960017,
            "cost": 0.33422019000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 3 5 12)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n",
                    "13 - 5 = 8 (left: 8 10 12)\n"
                ],
                "values": [
                    0.9526707192253103,
                    0.9235101393244586,
                    0.9532240448424528,
                    0.9389262645200317,
                    0.9724322934852575
                ],
                "select_new_ys": [
                    "13 - 5 = 8 (left: 8 10 12)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 10 12 13",
                "ys": [
                    "13 - 5 = 8 (left: 8 10 12)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n"
                ],
                "new_ys": [
                    "13 - 5 = 8 (left: 8 10 12)\n12 - 10 = 2 (left: 2 8)\n",
                    "13 - 5 = 8 (left: 8 10 12)\n10 - 8 = 2 (left: 2 12)\n",
                    "13 - 5 = 8 (left: 8 10 12)\n12 - 8 = 4 (left: 4 10)\n",
                    "13 - 5 = 8 (left: 8 10 12)\n10 + 8 = 18 (left: 12 18)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n7 * 10 = 70 (left: 13 70)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 7 = 6 (left: 6 10)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n10 - 7 = 3 (left: 3 13)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n10 + 7 = 17 (left: 13 17)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 5)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n5 - 3 = 2 (left: 2 12)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n5 * 3 = 15 (left: 12 15)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 2 = 11 (left: 5 11)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 5 = 5 (left: 1 5)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 / 5 = 2 (left: 1 2)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n5 * 1 = 5 (left: 5 10)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 1 = 9 (left: 5 9)\n"
                ],
                "values": [
                    0.9936221652357276,
                    0.9446290965573542,
                    0.9484573320118471,
                    0.8992306999845308,
                    0.9948963970218921,
                    0.8659907249208426,
                    0.9606843083365817,
                    0.9624151397572352,
                    0.9299179135487843,
                    0.9377753109834424,
                    0.981744802018828,
                    0.9095792289965572,
                    0.9434531875508889,
                    0.9995486979240392,
                    0.9307728649569219,
                    0.9971456527566198,
                    0.9544629660998972,
                    0.9269920821778356,
                    0.9290958190110064
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 5 = 5 (left: 1 5)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "13 - 5 = 8 (left: 8 10 12)\n12 - 10 = 2 (left: 2 8)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 10 12 13",
                "ys": [
                    "12 - 10 = 2 (left: 2 5 13)\n13 - 5 = 8 (left: 2 8)\n",
                    "13 - 12 = 1 (left: 1 5 10)\n10 - 5 = 5 (left: 1 5)\n",
                    "12 - 5 = 7 (left: 7 10 13)\n13 - 10 = 3 (left: 3 7)\n",
                    "13 - 5 = 8 (left: 8 10 12)\n12 - 10 = 2 (left: 2 8)\n",
                    "13 - 10 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 10 12 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 952,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 69642,
            "prompt_tokens": 980484,
            "cost": 0.34133688
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 2 = 3 (left: 3 3 6)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n"
                ],
                "values": [
                    0.9330675627465604,
                    0.9269740352810163,
                    0.9844602343035819,
                    0.9537570266103209,
                    0.9461795754203406
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n",
                    "6 / 2 = 3 (left: 3 3 6)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 6",
                "ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n",
                    "6 / 2 = 3 (left: 3 3 6)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 + 2 = 4 (left: 4 6)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 2 = 4 (left: 4 6)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 + 6 = 8 (left: 2 8)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 * 4 = 24 (left: 3 24)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 / 3 = 2 (left: 2 4)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n18 / 6 = 3 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n6 - 2 = 4 (left: 4 18)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n6 * 2 = 12 (left: 12 18)\n",
                    "6 / 2 = 3 (left: 3 3 6)\n3 * 3 = 9 (left: 6 9)\n",
                    "6 / 2 = 3 (left: 3 3 6)\n3 + 6 = 9 (left: 3 9)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n6 / 3 = 2 (left: 2 12)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "6 * 2 = 12 (left: 3 6 12)\n6 + 3 = 9 (left: 9 12)\n"
                ],
                "values": [
                    0.9790757617734783,
                    0.9446612805774509,
                    0.9428477415138349,
                    0.9882261475225138,
                    0.9661121054163802,
                    0.9817858351017301,
                    0.9454915449640706,
                    0.9784247964505067,
                    0.9457111975116582,
                    0.9661421562485735,
                    0.931799253711502,
                    0.9591807613949684,
                    0.8733780052711262,
                    0.9529003216885837,
                    0.9479930597451948,
                    0.9642769750085761,
                    0.8654597099997818
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 + 6 = 8 (left: 2 8)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n18 / 6 = 3 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n6 * 2 = 12 (left: 12 18)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 6",
                "ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 + 6 = 8 (left: 2 8)\n",
                    "6 - 2 = 4 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n18 / 6 = 3 (left: 2 3)\n",
                    "6 * 3 = 18 (left: 2 6 18)\n6 * 2 = 12 (left: 12 18)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 3 6 6",
                "ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24"
                ]
            }
        ],
        "idx": 953,
        "ys": [
            "6 / 3 = 2 (left: 2 2 6)\n2 * 6 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (6 / 3) * (2 * 6) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 71190,
            "prompt_tokens": 1002628,
            "cost": 0.34901856000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 7 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n"
                ],
                "values": [
                    0.9969268858972036,
                    0.95558731092903,
                    0.957197929624908,
                    0.9416977653462574,
                    0.950240647673895
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 7 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 6 7)\n7 - 2 = 5 (left: 5 6)\n",
                    "12 - 10 = 2 (left: 2 6 7)\n2 + 6 = 8 (left: 7 8)\n",
                    "12 - 10 = 2 (left: 2 6 7)\n6 / 2 = 3 (left: 3 7)\n",
                    "12 - 10 = 2 (left: 2 6 7)\n7 - 6 = 1 (left: 1 2)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n12 / 4 = 3 (left: 3 7)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n7 + 4 = 11 (left: 11 12)\n",
                    "10 - 6 = 4 (left: 4 7 12)\n7 - 4 = 3 (left: 3 12)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n6 * 5 = 30 (left: 10 30)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 6 = 4 (left: 4 5)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n5 + 6 = 11 (left: 10 11)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n5 + 10 = 15 (left: 6 15)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n6 + 3 = 9 (left: 9 12)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n6 * 7 = 42 (left: 10 42)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n7 - 6 = 1 (left: 1 10)\n"
                ],
                "values": [
                    0.9625912096498628,
                    0.8898463458379687,
                    0.9448554489403518,
                    0.9572059286650918,
                    0.9963533376950591,
                    0.948032976565484,
                    0.8707932236712843,
                    0.940318556301666,
                    0.9829188257737823,
                    0.9483984210580956,
                    0.9651415579084028,
                    0.9089305734007699,
                    0.9253973726328462,
                    0.9905650373391742,
                    0.9352616819721654,
                    0.9314352308820694,
                    0.9652587397628556,
                    0.8817095811307145,
                    0.993352680730992,
                    0.9755775059235784,
                    0.9199635987120177,
                    0.9122270204006523
                ],
                "select_new_ys": [
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 7 10 12",
                "ys": [
                    "10 - 6 = 4 (left: 4 7 12)\n12 - 7 = 5 (left: 4 5)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 6 = 4 (left: 4 7)\n",
                    "10 - 7 = 3 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "12 - 7 = 5 (left: 5 6 10)\n10 - 5 = 5 (left: 5 6)\n",
                    "12 - 6 = 6 (left: 6 7 10)\n10 - 7 = 3 (left: 3 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "6 7 10 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 954,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 72573,
            "prompt_tokens": 1022859,
            "cost": 0.35600223
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n"
                ],
                "values": [
                    0.9776916775922162,
                    0.9419972224366594
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 8 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 4 = 4 (left: 4 7)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 * 4 = 32 (left: 7 32)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 / 4 = 2 (left: 2 7)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n7 * 4 = 28 (left: 8 28)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n8 / 4 = 2 (left: 2 7)\n"
                ],
                "values": [
                    0.9848529202424531,
                    0.9521959838200327,
                    0.9500319898636361,
                    0.950558031314243,
                    0.955921974240298,
                    0.9360924727808962,
                    0.9767489426310317,
                    0.9199674371784738
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n7 * 4 = 28 (left: 8 28)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 4 = 4 (left: 4 7)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 / 4 = 2 (left: 2 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 8 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n7 * 4 = 28 (left: 8 28)\n",
                    "12 - 8 = 4 (left: 7 4 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 - 4 = 4 (left: 4 7)\n",
                    "12 - 8 = 4 (left: 7 8 4)\n8 / 4 = 2 (left: 2 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "7 8 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 955,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 73730,
            "prompt_tokens": 1038879,
            "cost": 0.36160033
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n",
                    "6 * 4 = 24 (left: 3 8)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n"
                ],
                "values": [
                    0.9536249174725758,
                    0.9406956833941803,
                    0.9285998262098754,
                    0.9084562888705666,
                    0.9439371490012768
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n",
                    "6 * 4 = 24 (left: 3 8)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n",
                    "6 * 4 = 24 (left: 3 8)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n4 * 2 = 8 (left: 3 8)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n8 / 4 = 2 (left: 2 2)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n8 - 4 = 4 (left: 2 4)\n",
                    "6 / 3 = 2 (left: 2 4 8)\n4 * 2 = 8 (left: 8 8)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 * 3 = 18 (left: 2 18)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 3 = 2 (left: 2 2)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "6 * 4 = 24 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "6 * 4 = 24 (left: 3 8)\n8 - 3 = 5 (left: 5)\n",
                    "6 * 4 = 24 (left: 3 8)\n3 + 8 = 11 (left: 11)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n8 * 2 = 16 (left: 3 16)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n8 - 2 = 6 (left: 3 6)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n2 * 3 = 6 (left: 6 8)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n3 * 8 = 24 (left: 2 24)\n",
                    "6 - 4 = 2 (left: 2 3 8)\n2 + 3 = 5 (left: 5 8)\n"
                ],
                "values": [
                    0.9549679762194611,
                    0.8980658832828216,
                    0.9541259285126639,
                    0.90658973390375,
                    0.9957207759223626,
                    0.9197571158522659,
                    0.9214435019690069,
                    0.9086605427709145,
                    0.9527627953982728,
                    0.9609480649122184,
                    0.925271584555196,
                    0.9303427764988744,
                    0.9945544385659425,
                    0.989403945681583,
                    0.9190871777013078,
                    0.9059981069763418,
                    0.9246673838778862,
                    0.9455506077238882,
                    0.9485114579256162,
                    0.8748556526574991,
                    0.9408919388662026
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "6 * 4 = 24 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 8",
                "ys": [
                    "6 / 3 = 2 (left: 2 4 8)\n8 / 2 = 4 (left: 4 4)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "6 * 4 = 24 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 / 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 4 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * (8 - 6) = 24",
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (3 * 4) = 24"
                ],
                "values": [
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * (8 - 6) = 24",
                    "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (3 * 4) = 24"
                ]
            }
        ],
        "idx": 956,
        "ys": [
            "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (3 * 4) * (8 - 6) = 24",
            "8 - 6 = 2 (left: 2 3 4)\n3 * 4 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (8 - 6) * (3 * 4) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 75059,
            "prompt_tokens": 1058265,
            "cost": 0.36829645000000005
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 9 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n"
                ],
                "values": [
                    0.991502481912391,
                    0.971491928526482,
                    0.9471879416175679
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 9 11",
                "ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 1 4 9)\n9 - 1 = 8 (left: 4 8)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n1 + 4 = 5 (left: 5 9)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n1 * 4 = 4 (left: 4 9)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n4 - 1 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 * 1 = 7 (left: 2 7)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n2 * 1 = 2 (left: 2 7)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n9 + 7 = 16 (left: 10 16)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n7 - (10 - 9) = 6 (left: 6 9)  \n"
                ],
                "values": [
                    0.9554989191759575,
                    0.9783917223256791,
                    0.8975006924682022,
                    0.9443525218385437,
                    0.8921987129106826,
                    0.9705342677326286,
                    0.9886534651899848,
                    0.9349657395188636,
                    0.9382608830198524,
                    0.999143439124755,
                    0.9659864917323951,
                    0.8729793335180259,
                    0.77400098595054
                ],
                "select_new_ys": [
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 9 11",
                "ys": [
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 7 = 3 (left: 3 9)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 2 = 5 (left: 1 5)\n",
                    "11 - 7 = 4 (left: 1 4 9)\n9 - 4 = 5 (left: 1 5)\n",
                    "11 - 9 = 2 (left: 1 2 7)\n7 - 1 = 6 (left: 2 6)\n",
                    "11 - 1 = 10 (left: 7 9 10)\n10 - 9 = 1 (left: 1 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 7 9 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 957,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 76361,
            "prompt_tokens": 1076893,
            "cost": 0.37475821
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 6 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n"
                ],
                "values": [
                    0.9951439809422676,
                    0.9163324374443546,
                    0.9361581022453,
                    0.9265987933255626,
                    0.9254863636396111
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n"
                ],
                "new_ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "13 - 6 = 7 (left: 2 3 7)\n3 * 7 = 21 (left: 2 21)\n",
                    "13 - 6 = 7 (left: 2 3 7)\n7 - 2 = 5 (left: 3 5)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n6 - 3 = 3 (left: 3 11)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n6 / 3 = 2 (left: 2 11)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 13 = 5 (left: 2 5)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n13 - 2 = 11 (left: 11 18)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 2 = 16 (left: 13 16)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 2 = 8 (left: 6 8)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n6 * 2 = 12 (left: 10 12)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n4 + 3 = 7 (left: 7 13)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n13 - 3 = 10 (left: 4 10)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n4 * 3 = 12 (left: 12 13)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n3 + 4 = 7 (left: 7 13)\n"
                ],
                "values": [
                    0.998163667192149,
                    0.8711727315724105,
                    0.950109222609291,
                    0.9948856994623989,
                    0.9364317607776587,
                    0.9459823103182092,
                    0.9974188082884141,
                    0.9462669521392174,
                    0.9390104669416871,
                    0.9720190066815907,
                    0.9131416027423606,
                    0.9375104770928591,
                    0.93850633222907,
                    0.9946233313814757,
                    0.8510856165184817,
                    0.9699355898074556,
                    0.918104593097421,
                    0.8776071396231054
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 13 = 5 (left: 2 5)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 6 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "3 * 6 = 18 (left: 2 13 18)\n18 - 13 = 5 (left: 2 5)\n",
                    "13 - 2 = 11 (left: 3 6 11)\n11 - 6 = 5 (left: 3 5)\n",
                    "6 - 2 = 4 (left: 3 4 13)\n13 - 4 = 9 (left: 3 9)\n",
                    "13 - 3 = 10 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 6 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 958,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 77827,
            "prompt_tokens": 1097710,
            "cost": 0.38199140000000004
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 5 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n",
                    "12 * 2 = 24 (left: 2 5 24)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n"
                ],
                "values": [
                    0.9631467546608339,
                    0.9355408351459839,
                    0.9415595025833632,
                    0.9303963493265395,
                    0.959538733826561
                ],
                "select_new_ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n",
                    "12 * 2 = 24 (left: 2 5 24)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 5 12",
                "ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n",
                    "12 * 2 = 24 (left: 2 5 24)\n"
                ],
                "new_ys": [
                    "12 / 2 = 6 (left: 2 5 6)\n5 * 6 = 30 (left: 2 30)\n",
                    "12 / 2 = 6 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n",
                    "12 / 2 = 6 (left: 2 5 6)\n5 - 2 = 3 (left: 3 6)\n",
                    "12 / 2 = 6 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "12 / 2 = 6 (left: 2 5 6)\n6 * 5 = 30 (left: 2 30)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 5 = 2 (left: 2 2)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 - 2 = 8 (left: 5 8)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 - 5 = 5 (left: 2 5)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 * 2 = 4 (left: 4 7)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 7 = 9 (left: 2 9)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "12 * 2 = 24 (left: 2 5 24)\n24 / 2 = 12 (left: 5 12)\n",
                    "12 * 2 = 24 (left: 2 5 24)\n24 / 5 = 4.8 (left: 2 4.8)\n"
                ],
                "values": [
                    0.940027475795361,
                    0.9770746987189777,
                    0.9339502762087338,
                    0.973991414069969,
                    0.924947318658801,
                    0.9778884690266902,
                    0.9577944953524402,
                    0.9228664848350439,
                    0.9700640771765797,
                    0.9942980406554185,
                    0.9163402176938883,
                    0.9339662250765717,
                    0.9468794387329063,
                    0.9592085212294766,
                    0.9327580989579405,
                    0.9845303894911959,
                    0.9953340719565796,
                    0.9364786877079845
                ],
                "select_new_ys": [
                    "12 * 2 = 24 (left: 2 5 24)\n24 / 2 = 12 (left: 5 12)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "12 / 2 = 6 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 5 12",
                "ys": [
                    "12 * 2 = 24 (left: 2 5 24)\n24 / 2 = 12 (left: 5 12)\n",
                    "5 - 2 = 3 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "12 - 5 = 7 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "12 - 2 = 10 (left: 2 5 10)\n10 / 2 = 5 (left: 5 5)\n",
                    "12 / 2 = 6 (left: 2 5 6)\n5 + 6 = 11 (left: 2 11)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 2 5 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 959,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 79285,
            "prompt_tokens": 1117630,
            "cost": 0.38897360000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 2 5 6)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n"
                ],
                "values": [
                    0.968955634422349,
                    0.9196646558491867,
                    0.9126993259809446,
                    0.9456692919961367
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 2 5 6)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 2 5 6)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n2 * 5 = 10 (left: 6 10)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 / 2 = 3 (left: 3 5)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 * 5 = 30 (left: 2 30)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)\n",
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 7 = 1 (left: 1 2)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 12 = 1 (left: 1 8)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n12 - 8 = 4 (left: 4 13)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 8 = 5 (left: 5 12)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n8 + 12 = 20 (left: 20 13)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n8 * 12 = 96 (left: 96 13)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n"
                ],
                "values": [
                    0.964820498379193,
                    0.9244960803973401,
                    0.9130862788306444,
                    0.9651438126660401,
                    0.9271886247920651,
                    0.9959863490870192,
                    0.9365440196500022,
                    0.9607595401011131,
                    0.9803160703752987,
                    0.9347748077449559,
                    0.944533215767676,
                    0.8696659090748861,
                    0.8934083636844987,
                    0.9918385006170816
                ],
                "select_new_ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 12 = 1 (left: 1 8)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 8 13",
                "ys": [
                    "13 - 6 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "8 - 2 = 6 (left: 6 6 13)\n13 - 6 = 7 (left: 6 7)\n",
                    "6 * 2 = 12 (left: 8 12 13)\n13 - 12 = 1 (left: 1 8)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 - 5 = 1 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 6 8 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 960,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 80648,
            "prompt_tokens": 1137235,
            "cost": 0.39576624999999993
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "8 8 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 8 8)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n"
                ],
                "values": [
                    0.9906373901467305,
                    0.9128126576507621,
                    0.9531262253338144,
                    0.9272108341500969,
                    0.9386203439959417
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 8 8)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "8 8 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 8 8)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 * 2 = 16 (left: 8 16)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 / 2 = 4 (left: 4 8)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n8 - 2 = 6 (left: 6 12)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n12 - 2 = 10 (left: 8 10)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 8 = 2 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 4 = 6 (left: 6 8)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n8 - 4 = 4 (left: 4 10)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 * 4 = 40 (left: 8 40)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n8 * 10 = 80 (left: 4 80)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n12 - 10 = 2 (left: 1 2)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n10 - 1 = 9 (left: 9 12)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n1 * 10 = 10 (left: 10 12)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n12 - 1 = 11 (left: 10 11)\n",
                    "8 / 8 = 1 (left: 1 10 12)\n12 / 1 = 12 (left: 10 12)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n12 - 10 = 2 (left: 2 16)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n10 - 12 = -2 (left: -2 16)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n12 + 10 = 22 (left: 16 22)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 10 = 6 (left: 6 12)\n"
                ],
                "values": [
                    0.9905190790428996,
                    0.936654604195604,
                    0.9463509443426034,
                    0.9986199889055594,
                    0.9501827773811319,
                    0.9215842719363431,
                    0.9983125611416905,
                    0.9403833299926221,
                    0.9340973906568407,
                    0.926188749887904,
                    0.8787058873872379,
                    0.9996904606084048,
                    0.9575518937159565,
                    0.9073790143431252,
                    0.9753101177587162,
                    0.9336626619086477,
                    0.9974197516311987,
                    0.9174122299314872,
                    0.9124958988806245,
                    0.9021957287765584,
                    0.9440437285527924
                ],
                "select_new_ys": [
                    "8 / 8 = 1 (left: 1 10 12)\n12 - 10 = 2 (left: 1 2)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 8 = 2 (left: 2 4)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "8 8 10 12",
                "ys": [
                    "8 / 8 = 1 (left: 1 10 12)\n12 - 10 = 2 (left: 1 2)\n",
                    "10 - 8 = 2 (left: 2 8 12)\n12 - 8 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 4 8 10)\n10 - 8 = 2 (left: 2 4)\n",
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n",
                    "12 - 10 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n4 * 10 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n4 * 10 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "8 8 10 12",
                "ys": [
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n4 * 10 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n4 * 10 = 24 (left: 24)\nAnswer: (8 + 8 - 12) * 10 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n4 * 10 = 24 (left: 24)\nAnswer: (8 + 8 - 12) * 10 = 24"
                ]
            }
        ],
        "idx": 961,
        "ys": [
            "8 + 8 = 16 (left: 10 12 16)\n16 - 12 = 4 (left: 4 10)\n4 * 10 = 24 (left: 24)\nAnswer: (8 + 8 - 12) * 10 = 24"
        ],
        "infos": [
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 82122,
            "prompt_tokens": 1157675,
            "cost": 0.40290645
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n",
                    "13 - 3 = 10 (left: 1 8 10)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n"
                ],
                "values": [
                    0.9986173169973569,
                    0.9464739700315006,
                    0.9727864157364186
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n",
                    "13 - 3 = 10 (left: 1 8 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n",
                    "13 - 3 = 10 (left: 1 8 10)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 1 = 4 (left: 3 4)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 * 1 = 5 (left: 3 5)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n3 * 5 = 15 (left: 1 15)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n12 - 3 = 9 (left: 8 9)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n8 / (12 / 3) = 2 (left: 2 12)\n",
                    "13 - 3 = 10 (left: 1 8 10)\n10 - 8 = 2 (left: 1 2)\n",
                    "13 - 3 = 10 (left: 1 8 10)\n10 - 1 = 9 (left: 8 9)\n"
                ],
                "values": [
                    0.9470727781422222,
                    0.9474578594558862,
                    0.8856538127370547,
                    0.9249160486659296,
                    0.9959804072665599,
                    0.9727454903318427,
                    0.9408590788796516,
                    0.8126214896856793,
                    0.9567427241871213,
                    0.9963505436738685
                ],
                "select_new_ys": [
                    "13 - 3 = 10 (left: 1 8 10)\n10 - 1 = 9 (left: 8 9)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8)\n",
                    "13 - 3 = 10 (left: 1 8 10)\n10 - 8 = 2 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 8 13",
                "ys": [
                    "13 - 3 = 10 (left: 1 8 10)\n10 - 1 = 9 (left: 8 9)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "13 - 1 = 12 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8)\n",
                    "13 - 3 = 10 (left: 1 8 10)\n10 - 8 = 2 (left: 1 2)\n",
                    "13 - 8 = 5 (left: 1 3 5)\n5 - 3 = 2 (left: 1 2)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 3 8 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 962,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 83396,
            "prompt_tokens": 1175598,
            "cost": 0.40914706
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ],
                "values": [
                    0.9977795893518951,
                    0.9481798353289274
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 7 10",
                "ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n3 * 4 = 12 (left: 4 12)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n6 * 4 = 24 (left: 24 7)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 6 = 1 (left: 1 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n6 - 4 = 2 (left: 2 7)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n4 + 7 = 11 (left: 6 11)\n"
                ],
                "values": [
                    0.9898891132109501,
                    0.9438501528940342,
                    0.9150842655544421,
                    0.9685923067872992,
                    0.8792049389750922,
                    0.8973835733167085,
                    0.9672180024725843,
                    0.9562890042370528,
                    0.8432651641969952
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n6 - 4 = 2 (left: 2 7)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n3 * 4 = 12 (left: 4 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 7 10",
                "ys": [
                    "10 - 7 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n6 - 4 = 2 (left: 2 7)\n",
                    "10 - 4 = 6 (left: 4 6 7)\n7 - 4 = 3 (left: 3 6)\n",
                    "10 - 7 = 3 (left: 3 4 4)\n3 * 4 = 12 (left: 4 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 4 7 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 963,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 84504,
            "prompt_tokens": 1190576,
            "cost": 0.41440992
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 7 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n",
                    "10 - 7 = 3 (left: 1 3 13)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n"
                ],
                "values": [
                    0.9936807685276434,
                    0.929422993726762,
                    0.9120304284152283,
                    0.967558406410095,
                    0.9165383069985624
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n",
                    "13 - 1 = 12 (left: 7 10 12)\n",
                    "10 - 7 = 3 (left: 1 3 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 7 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n",
                    "13 - 1 = 12 (left: 7 10 12)\n",
                    "10 - 7 = 3 (left: 1 3 13)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 * 3 = 21 (left: 1 21)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 3 6)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 / 1 = 7 (left: 3 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n9 - 7 = 2 (left: 2 13)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n7 - 3 = 4 (left: 1 4)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n7 - 1 = 6 (left: 3 6)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n7 * 3 = 21 (left: 1 21)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n7 / 1 = 7 (left: 3 7)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n10 - 7 = 3 (left: 3 12)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n12 - 7 = 5 (left: 5 10)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n7 * 10 = 70 (left: 12 70)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n12 / 10 = 1.2 (left: 1.2 7)\n",
                    "10 - 7 = 3 (left: 1 3 13)\n13 - 1 = 12 (left: 3 12)\n",
                    "10 - 7 = 3 (left: 1 3 13)\n13 - 3 = 10 (left: 1 10)\n",
                    "10 - 7 = 3 (left: 1 3 13)\n1 * 3 = 3 (left: 3 13)\n",
                    "10 - 7 = 3 (left: 1 3 13)\n3 * 1 = 3 (left: 3 13)\n",
                    "10 - 7 = 3 (left: 1 3 13)\n1 + 3 = 4 (left: 4 13)\n"
                ],
                "values": [
                    0.9978608395151027,
                    0.9180047985809998,
                    0.9870142362898616,
                    0.9637853744595848,
                    0.9944164415097386,
                    0.9201751149064683,
                    0.9971178390844169,
                    0.9565361665482474,
                    0.9816209824208664,
                    0.9666432693590037,
                    0.9975944127202317,
                    0.9597312173831318,
                    0.9308899160921184,
                    0.9180890578737009,
                    0.9372035368709221,
                    0.9835587704305069,
                    0.9789932669417658,
                    0.9054970943511229,
                    0.9331445793236715,
                    0.9162749469638017
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n7 - 3 = 4 (left: 1 4)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 3 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 7 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 3 = 4 (left: 1 4)\n",
                    "13 - 1 = 12 (left: 7 10 12)\n12 - 10 = 2 (left: 2 7)\n",
                    "13 - 10 = 3 (left: 1 3 7)  \n7 - 3 = 4 (left: 1 4)\n",
                    "10 - 1 = 9 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 10 = 3 (left: 1 3 7)\n7 - 1 = 6 (left: 3 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 7 10 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 964,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 86008,
            "prompt_tokens": 1211111,
            "cost": 0.42160877
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n"
                ],
                "values": [
                    0.9829766309647097,
                    0.9511449021881222,
                    0.9329068265230552,
                    0.97726704558727,
                    0.9133730670457393
                ],
                "select_new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 9 10 13",
                "ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n"
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n3 * 1 = 3 (left: 3 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n9 / 3 = 3 (left: 1 3 3)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n1 * 3 = 3 (left: 3 9)\n",
                    "13 - 10 = 3 (left: 1 3 9)\n9 - 1 = 8 (left: 3 8)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 + 1 = 2 (left: 2 13)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n13 - 1 = 12 (left: 1 12)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 * 1 = 1 (left: 1 13)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 * 13 = 13 (left: 1 13)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 + 13 = 14 (left: 1 14)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n13 - 9 = 4 (left: 4 9)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n9 + 9 = 18 (left: 13 18)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n9 + 13 = 22 (left: 9 22)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n9 * 13 = 117 (left: 9 117)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n10 * 8 = 80 (left: 13 80)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n10 + 8 = 18 (left: 13 18)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n10 + 13 = 23 (left: 8 23)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n12 - 10 = 2 (left: 2 9)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n12 - 9 = 3 (left: 3 10)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n10 - 9 = 1 (left: 1 12)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n12 / 10 = 1.2 (left: 1.2 9)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n10 + 9 = 19 (left: 12 19)\n"
                ],
                "values": [
                    0.9714757159136157,
                    0.9170353954688854,
                    0.9140908766906355,
                    0.914879376206127,
                    0.9751924576418214,
                    0.9213097605321561,
                    0.9404014870651926,
                    0.9923077922377321,
                    0.9821455145482069,
                    0.9749411337436376,
                    0.9986624689593372,
                    0.916139517596869,
                    0.9070973733716563,
                    0.9049561240106383,
                    0.9994695763870056,
                    0.9664030315179001,
                    0.8906697938502101,
                    0.947979539889549,
                    0.9048837027870028,
                    0.9888265183092705,
                    0.9342767801312585,
                    0.9404503124538457,
                    0.9426300379846815,
                    0.9560099599468826
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n13 - 9 = 4 (left: 4 9)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 * 1 = 1 (left: 1 13)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n12 - 10 = 2 (left: 2 9)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 * 13 = 13 (left: 1 13)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 9 10 13",
                "ys": [
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "10 - 1 = 9 (left: 9 9 13)\n13 - 9 = 4 (left: 4 9)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 * 1 = 1 (left: 1 13)\n",
                    "13 - 1 = 12 (left: 9 10 12)\n12 - 10 = 2 (left: 2 9)\n",
                    "10 - 9 = 1 (left: 1 1 13)\n1 * 13 = 13 (left: 1 13)\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24\n"
                ]
            },
            {
                "step": 3,
                "x": "1 9 10 13",
                "ys": [
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24\n"
                ],
                "new_ys": [
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (9 - 1) = 24",
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24\nAnswer: (13 - 10) * (9 - 1) = 24"
                ],
                "values": [
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (9 - 1) = 24",
                    "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24\nAnswer: (13 - 10) * (9 - 1) = 24"
                ]
            }
        ],
        "idx": 965,
        "ys": [
            "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (9 - 1) = 24",
            "9 - 1 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24\nAnswer: (13 - 10) * (9 - 1) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 87364,
            "prompt_tokens": 1230717,
            "cost": 0.42839399000000006
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 4 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 3 3 7)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n"
                ],
                "values": [
                    0.983322413431524,
                    0.9509256711938354,
                    0.9212409587577
                ],
                "select_new_ys": [
                    "11 - 4 = 7 (left: 3 3 7)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 4 11",
                "ys": [
                    "11 - 4 = 7 (left: 3 3 7)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n"
                ],
                "new_ys": [
                    "11 - 4 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n3 + 4 = 7 (left: 7 8)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 - 3 = 5 (left: 4 5)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n3 * 4 = 12 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n4 + 3 = 7 (left: 7 8)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n12 / 3 = 4 (left: 4 11)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n3 * 11 = 33 (left: 12 33)\n"
                ],
                "values": [
                    0.984626569699834,
                    0.9775158940778081,
                    0.8826790885357522,
                    0.9360666014538278,
                    0.9306863477596796,
                    0.8612453267060185,
                    0.996830816868759,
                    0.9425961897169961,
                    0.9800709415707203,
                    0.9317279429855969
                ],
                "select_new_ys": [
                    "4 * 3 = 12 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n12 / 3 = 4 (left: 4 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 4 11",
                "ys": [
                    "4 * 3 = 12 (left: 3 11 12)\n12 - 11 = 1 (left: 1 3)\n",
                    "11 - 4 = 7 (left: 3 3 7)\n7 - 3 = 4 (left: 3 4)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n11 - 3 = 8 (left: 8 12)\n",
                    "11 - 3 = 8 (left: 3 4 8)\n8 - 4 = 4 (left: 3 4)\n",
                    "4 * 3 = 12 (left: 3 11 12)\n12 / 3 = 4 (left: 4 11)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 4 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 966,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 88577,
            "prompt_tokens": 1247849,
            "cost": 0.43435392999999994
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 7 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "5 * 2 = 10 (left: 7 7 10)\n",
                    "2 * 5 = 10 (left: 7 7 10)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n",
                    "7 + 7 = 14 (left: 2 5 14)\n"
                ],
                "values": [
                    0.9460377420092928,
                    0.9129176484934911,
                    0.9239082470315756,
                    0.959421391243004,
                    0.9309168982117542
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 2 7)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n",
                    "7 + 7 = 14 (left: 2 5 14)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "2 * 5 = 10 (left: 7 7 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 7 7",
                "ys": [
                    "7 - 5 = 2 (left: 2 2 7)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n",
                    "7 + 7 = 14 (left: 2 5 14)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n",
                    "2 * 5 = 10 (left: 7 7 10)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 2 7)\n7 - 2 = 5 (left: 2 5)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 * 7 = 14 (left: 2 14)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 * 2 = 4 (left: 4 7)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n",
                    "7 + 7 = 14 (left: 2 5 14)\n14 - 5 = 9 (left: 2 9)\n",
                    "7 + 7 = 14 (left: 2 5 14)\n14 - 2 = 12 (left: 5 12)\n",
                    "7 + 7 = 14 (left: 2 5 14)\n5 - 2 = 3 (left: 3 14)\n",
                    "7 + 7 = 14 (left: 2 5 14)\n5 * 2 = 10 (left: 10 14)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 * 5 = 25 (left: 7 25)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 5 = 10 (left: 7 10)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 7 = 12 (left: 5 12)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 * 7 = 35 (left: 5 35)\n",
                    "2 * 5 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n"
                ],
                "values": [
                    0.9714270486321424,
                    0.8783037366369219,
                    0.9756433500120476,
                    0.8999248550794637,
                    0.9981973016236731,
                    0.9987792567322887,
                    0.9329933278940371,
                    0.9180272391220392,
                    0.93157480660536,
                    0.9611298369922786,
                    0.9333111490887208,
                    0.9735899843547656,
                    0.9698758698637372,
                    0.998033836390755
                ],
                "select_new_ys": [
                    "7 + 7 = 14 (left: 2 5 14)\n14 - 5 = 9 (left: 2 9)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n",
                    "2 * 5 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 7 = 12 (left: 5 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 7 7",
                "ys": [
                    "7 + 7 = 14 (left: 2 5 14)\n14 - 5 = 9 (left: 2 9)\n",
                    "5 * 2 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n",
                    "2 * 5 = 10 (left: 7 7 10)\n10 - 7 = 3 (left: 3 7)\n",
                    "7 - 5 = 2 (left: 2 2 7)\n2 + 2 = 4 (left: 4 7)\n",
                    "7 - 2 = 5 (left: 5 5 7)\n5 + 7 = 12 (left: 5 12)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 7 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 967,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 90026,
            "prompt_tokens": 1268595,
            "cost": 0.44154925000000006
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 3 3 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n",
                    "9 - 6 = 3 (left: 3 3 10)\n"
                ],
                "values": [
                    0.9878061532179617,
                    0.9837603980710345,
                    0.992692145065979,
                    0.9561496411663931,
                    0.7998005784118946
                ],
                "select_new_ys": [
                    "10 - 3 = 7 (left: 7 9 13)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n",
                    "9 - 6 = 3 (left: 3 3 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 9 10 13",
                "ys": [
                    "10 - 3 = 7 (left: 7 9 13)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n",
                    "9 - 6 = 3 (left: 3 3 10)\n"
                ],
                "new_ys": [
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n9 - 7 = 2 (left: 2 13)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 7 = 6 (left: 6 9)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n9 - 3 = 6 (left: 3 6)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n3 * 3 = 9 (left: 9 9)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n9 / 3 = 3 (left: 3 3)\n",
                    "13 - 10 = 3 (left: 3 3 9)\n3 + 3 = 6 (left: 6 9)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 3 = 7 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n4 * 3 = 12 (left: 10 12)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n3 * 4 = 12 (left: 10 12)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n6 * 10 = 60 (left: 13 60)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n6 * 13 = 78 (left: 10 78)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n6 + 10 = 16 (left: 13 16)\n",
                    "9 - 3 = 6 (left: 6 10 13)\n6 + 13 = 19 (left: 10 19)\n",
                    "9 - 6 = 3 (left: 3 3 10)\n10 - 3 = 7 (left: 3 7)\n",
                    "9 - 6 = 3 (left: 3 3 10)\n10 / 3 = 3 (left: 3 3 3)\n"
                ],
                "values": [
                    0.9934344615800274,
                    0.920944037951165,
                    0.9404566558598824,
                    0.9546437237708469,
                    0.9569775957965645,
                    0.930723308870442,
                    0.9334651480292179,
                    0.9986139641111119,
                    0.9864869425071745,
                    0.9372290649782652,
                    0.945990587207552,
                    0.9991022431807988,
                    0.9180359779514943,
                    0.9662259015299516,
                    0.9634245899559262,
                    0.9355027564607086,
                    0.9960639041194839,
                    0.9029210633915428
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n",
                    "9 - 6 = 3 (left: 3 3 10)\n10 - 3 = 7 (left: 3 7)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 3 = 7 (left: 4 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 9 10 13",
                "ys": [
                    "9 - 3 = 6 (left: 6 10 13)\n13 - 10 = 3 (left: 3 6)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 4 = 6 (left: 3 6)\n",
                    "9 - 6 = 3 (left: 3 3 10)\n10 - 3 = 7 (left: 3 7)\n",
                    "10 - 3 = 7 (left: 7 9 13)\n13 - 9 = 4 (left: 4 7)\n",
                    "13 - 9 = 4 (left: 3 4 10)\n10 - 3 = 7 (left: 4 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 9 10 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 968,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 91542,
            "prompt_tokens": 1290215,
            "cost": 0.44905425
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n"
                ],
                "values": [
                    0.9863321154546054,
                    0.9350661323643168,
                    0.9210916044450076,
                    0.9449349693962158,
                    0.9298185244973906
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 7",
                "ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n"
                ],
                "new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "7 - 3 = 4 (left: 2 4 4)\n4 - 2 = 2 (left: 2 4)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 4 = 17 (left: 2 17)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 / 2 = 10.5 (left: 4 10.5)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 / 4 = 5.25 (left: 2 5.25)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 2 = 19 (left: 4 19)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 * 3 = 9 (left: 2 9)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 * 2 = 6 (left: 3 6)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 / 3 = 1 (left: 1 2)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n2 * 3 = 6 (left: 3 6)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 2 = 10 (left: 7 10)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n7 - 2 = 5 (left: 5 12)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 10 = 2 (left: 2 2 7)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n5 - 4 = 1 (left: 1 3)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n5 * 3 = 15 (left: 4 15)\n"
                ],
                "values": [
                    0.9967230034720753,
                    0.9605231826628129,
                    0.9946603589230031,
                    0.9540317798038834,
                    0.9569553231314816,
                    0.9610444406676454,
                    0.9661406942331126,
                    0.9914523686420076,
                    0.9587661879614161,
                    0.9304221487876772,
                    0.9441722701045986,
                    0.9783521845371563,
                    0.9570723954535839,
                    0.9283241883855783,
                    0.9259778761888275,
                    0.9683546749091069,
                    0.9297596911258841,
                    0.9193295394527667
                ],
                "select_new_ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 4 = 17 (left: 2 17)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 7",
                "ys": [
                    "7 - 3 = 4 (left: 2 4 4)\n4 * 2 = 8 (left: 4 8)\n",
                    "7 * 3 = 21 (left: 2 4 21)\n21 - 4 = 17 (left: 2 17)\n",
                    "7 - 4 = 3 (left: 2 3 3)\n3 - 2 = 1 (left: 1 3)\n",
                    "4 * 3 = 12 (left: 2 7 12)\n12 - 7 = 5 (left: 2 5)\n",
                    "7 - 2 = 5 (left: 3 4 5)\n5 - 3 = 2 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 4 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 969,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 93048,
            "prompt_tokens": 1311038,
            "cost": 0.45633306
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.9923905491182803
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n"
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n4 * 4 = 16 (left: 4 16)\n",
                    "12 - 8 = 4 (left: 4 4 4)\n4 + 4 = 8 (left: 4 8)\n"
                ],
                "values": [
                    0.9948602192303581,
                    0.9503734596368253
                ],
                "select_new_ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n4 * 4 = 16 (left: 4 16)\n",
                    "12 - 8 = 4 (left: 4 4 4)\n4 + 4 = 8 (left: 4 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 8 12",
                "ys": [
                    "12 - 8 = 4 (left: 4 4 4)\n4 * 4 = 16 (left: 4 16)\n",
                    "12 - 8 = 4 (left: 4 4 4)\n4 + 4 = 8 (left: 4 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 4 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 970,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 93616,
            "prompt_tokens": 1318805,
            "cost": 0.45905495
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 6 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 6 = 4 (left: 1 2 4)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n",
                    "10 - 1 = 9 (left: 2 6 9)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n"
                ],
                "values": [
                    0.9626239607101735,
                    0.9208200595368371,
                    0.9294984617389472,
                    0.9713833942426964,
                    0.9416674848547669
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 2 6 9)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 6 10",
                "ys": [
                    "10 - 1 = 9 (left: 2 6 9)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n"
                ],
                "new_ys": [
                    "10 - 1 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "10 - 1 = 9 (left: 2 6 9)\n6 - 2 = 4 (left: 4 9)\n",
                    "10 - 1 = 9 (left: 2 6 9)\n6 / 2 = 3 (left: 3 9)\n",
                    "10 - 1 = 9 (left: 2 6 9)\n9 - 6 = 3 (left: 2 3)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n2 * 4 = 8 (left: 1 8)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 * 2 = 8 (left: 1 8)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n1 * 2 = 2 (left: 2 4)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n1 * 4 = 4 (left: 2 4)\n",
                    "10 - 6 = 4 (left: 1 2 4)\n4 - 1 = 3 (left: 2 3)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n1 + 6 = 7 (left: 7 8)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n8 - 1 = 7 (left: 6 7)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n8 / 1 = 8 (left: 6 8)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n10 / 1 = 10 (left: 4 10)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n20 - 6 = 14 (left: 1 14)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n6 - 1 = 5 (left: 5 20)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n6 * 1 = 6 (left: 6 20)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n20 / (6 - 1) = 4 (left: 4 6)\n",
                    "10 * 2 = 20 (left: 1 6 20)\n20 / (6 / 1) = 4 (left: 4 6)\n"
                ],
                "values": [
                    0.984052396324264,
                    0.9361844267652947,
                    0.9698409159302468,
                    0.9364920510753942,
                    0.9260606156330016,
                    0.864666455515623,
                    0.9028956511207008,
                    0.9819467177076924,
                    0.9201603192100901,
                    0.9907642522389591,
                    0.9182875578654462,
                    0.9760814936014583,
                    0.9390924318752877,
                    0.9839268575972485,
                    0.991577771419566,
                    0.9378564502073912,
                    0.9989442746477096,
                    0.94299483445357,
                    0.9673082139830098,
                    0.9037106882755606,
                    0.8363215688008325
                ],
                "select_new_ys": [
                    "10 * 2 = 20 (left: 1 6 20)\n20 - 6 = 14 (left: 1 14)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "10 - 1 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 6 10",
                "ys": [
                    "10 * 2 = 20 (left: 1 6 20)\n20 - 6 = 14 (left: 1 14)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "10 - 2 = 8 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "10 - 1 = 9 (left: 2 6 9)\n6 * 2 = 12 (left: 9 12)\n",
                    "6 - 2 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 6 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 971,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 95133,
            "prompt_tokens": 1339615,
            "cost": 0.46634235
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n",
                    "1 + 5 = 6 (left: 6 12 12)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n",
                    "12 - 12 = 0 (left: 0 1 5)\n"
                ],
                "values": [
                    0.9977271250335953,
                    0.931337584730321,
                    0.9259206181171195,
                    0.9767477852514098,
                    0.932947886371309
                ],
                "select_new_ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n",
                    "12 - 12 = 0 (left: 0 1 5)\n",
                    "1 + 5 = 6 (left: 6 12 12)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 12 12",
                "ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n",
                    "12 - 12 = 0 (left: 0 1 5)\n",
                    "1 + 5 = 6 (left: 6 12 12)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n"
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 5 = 6 (left: 1 6)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 * 1 = 1 (left: 1 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n5 - 1 = 4 (left: 1 4)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 * 5 = 5 (left: 1 5)\n",
                    "12 - 5 = 7 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "12 - 12 = 0 (left: 0 1 5)\n1 + 0 = 1 (left: 1 5)\n",
                    "12 - 12 = 0 (left: 0 1 5)\n5 - 1 = 4 (left: 0 4)\n",
                    "12 - 12 = 0 (left: 0 1 5)\n5 * 1 = 5 (left: 0 5)\n",
                    "12 - 12 = 0 (left: 0 1 5)\n5 - 0 = 5 (left: 1 5)\n",
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n12 / 12 = 1 (left: 1 5)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n"
                ],
                "values": [
                    0.9856517258338868,
                    0.9435806156631605,
                    0.9688176973395988,
                    0.964748100647568,
                    0.9648586662793007,
                    0.9996479266247261,
                    0.887858839100835,
                    0.9583285068510973,
                    0.9161625291537202,
                    0.9483446142298168,
                    0.980465447842916,
                    0.9903808855830297,
                    0.9789157940170762
                ],
                "select_new_ys": [
                    "12 - 5 = 7 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n12 / 12 = 1 (left: 1 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 12 12",
                "ys": [
                    "12 - 5 = 7 (left: 1 7 12)\n12 - 7 = 5 (left: 1 5)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n12 / 12 = 1 (left: 1 5)\n",
                    "12 / 12 = 1 (left: 1 1 5)\n1 + 1 = 2 (left: 2 5)\n",
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n",
                    "12 / 1 = 12 (left: 5 12 12)\n12 - 5 = 7 (left: 7 12)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "1 5 12 12",
                "ys": [
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (1 + 5)) * 12 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (1 + 5)) * 12 = 24"
                ]
            }
        ],
        "idx": 972,
        "ys": [
            "1 + 5 = 6 (left: 6 12 12)\n12 / 6 = 2 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (12 / (1 + 5)) * 12 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 96648,
            "prompt_tokens": 1361278,
            "cost": 0.47385786
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 6 6 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n"
                ],
                "values": [
                    0.9488604952392552,
                    0.9484564008522641,
                    0.9418464480367467,
                    0.9350725938795639,
                    0.9617509205968796
                ],
                "select_new_ys": [
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 / 6 = 1 (left: 1 5 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 6 6 8",
                "ys": [
                    "8 - 6 = 2 (left: 2 5 6)\n",
                    "6 / 6 = 1 (left: 1 5 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n"
                ],
                "new_ys": [
                    "8 - 6 = 2 (left: 2 5 6)\n2 * 5 = 10 (left: 6 10)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n2 * 6 = 12 (left: 5 10 12)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n6 - 2 = 4 (left: 4 5)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n5 - 2 = 3 (left: 3 6)\n",
                    "8 - 6 = 2 (left: 2 5 6)\n6 * 2 = 12 (left: 5 12)\n",
                    "6 / 6 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "6 / 6 = 1 (left: 1 5 8)\n5 - 1 = 4 (left: 4 8)\n",
                    "6 / 6 = 1 (left: 1 5 8)\n8 - 1 = 7 (left: 5 7)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 - 1 = 5 (left: 5 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 / 1 = 6 (left: 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n1 * 6 = 6 (left: 6 8)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n6 + 1 = 7 (left: 7 8)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 6 = 24 (left: 8 24)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 8 = 22 (left: 6 22)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n8 * 6 = 48 (left: 30 48)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 / 6 = 5 (left: 5 8)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n6 / 3 = 2 (left: 2 6)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n6 - 3 = 3 (left: 3 6)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n6 + 6 = 12 (left: 3 12)\n"
                ],
                "values": [
                    0.935479288045912,
                    0.8938712935884463,
                    0.9449719845056063,
                    0.897565245338146,
                    0.9120420706211154,
                    0.9960347074749499,
                    0.9362510927803098,
                    0.9335545722912431,
                    0.9907668507274205,
                    0.9436957590486305,
                    0.9202325752789557,
                    0.922118772636097,
                    0.8336598019814356,
                    0.9729254983090113,
                    0.9664898014350402,
                    0.9219366509815569,
                    0.9168126765990638,
                    0.97211038795166,
                    0.962499957901593,
                    0.9562972924692104,
                    0.8769086207355375
                ],
                "select_new_ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 6 = 24 (left: 8 24)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 8 = 22 (left: 6 22)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 6 6 8",
                "ys": [
                    "6 / 6 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "6 - 5 = 1 (left: 1 6 8)\n8 - 6 = 2 (left: 1 2)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 6 = 24 (left: 8 24)\n",
                    "8 - 5 = 3 (left: 3 6 6)\n6 * 3 = 18 (left: 6 18)\n",
                    "6 * 5 = 30 (left: 6 8 30)\n30 - 8 = 22 (left: 6 22)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 6 6 8",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 973,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 98020,
            "prompt_tokens": 1380851,
            "cost": 0.48065177000000003
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "7 7 8 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n",
                    "11 - 7 = 4 (left: 7 4 8)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n"
                ],
                "values": [
                    0.9410195325264585,
                    0.9320625717499683,
                    0.8906606428920651,
                    0.884172408409477
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n",
                    "11 - 7 = 4 (left: 7 4 8)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "7 7 8 11",
                "ys": [
                    "11 - 7 = 4 (left: 4 7 8)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n",
                    "11 - 7 = 4 (left: 7 4 8)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n4 * 7 = 28 (left: 8 28)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n8 / 4 = 2 (left: 2 7)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n8 - 4 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n8 * 4 = 32 (left: 7 32)\n",
                    "11 - 7 = 4 (left: 7 4 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 7 4 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 7 4 8)\n7 - 4 = 3 (left: 3 8)\n",
                    "11 - 7 = 4 (left: 7 4 8)\n4 * 7 = 28 (left: 8 28)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n11 - 8 = 3 (left: 0 3)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n8 - 0 = 8 (left: 8 11)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n8 + 0 = 8 (left: 8 11)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n11 - 0 = 11 (left: 8 11)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n11 + 8 = 19 (left: 0 19)\n"
                ],
                "values": [
                    0.9817134569442734,
                    0.9568024205581241,
                    0.9808291086297428,
                    0.9231307505771575,
                    0.9860127503846469,
                    0.9482591057582989,
                    0.9398830886432591,
                    0.9423312803926343,
                    0.9355278662780812,
                    0.9570931518486504,
                    0.949605584196049,
                    0.8943446947182507,
                    0.9980554017368137,
                    0.954009723351886,
                    0.9580897222122025,
                    0.9452098575572516,
                    0.9054811491313117
                ],
                "select_new_ys": [
                    "7 - 7 = 0 (left: 0 8 11)\n11 - 8 = 3 (left: 0 3)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n8 + 0 = 8 (left: 8 11)\n"
                ]
            },
            {
                "step": 2,
                "x": "7 7 8 11",
                "ys": [
                    "7 - 7 = 0 (left: 0 8 11)\n11 - 8 = 3 (left: 0 3)\n",
                    "11 - 7 = 4 (left: 7 8 4)\n8 - 7 = 1 (left: 1 4)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 4 = 4 (left: 4 7)\n",
                    "11 - 7 = 4 (left: 4 7 8)\n8 - 7 = 1 (left: 1 4)\n",
                    "7 - 7 = 0 (left: 0 8 11)\n8 + 0 = 8 (left: 8 11)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "7 7 8 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 974,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 99433,
            "prompt_tokens": 1400137,
            "cost": 0.48741329
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 3 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n"
                ],
                "values": [
                    0.9963931462080102,
                    0.9468902568334215,
                    0.9368431273603913
                ],
                "select_new_ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 3 7 10",
                "ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n"
                ],
                "new_ys": [
                    "10 - 7 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 / 3 = 1 (left: 1 1)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 / 1 = 3 (left: 3 3)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n9 / 3 = 3 (left: 3 7)\n",
                    "10 - 1 = 9 (left: 3 7 9)\n7 - 3 = 4 (left: 4 9)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n"
                ],
                "values": [
                    0.9705228765716589,
                    0.9115791445709653,
                    0.9687988106278645,
                    0.9322131538947859,
                    0.9967390414384615,
                    0.9330410613886558,
                    0.9416614508019541,
                    0.9448155625441154,
                    0.9945454695402396
                ],
                "select_new_ys": [
                    "10 - 1 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 3 7 10",
                "ys": [
                    "10 - 1 = 9 (left: 3 7 9)\n9 - 7 = 2 (left: 2 3)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 * 1 = 3 (left: 3 3)\n",
                    "10 - 7 = 3 (left: 1 3 3)\n3 - 1 = 2 (left: 2 3)\n",
                    "7 - 3 = 4 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 3 7 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 975,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 100643,
            "prompt_tokens": 1417783,
            "cost": 0.49350870999999996
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 3 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 3 = 4 (left: 3 4 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n",
                    "3 * 3 = 9 (left: 9 9 12)\n"
                ],
                "values": [
                    0.9420906544291708,
                    0.9627916108646856,
                    0.9625277483679531,
                    0.9284063810247576
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n",
                    "3 * 3 = 9 (left: 9 9 12)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 3 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n",
                    "3 * 3 = 9 (left: 9 9 12)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 + 3 = 6 (left: 3 6)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 / 3 = 1 (left: 1 3)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n12 / 3 = 4 (left: 4 6)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n6 * 3 = 18 (left: 12 18)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n12 - 6 = 6 (left: 3 6)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n12 - 3 = 9 (left: 6 9)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n9 - 5 = 4 (left: 3 4)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n4 + 9 = 13 (left: 3 13)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n3 * 4 = 12 (left: 9 12)\n",
                    "3 * 3 = 9 (left: 9 9 12)\n12 - 9 = 3 (left: 3 9)\n"
                ],
                "values": [
                    0.9979410892290607,
                    0.9508086702458989,
                    0.9469948568070401,
                    0.9955289212638211,
                    0.990561652192715,
                    0.9308611264321182,
                    0.9330084601112572,
                    0.9623775521440694,
                    0.9092490481830425,
                    0.99380595141563,
                    0.9858897817662022,
                    0.9210306287074369,
                    0.8313479923207048,
                    0.9395238694886138,
                    0.9992989491147519
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 9 9 12)\n12 - 9 = 3 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 3 9 12",
                "ys": [
                    "3 * 3 = 9 (left: 9 9 12)\n12 - 9 = 3 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 * 3 = 9 (left: 3 9)\n",
                    "12 - 9 = 3 (left: 3 3 3)\n3 - 3 = 0 (left: 0 3)\n",
                    "12 / 3 = 4 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "9 - 3 = 6 (left: 3 6 12)\n12 / 6 = 2 (left: 2 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 3 9 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 976,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 102018,
            "prompt_tokens": 1436702,
            "cost": 0.50012934
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 5 7 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n"
                ],
                "values": [
                    0.9845029034607151,
                    0.9625392090621854,
                    0.9373964759187663,
                    0.9201882717423762,
                    0.9638085342148929
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 5 7 10",
                "ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 3 5 7)\n3 * 5 = 15 (left: 7 15)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n3 - 5 = -2 (left: -2 7)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n3 + 5 = 8 (left: 7 8)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n3 * 7 = 21 (left: 5 21)\n",
                    "10 - 5 = 5 (left: 3 5 7)\n5 + 7 = 12 (left: 3 12)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 / 2 = 5 (left: 3 5)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 * 2 = 20 (left: 3 20)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 3 = 7 (left: 2 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 * 3 = 30 (left: 2 30)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n3 * 3 = 9 (left: 5 9)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n3 - 3 = 0 (left: 0 5)\n",
                    "10 - 7 = 3 (left: 3 3 5)\n3 / 3 = 1 (left: 1 5)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "10 - 3 = 7 (left: 5 7 7)\n7 + 5 = 12 (left: 7 12)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n15 - 10 = 5 (left: 5 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n15 - 7 = 8 (left: 8 10)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n10 - 7 = 3 (left: 3 15)\n"
                ],
                "values": [
                    0.9334420553373531,
                    0.9157156798459132,
                    0.9467096390627693,
                    0.931476489925857,
                    0.9458048971807291,
                    0.9922643523553281,
                    0.9628843505343454,
                    0.9352610358020933,
                    0.9702565314882737,
                    0.9374713158997205,
                    0.8978176839952519,
                    0.9513943653286959,
                    0.9579230469695185,
                    0.9468538278459457,
                    0.9293864147406664,
                    0.9975554407515754,
                    0.918032664818135,
                    0.9953577692137422,
                    0.9541588615483824,
                    0.9665372366597459
                ],
                "select_new_ys": [
                    "10 - 3 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n15 - 10 = 5 (left: 5 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 3 = 7 (left: 2 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n10 - 7 = 3 (left: 3 15)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 5 7 10",
                "ys": [
                    "10 - 3 = 7 (left: 5 7 7)\n7 - 5 = 2 (left: 2 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n15 - 10 = 5 (left: 5 7)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n",
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 3 = 7 (left: 2 7)\n",
                    "5 * 3 = 15 (left: 7 10 15)\n10 - 7 = 3 (left: 3 15)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "3 5 7 10",
                "ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - (7 - 5)) * 3 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - (7 - 5)) * 3 = 24"
                ]
            }
        ],
        "idx": 977,
        "ys": [
            "7 - 5 = 2 (left: 2 3 10)\n10 - 2 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (10 - (7 - 5)) * 3 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 103411,
            "prompt_tokens": 1456624,
            "cost": 0.50704058
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 10 12 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 4 13)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n"
                ],
                "values": [
                    0.9115284811489037,
                    0.963363954971711,
                    0.9843834650880181,
                    0.9384892996827238
                ],
                "select_new_ys": [
                    "13 - 12 = 1 (left: 1 4 10)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n",
                    "12 - 10 = 2 (left: 2 4 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 10 12 13",
                "ys": [
                    "13 - 12 = 1 (left: 1 4 10)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n",
                    "12 - 10 = 2 (left: 2 4 13)\n"
                ],
                "new_ys": [
                    "13 - 12 = 1 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n10 / 1 = 10 (left: 4 10)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n10 / 4 = 2.5 (left: 1 2.5)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n4 * 3 = 12 (left: 12 12)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n10 + 8 = 18 (left: 13 18)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n8 * 10 = 80 (left: 13 80)\n",
                    "12 - 4 = 8 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "12 - 10 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "12 - 10 = 2 (left: 2 4 13)\n13 - 2 = 11 (left: 4 11)\n"
                ],
                "values": [
                    0.9869656175217985,
                    0.9900117115401496,
                    0.9378575000268342,
                    0.9325056085203007,
                    0.9655222936646423,
                    0.9420882180567928,
                    0.8954335821669853,
                    0.9475093327054398,
                    0.9600034466134217,
                    0.9995466705959196,
                    0.961862036230268,
                    0.9243991411829103,
                    0.9092458660908977,
                    0.9411025631715106,
                    0.9798105789785801,
                    0.9528707352831094
                ],
                "select_new_ys": [
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "12 - 10 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 10 12 13",
                "ys": [
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n10 - 1 = 9 (left: 4 9)\n",
                    "13 - 12 = 1 (left: 1 4 10)\n10 - 4 = 6 (left: 1 6)\n",
                    "12 - 10 = 2 (left: 2 4 13)\n13 - 4 = 9 (left: 2 9)\n",
                    "13 - 10 = 3 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n"
                ],
                "new_ys": [
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 10 12 13",
                "ys": [
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (12 - 4) = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (12 - 4) = 24"
                ]
            }
        ],
        "idx": 978,
        "ys": [
            "12 - 4 = 8 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 10) * (12 - 4) = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 104853,
            "prompt_tokens": 1476269,
            "cost": 0.51393093
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 10 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n"
                ],
                "values": [
                    0.9971069198483044,
                    0.9610787199170817,
                    0.9668492054455636
                ],
                "select_new_ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 10 12",
                "ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n"
                ],
                "new_ys": [
                    "12 - 10 = 2 (left: 2 2 3)\n2 * 3 = 6 (left: 2 6)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 * 2 = 4 (left: 3 4)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 + 2 = 4 (left: 3 4)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 + 3 = 5 (left: 2 5)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n12 / 3 = 4 (left: 4 8)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n8 - 3 = 5 (left: 5 12)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n8 * 3 = 24 (left: 12 24)\n",
                    "10 - 2 = 8 (left: 3 8 12)\n8 / 3 = 2.666... (left: 2.666... 12)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n"
                ],
                "values": [
                    0.9929517690223786,
                    0.9180013348368257,
                    0.9706268327900294,
                    0.9929129778365297,
                    0.9976918022843456,
                    0.9727455061982672,
                    0.9277817607954785,
                    0.9202172865424895,
                    0.8380593207115806,
                    0.9951647000566213,
                    0.9831837853411791
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 * 3 = 6 (left: 2 6)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 + 3 = 5 (left: 2 5)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 10 12",
                "ys": [
                    "10 - 2 = 8 (left: 3 8 12)\n12 - 8 = 4 (left: 3 4)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 - 4 = 6 (left: 2 6)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 * 3 = 6 (left: 2 6)\n",
                    "12 - 10 = 2 (left: 2 2 3)\n2 + 3 = 5 (left: 2 5)\n",
                    "12 / 3 = 4 (left: 2 4 10)\n10 / 2 = 5 (left: 4 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 10 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 979,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 106102,
            "prompt_tokens": 1493228,
            "cost": 0.51988376
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 3 6)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "6 * 4 = 24 (left: 3 6)\n",
                    "6 * 4 = 24 (left: 3 24)\n"
                ],
                "values": [
                    0.9593193732678412,
                    0.9686181814710747,
                    0.9460820524274172,
                    0.9234402764303077
                ],
                "select_new_ys": [
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n",
                    "6 * 4 = 24 (left: 3 6)\n",
                    "6 * 4 = 24 (left: 3 24)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 6 6",
                "ys": [
                    "6 / 3 = 2 (left: 2 4 6)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n",
                    "6 * 4 = 24 (left: 3 6)\n",
                    "6 * 4 = 24 (left: 3 24)\n"
                ],
                "new_ys": [
                    "6 / 3 = 2 (left: 2 4 6)\n6 * 2 = 12 (left: 4 12)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 * 3 = 18 (left: 2 18)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 * 2 = 12 (left: 3 12)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n3 * 2 = 6 (left: 6 6)\n",
                    "6 * 4 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "6 * 4 = 24 (left: 3 6)\nNone\n",
                    "6 * 4 = 24 (left: 3 6)\n3 + 6 = 9 (left: 9)\n",
                    "6 * 4 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\n"
                ],
                "values": [
                    0.8962568039398214,
                    0.9021469139033679,
                    0.9359205480496402,
                    0.9485494844446933,
                    0.9390440117840527,
                    0.9752563244604133,
                    0.9716933894997279,
                    0.922621602085152,
                    0.9277913310987406,
                    0.9976598795949452,
                    0.03239776629735772,
                    0.9278510405117074,
                    0.9960252048189834
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "6 * 4 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 6 6",
                "ys": [
                    "6 * 4 = 24 (left: 3 6)\n3 * 6 = 18 (left: 18)\n",
                    "6 * 4 = 24 (left: 3 24)\n24 / 3 = 8 (left: 8)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 - 2 = 4 (left: 3 4)\n",
                    "6 - 4 = 2 (left: 2 3 6)\n6 / 2 = 3 (left: 3 3)\n",
                    "6 / 3 = 2 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 4 6 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 980,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 107157,
            "prompt_tokens": 1508407,
            "cost": 0.52514259
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 8 8",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "8 / 8 = 1 (left: 5 1 8)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n",
                    "8 * 5 = 40 (left: 8 8 40)\n",
                    "8 - 5 = 3 (left: 8 8 3)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n"
                ],
                "values": [
                    0.9093247523778727,
                    0.9108897934667646,
                    0.948606278756384,
                    0.9395413685124548,
                    0.9167500492024628
                ],
                "select_new_ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n",
                    "8 - 5 = 3 (left: 8 8 3)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n",
                    "8 / 8 = 1 (left: 5 1 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 8 8",
                "ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n",
                    "8 - 5 = 3 (left: 8 8 3)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n",
                    "8 / 8 = 1 (left: 5 1 8)\n"
                ],
                "new_ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n40 / 8 = 5 (left: 5 8)\n",
                    "8 * 5 = 40 (left: 8 8 40)\n8 * 8 = 64 (left: 40 64)\n",
                    "8 * 5 = 40 (left: 8 8 40)\n8 + 8 = 16 (left: 16 40)\n",
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n",
                    "8 - 5 = 3 (left: 8 8 3)\n8 / 8 = 1 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 8 8 3)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n8 / 8 = 1 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n3 * 8 = 24 (left: 8 24)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n8 - 3 = 5 (left: 5 8)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n8 + 3 = 11 (left: 8 11)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n8 / 1 = 8 (left: 5 8)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n8 - 1 = 7 (left: 5 7)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n5 + 1 = 6 (left: 6 8)\n",
                    "8 / 8 = 1 (left: 5 8 1)\n5 * 1 = 5 (left: 5 8)\n",
                    "8 / 8 = 1 (left: 5 1 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 / 8 = 1 (left: 5 1 8)\n5 - 1 = 4 (left: 4 8)\n",
                    "8 / 8 = 1 (left: 5 1 8)\n1 + 5 = 6 (left: 6 8)\n"
                ],
                "values": [
                    0.9495326667852811,
                    0.9329041041616534,
                    0.9477222079443223,
                    0.986416402057974,
                    0.9645617018726224,
                    0.9699775418331121,
                    0.9906792093840566,
                    0.9103308048571332,
                    0.9683255153384042,
                    0.9275009408065106,
                    0.9949687698472547,
                    0.9373443314868855,
                    0.9141170750872426,
                    0.8979613423927381,
                    0.9148261187685206,
                    0.9780845698703807,
                    0.9419489751206972,
                    0.9247817451247354
                ],
                "select_new_ys": [
                    "8 / 8 = 1 (left: 5 8 1)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n8 / 8 = 1 (left: 1 3)\n",
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n",
                    "8 / 8 = 1 (left: 5 1 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 8 8 3)\n8 - 3 = 5 (left: 5 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 8 8",
                "ys": [
                    "8 / 8 = 1 (left: 5 8 1)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 8 3 8)\n8 / 8 = 1 (left: 1 3)\n",
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n",
                    "8 / 8 = 1 (left: 5 1 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "8 - 5 = 3 (left: 8 8 3)\n8 - 3 = 5 (left: 5 8)\n"
                ],
                "new_ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 8 8 8",
                "ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((8 * 5) - 8) - 8 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((8 * 5) - 8) - 8 = 24"
                ]
            }
        ],
        "idx": 981,
        "ys": [
            "8 * 5 = 40 (left: 8 8 40)\n40 - 8 = 32 (left: 8 32)\n32 - 8 = 24 (left: 24)\nAnswer: ((8 * 5) - 8) - 8 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 108677,
            "prompt_tokens": 1530329,
            "cost": 0.53273353
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "6 8 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 6 4 8)\n",
                    "8 + 8 = 16 (left: 6 12 16)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n",
                    "12 / 6 = 2 (left: 2 8 8)\n"
                ],
                "values": [
                    0.9241516518301242,
                    0.8927961869329109,
                    0.9318561196927252,
                    0.9029293390804547,
                    0.9051958901591596
                ],
                "select_new_ys": [
                    "6 * 8 = 48 (left: 8 12 48)\n",
                    "12 - 8 = 4 (left: 6 4 8)\n",
                    "12 / 6 = 2 (left: 2 8 8)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n",
                    "8 + 8 = 16 (left: 6 12 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "6 8 8 12",
                "ys": [
                    "6 * 8 = 48 (left: 8 12 48)\n",
                    "12 - 8 = 4 (left: 6 4 8)\n",
                    "12 / 6 = 2 (left: 2 8 8)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n",
                    "8 + 8 = 16 (left: 6 12 16)\n"
                ],
                "new_ys": [
                    "6 * 8 = 48 (left: 8 12 48)\n48 / 12 = 4 (left: 4 8)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n12 + 8 = 20 (left: 20 48)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n48 / 8 = 6 (left: 6 12)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n12 - 8 = 4 (left: 4 48)\n",
                    "6 * 8 = 48 (left: 8 12 48)\n8 * 12 = 96 (left: 48 96)\n",
                    "12 - 8 = 4 (left: 6 4 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "12 / 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n12 / 6 = 2 (left: 1 2)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n12 - 6 = 6 (left: 1 6)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n12 - 1 = 11 (left: 6 11)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n6 * 1 = 6 (left: 6 12)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n6 - 1 = 5 (left: 5 12)\n",
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n"
                ],
                "values": [
                    0.9944436628365113,
                    0.8850120647516809,
                    0.9125926661984712,
                    0.9506164238573404,
                    0.9426752356005914,
                    0.9911606404659581,
                    0.9942460356995556,
                    0.9913828508487895,
                    0.9506791648619792,
                    0.9395157413322909,
                    0.9345366316772606,
                    0.926248026285175,
                    0.9811090435333117
                ],
                "select_new_ys": [
                    "6 * 8 = 48 (left: 8 12 48)\n48 / 12 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n12 / 6 = 2 (left: 1 2)\n",
                    "12 - 8 = 4 (left: 6 4 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "6 8 8 12",
                "ys": [
                    "6 * 8 = 48 (left: 8 12 48)\n48 / 12 = 4 (left: 4 8)\n",
                    "12 / 6 = 2 (left: 2 8 8)\n8 - 2 = 6 (left: 6 8)\n",
                    "8 / 8 = 1 (left: 1 6 12)\n12 / 6 = 2 (left: 1 2)\n",
                    "12 - 8 = 4 (left: 6 4 8)\n8 - 6 = 2 (left: 2 4)\n",
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "6 8 8 12",
                "ys": [
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 + 8 - 12) * 6 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 + 8 - 12) * 6 = 24"
                ]
            }
        ],
        "idx": 982,
        "ys": [
            "8 + 8 = 16 (left: 6 12 16)\n16 - 12 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (8 + 8 - 12) * 6 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 110314,
            "prompt_tokens": 1551370,
            "cost": 0.5402153
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 4 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n"
                ],
                "values": [
                    0.9639795304516128
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 4 9",
                "ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n"
                ],
                "new_ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n"
                ],
                "values": [
                    0.9246625647247766,
                    0.9252871501229624,
                    0.9432809462027417
                ],
                "select_new_ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 4 9",
                "ys": [
                    "9 - 3 = 6 (left: 2 4 6)\n6 / 2 = 3 (left: 3 4)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n6 - 4 = 2 (left: 2 2)\n",
                    "9 - 3 = 6 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 4 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 983,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 111024,
            "prompt_tokens": 1561203,
            "cost": 0.5436512099999999
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 6 7 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n"
                ],
                "values": [
                    0.9950257803722288,
                    0.9413661204149126
                ],
                "select_new_ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 6 7 11",
                "ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n"
                ],
                "new_ys": [
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 * 2 = 10 (left: 7 10)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 2 = 7 (left: 7 7)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 - 2 = 3 (left: 3 7)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 * 7 = 35 (left: 2 35)\n"
                ],
                "values": [
                    0.9325210487011922,
                    0.9110085794238444,
                    0.9336099369204252,
                    0.967832472155586,
                    0.9216557773395717,
                    0.9002632319177484
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 2 5 7)\n5 - 2 = 3 (left: 3 7)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 2 = 7 (left: 7 7)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 * 2 = 10 (left: 7 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 6 7 11",
                "ys": [
                    "11 - 6 = 5 (left: 2 5 7)\n5 - 2 = 3 (left: 3 7)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 2 = 7 (left: 7 7)\n",
                    "11 - 7 = 4 (left: 2 4 6)\n6 - 2 = 4 (left: 4 4)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 * 2 = 10 (left: 7 10)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 6 7 11",
                "ys": [
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 - 6 + 7) * 2 = 24",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 6 + 7) * 2 = 24"
                ],
                "values": [
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 - 6 + 7) * 2 = 24",
                    "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 6 + 7) * 2 = 24"
                ]
            }
        ],
        "idx": 984,
        "ys": [
            "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (11 - 6 + 7) * 2 = 24",
            "11 - 6 = 5 (left: 2 5 7)\n5 + 7 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: (11 - 6 + 7) * 2 = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 112165,
            "prompt_tokens": 1577437,
            "cost": 0.5492894899999999
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 9 12 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n"
                ],
                "values": [
                    0.9839589110204244,
                    0.9620790691628384,
                    0.9520438404216546,
                    0.9471019992100004,
                    0.9343429862215769
                ],
                "select_new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 9 12 12",
                "ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n"
                ],
                "new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n1 + 5 = 6 (left: 6 9)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n1 + 9 = 10 (left: 5 10)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n1 * 5 = 5 (left: 5 9)\n",
                    "12 / 12 = 1 (left: 1 5 9)\n5 + 9 = 14 (left: 1 14)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 - 4 = 8 (left: 8 12)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 / 12 = 1 (left: 1 4)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n7 + 9 = 16 (left: 12 16)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n9 + 12 = 21 (left: 7 21)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n9 - 7 = 2 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n12 / 3 = 4 (left: 4 5)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n5 * 3 = 15 (left: 12 15)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n5 + 3 = 8 (left: 8 12)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n5 + 12 = 17 (left: 3 17)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n14 - 12 = 2 (left: 2 12)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n12 + 12 = 24 (left: 14 24)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n12 / 12 = 1 (left: 1 14)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n12 - 12 = 0 (left: 0 14)\n",
                    "5 + 9 = 14 (left: 12 12 14)\n12 * 12 = 144 (left: 14 144)\n"
                ],
                "values": [
                    0.9942688519299397,
                    0.9160163503685895,
                    0.9408534995058345,
                    0.9520329458296211,
                    0.8991426153150598,
                    0.984347280702762,
                    0.9324321850163749,
                    0.9349275611228195,
                    0.989598883275305,
                    0.9665460488824592,
                    0.9393134850299846,
                    0.8930418094522028,
                    0.9356597352339214,
                    0.9871423190423888,
                    0.9348690140006833,
                    0.9120773224549673,
                    0.9328803637214212,
                    0.9281435716969152,
                    0.9460169465068878,
                    0.9328736936441214,
                    0.9520149736253605,
                    0.9618199815205972,
                    0.9149798054342185
                ],
                "select_new_ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 9 12 12",
                "ys": [
                    "12 / 12 = 1 (left: 1 5 9)\n9 - 5 = 4 (left: 1 4)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 9 = 3 (left: 3 7)\n",
                    "12 - 9 = 3 (left: 3 5 12)\n12 - 5 = 7 (left: 3 7)\n",
                    "9 - 5 = 4 (left: 4 12 12)\n12 / 4 = 3 (left: 3 12)\n",
                    "12 - 5 = 7 (left: 7 9 12)\n12 - 7 = 5 (left: 5 9)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 9 12 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 985,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 113588,
            "prompt_tokens": 1596983,
            "cost": 0.55613221
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 2 7 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n",
                    "12 - 1 = 11 (left: 2 7 11)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n"
                ],
                "values": [
                    0.9808669501741262,
                    0.9107494037871153,
                    0.940811034442569,
                    0.9623295489639647,
                    0.8350944756574841
                ],
                "select_new_ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n",
                    "12 - 1 = 11 (left: 2 7 11)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 2 7 12",
                "ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n",
                    "12 - 1 = 11 (left: 2 7 11)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n"
                ],
                "new_ys": [
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 1 = 4 (left: 2 4)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 * 2 = 10 (left: 1 10)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n12 - 7 = 5 (left: 3 5)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n7 - 3 = 4 (left: 4 12)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n7 * 3 = 21 (left: 12 21)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n7 + 3 = 10 (left: 10 12)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n12 - 3 = 9 (left: 7 9)\n",
                    "12 - 1 = 11 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n22 - 8 = 14 (left: 2 14)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n8 - 2 = 6 (left: 6 22)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n8 * 2 = 16 (left: 16 22)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n8 + 2 = 10 (left: 10 22)\n",
                    "8 + 14 = 22 (left: 2 8 22)\n22 / 2 = 11 (left: 8 11)\n"
                ],
                "values": [
                    0.9630741400677872,
                    0.9855027722463159,
                    0.9454144307644085,
                    0.9744224060655272,
                    0.9972708829820893,
                    0.9484766162952494,
                    0.9179778977496063,
                    0.9373068035156366,
                    0.9201695315617203,
                    0.9968376850430849,
                    0.9993950380601793,
                    0.9383644767154581,
                    0.9217442337410223,
                    0.896798414588286,
                    0.9439499650568155
                ],
                "select_new_ys": [
                    "8 + 14 = 22 (left: 2 8 22)\n22 - 8 = 14 (left: 2 14)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n12 - 7 = 5 (left: 3 5)\n",
                    "12 - 1 = 11 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 2 7 12",
                "ys": [
                    "8 + 14 = 22 (left: 2 8 22)\n22 - 8 = 14 (left: 2 14)\n",
                    "1 + 2 = 3 (left: 3 7 12)\n12 - 7 = 5 (left: 3 5)\n",
                    "12 - 1 = 11 (left: 2 7 11)\n11 - 7 = 4 (left: 2 4)\n",
                    "12 - 7 = 5 (left: 1 2 5)\n5 - 2 = 3 (left: 1 3)\n",
                    "12 / 2 = 6 (left: 1 6 7)\n7 - 1 = 6 (left: 6 6)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 2 7 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 986,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 115030,
            "prompt_tokens": 1617266,
            "cost": 0.5631948200000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 5 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 * 4 = 24 (left: 2 5 24)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n"
                ],
                "values": [
                    0.9505144378516974,
                    0.9404720449649878,
                    0.949159158679584,
                    0.9534823026702108,
                    0.8935015186389201
                ],
                "select_new_ys": [
                    "6 - 4 = 2 (left: 2 2 5)\n",
                    "6 * 4 = 24 (left: 2 5 24)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 5 6",
                "ys": [
                    "6 - 4 = 2 (left: 2 2 5)\n",
                    "6 * 4 = 24 (left: 2 5 24)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n"
                ],
                "new_ys": [
                    "6 - 4 = 2 (left: 2 2 5)\n2 * 5 = 10 (left: 2 10)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 * 2 = 4 (left: 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 2 = 4 (left: 4 5)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 5 = 7 (left: 2 7)\n",
                    "6 * 4 = 24 (left: 2 5 24)\n24 / 2 = 12 (left: 5 12)\n",
                    "6 * 4 = 24 (left: 2 5 24)\n24 - 5 = 19 (left: 2 19)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n3 * 4 = 12 (left: 6 12)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n6 - 4 = 2 (left: 2 3)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n3 * 6 = 18 (left: 4 18)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n4 * 6 = 24 (left: 3 24)\n",
                    "5 - 2 = 3 (left: 3 4 6)\n4 + 6 = 10 (left: 3 10)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n4 * 5 = 20 (left: 4 20)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n4 + 5 = 9 (left: 4 9)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 4 1)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n6 - 2 = 4 (left: 1 4)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n6 * 2 = 12 (left: 1 12)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n6 - 1 = 5 (left: 2 5)\n"
                ],
                "values": [
                    0.9400521244771756,
                    0.955041737984516,
                    0.9673795033683956,
                    0.9880134641902705,
                    0.9953058496013443,
                    0.9246724700901695,
                    0.9346856946769423,
                    0.9475937446755299,
                    0.9535224655943642,
                    0.913666741380417,
                    0.9220807617332422,
                    0.9326208761578377,
                    0.9631777647243642,
                    0.8914823131162357,
                    0.9638147416602527,
                    0.9266979718219074,
                    0.9339813277633111,
                    0.990063308111109,
                    0.9349871949647546
                ],
                "select_new_ys": [
                    "6 * 4 = 24 (left: 2 5 24)\n24 / 2 = 12 (left: 5 12)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 5 = 7 (left: 2 7)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 2 = 4 (left: 4 5)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 5 6",
                "ys": [
                    "6 * 4 = 24 (left: 2 5 24)\n24 / 2 = 12 (left: 5 12)\n",
                    "5 - 4 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 5 = 7 (left: 2 7)\n",
                    "6 - 4 = 2 (left: 2 2 5)\n2 + 2 = 4 (left: 4 5)\n",
                    "6 - 2 = 4 (left: 4 4 5)\n5 - 4 = 1 (left: 1 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 5 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 987,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 116460,
            "prompt_tokens": 1637980,
            "cost": 0.5703606
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 5 8 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n",
                    "5 + 5 = 10 (left: 8 10 13)\n"
                ],
                "values": [
                    0.953171960302601,
                    0.9370104934414673,
                    0.915395447352097,
                    0.9446489470546965
                ],
                "select_new_ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n",
                    "5 + 5 = 10 (left: 8 10 13)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 5 8 13",
                "ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n",
                    "5 + 5 = 10 (left: 8 10 13)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n"
                ],
                "new_ys": [
                    "13 - 8 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 10)\n",
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 8 = 5 (left: 5 10)\n",
                    "5 + 5 = 10 (left: 8 10 13)\n10 - 8 = 2 (left: 2 13)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 3 = 10 (left: 5 10)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n5 + 3 = 8 (left: 8 13)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n3 * 5 = 15 (left: 13 15)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n5 * 3 = 15 (left: 13 15)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 / 8 = 1 (left: 1 5)\n"
                ],
                "values": [
                    0.9839266528328463,
                    0.9622003531640811,
                    0.9995575597612972,
                    0.9618613607728058,
                    0.939697395503512,
                    0.9983220280600945,
                    0.8946974390572182,
                    0.9095184401826631,
                    0.9413540318914814,
                    0.9174658860543644,
                    0.9836504605142723,
                    0.9435582532262572
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 10)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 5 8 13",
                "ys": [
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 * 5 = 25 (left: 5 25)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n",
                    "13 - 8 = 5 (left: 5 5 5)\n5 + 5 = 10 (left: 5 10)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "5 5 8 13",
                "ys": [
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\n",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\n",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - (5 + 5)) * 8 = 24",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 5 - 5) * 8 = 24"
                ],
                "values": [
                    20.0,
                    20.0,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - (5 + 5)) * 8 = 24",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24",
                    "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24",
                    "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 5 - 5) * 8 = 24"
                ]
            }
        ],
        "idx": 988,
        "ys": [
            "5 + 5 = 10 (left: 8 10 13)\n13 - 10 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - (5 + 5)) * 8 = 24",
            "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n8 * 3 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24",
            "8 - 5 = 3 (left: 3 5 13)\n13 - 5 = 8 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (8 - 5) * (13 - 5) = 24",
            "13 - 5 = 8 (left: 5 8 8)\n8 - 5 = 3 (left: 3 8)\n3 * 8 = 24 (left: 24)\nAnswer: (13 - 5 - 5) * 8 = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 117942,
            "prompt_tokens": 1658806,
            "cost": 0.5776138200000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 3 3 10",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n"
                ],
                "values": [
                    0.9934600603092312,
                    0.9486822057222365,
                    0.9118436965801546,
                    0.9269934090790621,
                    0.9622578849083024
                ],
                "select_new_ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 3 3 10",
                "ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n"
                ],
                "new_ys": [
                    "10 - 2 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "10 - 2 = 8 (left: 3 3 8)\n8 / 3 = 2.6666666666666665 (left: 2.6666666666666665 3)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n10 - 2 = 8 (left: 8 9)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n10 - 9 = 1 (left: 1 2)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n10 / 2 = 5 (left: 5 9)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n6 - 2 = 4 (left: 4 10)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n5 - 3 = 2 (left: 2 3)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 5 = 8 (left: 3 8)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 * 5 = 15 (left: 3 15)\n",
                    "10 / 2 = 5 (left: 3 3 5)\n3 + 3 = 6 (left: 5 6)\n"
                ],
                "values": [
                    0.9761647397669587,
                    0.9424506059685538,
                    0.9993582590020341,
                    0.9905836664524968,
                    0.9330822214576369,
                    0.9981097024960993,
                    0.9720215624600781,
                    0.9131430251096068,
                    0.9586336800305446,
                    0.8967635885716679,
                    0.9598510360254341,
                    0.9450346925113212
                ],
                "select_new_ys": [
                    "3 * 3 = 9 (left: 2 9 10)\n10 - 2 = 8 (left: 8 9)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n10 - 9 = 1 (left: 1 2)\n",
                    "10 - 2 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 3 3 10",
                "ys": [
                    "3 * 3 = 9 (left: 2 9 10)\n10 - 2 = 8 (left: 8 9)\n",
                    "10 - 3 = 7 (left: 2 3 7)\n7 - 3 = 4 (left: 2 4)\n",
                    "3 * 3 = 9 (left: 2 9 10)\n10 - 9 = 1 (left: 1 2)\n",
                    "10 - 2 = 8 (left: 3 3 8)\n8 - 3 = 5 (left: 3 5)\n",
                    "3 + 3 = 6 (left: 2 6 10)\n10 - 6 = 4 (left: 2 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 3 3 10",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 989,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 119586,
            "prompt_tokens": 1680286,
            "cost": 0.5852218200000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "3 4 8 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 8 = 4 (left: 3 4 4)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n"
                ],
                "values": [
                    0.9645202653770975,
                    0.9230910812502179,
                    0.9702823347862036,
                    0.9241568112225864
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 3 4 12)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "3 4 8 12",
                "ys": [
                    "8 - 4 = 4 (left: 3 4 12)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n"
                ],
                "new_ys": [
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n3 * 4 = 12 (left: 12 12)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 - 4 = 8 (left: 3 8)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n4 + 3 = 7 (left: 7 12)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 + 4 = 8 (left: 3 8)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 + 3 = 7 (left: 4 7)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 - 3 = 9 (left: 2 9)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 - 2 = 10 (left: 3 10)\n",
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 2 = 6 (left: 3 6)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4 4)\n"
                ],
                "values": [
                    0.9638031700343715,
                    0.977887996698676,
                    0.9361674554236955,
                    0.9530428799845354,
                    0.9085294988715963,
                    0.9898896933154974,
                    0.9318892283268505,
                    0.9360541133201836,
                    0.9519722900997382,
                    0.9402524576707144,
                    0.9911714322142103,
                    0.9104138701999446,
                    0.9391332983154201,
                    0.9298205333274739,
                    0.9725037140800371,
                    0.9321180750648469
                ],
                "select_new_ys": [
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n"
                ]
            },
            {
                "step": 2,
                "x": "3 4 8 12",
                "ys": [
                    "8 / 4 = 2 (left: 2 3 12)\n12 / 3 = 4 (left: 2 4)\n",
                    "12 - 8 = 4 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 4 = 3 (left: 3 3)\n",
                    "12 / 3 = 4 (left: 4 4 8)\n8 - 4 = 4 (left: 4 4)\n",
                    "8 - 4 = 4 (left: 3 4 12)\n12 / 3 = 4 (left: 4 4)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "3 4 8 12",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 990,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 120953,
            "prompt_tokens": 1699724,
            "cost": 0.59197378
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 6 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n",
                    "6 - 2 = 4 (left: 4 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n"
                ],
                "values": [
                    0.9605530873738672,
                    0.9344782429999035,
                    0.9059829457295091,
                    0.9185385182352992,
                    0.9313029835134845
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n",
                    "6 - 2 = 4 (left: 4 4 11)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 6 11",
                "ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n",
                    "6 - 2 = 4 (left: 4 4 11)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n"
                ],
                "new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "11 - 6 = 5 (left: 2 4 5)\n5 - 4 = 1 (left: 2 1)\n",
                    "6 - 2 = 4 (left: 4 4 11)\n11 - 4 = 7 (left: 4 7)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n7 - 2 = 5 (left: 5 6)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n6 - 2 = 4 (left: 4 7)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n7 - 6 = 1 (left: 1 2)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n6 * 2 = 12 (left: 7 12)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n12 - 11 = 1 (left: 1 4)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n12 / 4 = 3 (left: 3 11)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n11 - 4 = 7 (left: 7 12)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n11 - 2 = 9 (left: 2 9)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n2 * 2 = 4 (left: 4 11)\n",
                    "6 - 4 = 2 (left: 2 2 11)\n2 * 11 = 22 (left: 2 22)\n"
                ],
                "values": [
                    0.9928562532533635,
                    0.8779006230255052,
                    0.9702156459836255,
                    0.9624600207839596,
                    0.9237162151897401,
                    0.9637401728351999,
                    0.9350343875202812,
                    0.9918314946454154,
                    0.9267925759614913,
                    0.9682726580394484,
                    0.9529192163453704,
                    0.9297245249574393,
                    0.8539094614984021
                ],
                "select_new_ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n12 - 11 = 1 (left: 1 4)\n",
                    "6 - 2 = 4 (left: 4 4 11)\n11 - 4 = 7 (left: 4 7)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n11 - 4 = 7 (left: 7 12)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n7 - 6 = 1 (left: 1 2)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 6 11",
                "ys": [
                    "11 - 6 = 5 (left: 2 4 5)\n5 - 2 = 3 (left: 3 4)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n12 - 11 = 1 (left: 1 4)\n",
                    "6 - 2 = 4 (left: 4 4 11)\n11 - 4 = 7 (left: 4 7)\n",
                    "6 * 2 = 12 (left: 4 11 12)\n11 - 4 = 7 (left: 7 12)\n",
                    "11 - 4 = 7 (left: 2 6 7)\n7 - 6 = 1 (left: 1 2)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 4 6 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 991,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 122438,
            "prompt_tokens": 1720210,
            "cost": 0.5991385
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 2 8 9",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n"
                ],
                "values": [
                    0.9968123370155983
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 2 8 9",
                "ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n"
                ],
                "new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 / 2 = 4 (left: 4 7)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 7 = 1 (left: 1 2)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 * 2 = 16 (left: 7 16)\n"
                ],
                "values": [
                    0.9366155463127398,
                    0.9819257893743782,
                    0.9409562949374186,
                    0.9864381684454296,
                    0.9476057708389644
                ],
                "select_new_ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 7 = 1 (left: 1 2)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 * 2 = 16 (left: 7 16)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 / 2 = 4 (left: 4 7)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 2 8 9",
                "ys": [
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 7 = 1 (left: 1 2)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 - 2 = 6 (left: 6 7)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 * 2 = 16 (left: 7 16)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n8 / 2 = 4 (left: 4 7)\n",
                    "9 - 2 = 7 (left: 2 7 8)\n7 - 2 = 5 (left: 5 8)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 2 8 9",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 992,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 123396,
            "prompt_tokens": 1733751,
            "cost": 0.60384837
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "1 5 6 7",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n"
                ],
                "values": [
                    0.9889456275063819
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "1 5 6 7",
                "ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n"
                ],
                "new_ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n1 + 2 = 3 (left: 3 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 * 1 = 6 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n1 * 2 = 2 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 - 1 = 5 (left: 2 5)\n"
                ],
                "values": [
                    0.9487677587545132,
                    0.9153402038459604,
                    0.9358009317177186,
                    0.9323769367284515,
                    0.9083533317453067
                ],
                "select_new_ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 * 1 = 6 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n1 * 2 = 2 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n1 + 2 = 3 (left: 3 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 - 1 = 5 (left: 2 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "1 5 6 7",
                "ys": [
                    "7 - 5 = 2 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 * 1 = 6 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n1 * 2 = 2 (left: 2 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n1 + 2 = 3 (left: 3 6)\n",
                    "7 - 5 = 2 (left: 1 2 6)\n6 - 1 = 5 (left: 2 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "1 5 6 7",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 993,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 124385,
            "prompt_tokens": 1746911,
            "cost": 0.6084894700000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "5 8 10 11",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n",
                    "11 - 8 = 3 (left: 3 5 10)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n"
                ],
                "values": [
                    0.9803519738624047,
                    0.9377899325859387,
                    0.9527909888060508,
                    0.9504820249942344,
                    0.9485306035134885
                ],
                "select_new_ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n",
                    "11 - 8 = 3 (left: 3 5 10)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n"
                ]
            },
            {
                "step": 1,
                "x": "5 8 10 11",
                "ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n",
                    "11 - 8 = 3 (left: 3 5 10)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n"
                ],
                "new_ys": [
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 5 = 6 (left: 6 8)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n8 - 5 = 3 (left: 3 11)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n8 + 5 = 13 (left: 11 13)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n11 - 5 = 6 (left: 6 8)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n11 - 8 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n8 - 5 = 3 (left: 3 11)\n",
                    "11 - 8 = 3 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n",
                    "11 - 8 = 3 (left: 3 5 10)\n5 * 3 = 15 (left: 10 15)\n",
                    "11 - 8 = 3 (left: 3 5 10)\n10 / 5 = 2 (left: 2 3)\n",
                    "11 - 8 = 3 (left: 3 5 10)\n10 - 3 = 7 (left: 5 7)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 2 = 9 (left: 5 9)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n5 * 2 = 10 (left: 10 11)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n1 * 5 = 5 (left: 5 8)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n5 - 1 = 4 (left: 4 8)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n5 + 1 = 6 (left: 6 8)\n"
                ],
                "values": [
                    0.9858007521822253,
                    0.9840359558779375,
                    0.9553491577158079,
                    0.8955882763929722,
                    0.9410036189856836,
                    0.9933636355492077,
                    0.9215395185641458,
                    0.9992120869873518,
                    0.9158328545892122,
                    0.9421770269661053,
                    0.9356209818946079,
                    0.9948452767488084,
                    0.9328678003741085,
                    0.9125476850324871,
                    0.9960062418985561,
                    0.9005069222329525,
                    0.9343726663595929,
                    0.8459940834627874
                ],
                "select_new_ys": [
                    "11 - 8 = 3 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n11 - 8 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n"
                ]
            },
            {
                "step": 2,
                "x": "5 8 10 11",
                "ys": [
                    "11 - 8 = 3 (left: 3 5 10)\n10 - 5 = 5 (left: 3 5)\n",
                    "11 - 10 = 1 (left: 1 5 8)\n8 - 5 = 3 (left: 1 3)\n",
                    "10 - 8 = 2 (left: 2 5 11)\n11 - 5 = 6 (left: 2 6)\n",
                    "10 - 5 = 5 (left: 5 8 11)  \n11 - 8 = 3 (left: 3 5)\n",
                    "10 - 5 = 5 (left: 5 8 11)\n11 - 8 = 3 (left: 3 5)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "5 8 10 11",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 994,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 125941,
            "prompt_tokens": 1768731,
            "cost": 0.61609247
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n"
                ],
                "values": [
                    0.9890257902528139,
                    0.9470429096148463,
                    0.8888075038876616,
                    0.9640731827001787
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 4 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 * 4 = 16 (left: 3 16)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 - 3 = 1 (left: 1 4)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 / 4 = 1 (left: 1 3)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n5 * 4 = 20 (left: 12 20)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 4 = 8 (left: 5 8)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 / 4 = 3 (left: 3 5)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 5 = 4 (left: 4 4)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n4 * 3 = 12 (left: 9 12)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n16 - 12 = 4 (left: 4 9)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n16 - 9 = 7 (left: 7 12)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n12 + 9 = 21 (left: 16 21)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n12 + 16 = 28 (left: 9 28)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n12 - 9 = 3 (left: 3 16)\n"
                ],
                "values": [
                    0.9872890934409286,
                    0.9004004177491394,
                    0.9718065189721384,
                    0.9507995509856435,
                    0.9932841431440925,
                    0.9279840167196193,
                    0.9314704273449046,
                    0.9311432971354056,
                    0.9946723948654426,
                    0.9843301996080821,
                    0.8564100542031567,
                    0.9352891954702629,
                    0.9904844141521669,
                    0.9252037010705728,
                    0.9460079186583246,
                    0.9074962139927407,
                    0.9375800638699382
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n16 - 12 = 4 (left: 4 9)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 4 9 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 4 = 5 (left: 3 5)\n",
                    "9 - 4 = 5 (left: 4 5 12)\n12 - 5 = 7 (left: 4 7)\n",
                    "4 * 4 = 16 (left: 9 12 16)\n16 - 12 = 4 (left: 4 9)\n",
                    "12 - 9 = 3 (left: 3 4 4)\n4 * 3 = 12 (left: 4 12)\n",
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 4 9 12",
                "ys": [
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - (12 / 4)) * 4 = 24"
                ],
                "values": [
                    20.0
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - (12 / 4)) * 4 = 24"
                ]
            }
        ],
        "idx": 995,
        "ys": [
            "12 / 4 = 3 (left: 3 4 9)\n9 - 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (9 - (12 / 4)) * 4 = 24"
        ],
        "infos": [
            {
                "r": 1
            }
        ],
        "usage_so_far": {
            "completion_tokens": 127372,
            "prompt_tokens": 1788515,
            "cost": 0.62300825
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 5 6 6",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "6 - 5 = 1 (left: 1 2 6)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n"
                ],
                "values": [
                    0.926312926241796,
                    0.9684334570448629,
                    0.951524120909979
                ],
                "select_new_ys": [
                    "6 / 2 = 3 (left: 3 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 5 6 6",
                "ys": [
                    "6 / 2 = 3 (left: 3 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n"
                ],
                "new_ys": [
                    "6 / 2 = 3 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n5 * 6 = 30 (left: 3 30)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n3 + 5 = 8 (left: 6 8)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n5 + 6 = 11 (left: 3 11)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n5 + 6 = 11 (left: 11 12)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n6 * 5 = 30 (left: 12 30)\n",
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 5 = 7 (left: 6 7)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 * 2 = 12 (left: 1 12)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 - 2 = 4 (left: 1 4)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n"
                ],
                "values": [
                    0.9729546093992929,
                    0.9394370517036168,
                    0.8919478183318856,
                    0.9648543689891231,
                    0.9253823189433842,
                    0.9943974881945894,
                    0.9332498386305336,
                    0.9110592618352681,
                    0.9235723967136981,
                    0.9664105247633006,
                    0.9345036016651861,
                    0.9862619021750996
                ],
                "select_new_ys": [
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 * 2 = 12 (left: 1 12)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 5 6 6",
                "ys": [
                    "6 * 2 = 12 (left: 5 6 12)\n12 - 6 = 6 (left: 5 6)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 / 2 = 3 (left: 1 3)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n5 * 3 = 15 (left: 6 15)\n",
                    "6 - 5 = 1 (left: 1 2 6)\n6 * 2 = 12 (left: 1 12)\n",
                    "6 / 2 = 3 (left: 3 5 6)\n6 - 5 = 1 (left: 1 3)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "2 5 6 6",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 996,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 128605,
            "prompt_tokens": 1806582,
            "cost": 0.6292426400000001
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "2 4 9 12",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n"
                ],
                "values": [
                    0.9540805587969409,
                    0.9846773190815128
                ],
                "select_new_ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n"
                ]
            },
            {
                "step": 1,
                "x": "2 4 9 12",
                "ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n"
                ],
                "new_ys": [
                    "12 / 4 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n2 * 3 = 6 (left: 6 9)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n3 * 2 = 6 (left: 6 9)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 - 2 = 7 (left: 3 7)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 * 2 = 18 (left: 3 18)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 2 = 8 (left: 3 8)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 4 = 8 (left: 3 8)\n"
                ],
                "values": [
                    0.9331060328135331,
                    0.9310871916515701,
                    0.92559584225719,
                    0.9500035698380214,
                    0.9031833532212038,
                    0.9607143760284844,
                    0.9239162289805336,
                    0.9503484653865726,
                    0.9330975357945648,
                    0.8785490615463853
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 - 2 = 7 (left: 3 7)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n"
                ]
            },
            {
                "step": 2,
                "x": "2 4 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 - 2 = 2 (left: 2 3)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 - 2 = 7 (left: 3 7)\n",
                    "12 / 4 = 3 (left: 2 3 9)\n9 / 3 = 3 (left: 2 3)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ]
            },
            {
                "step": 3,
                "x": "2 4 9 12",
                "ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\n",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n"
                ],
                "new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (4 * (12 - 9)) = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 * (12 - 9)) = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * (12 - 9)) * 4 = 24"
                ],
                "values": [
                    0.001,
                    20.0,
                    20.0
                ],
                "select_new_ys": [
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 * (12 - 9)) = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * (12 - 9)) * 4 = 24",
                    "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (4 * (12 - 9)) = 24"
                ]
            }
        ],
        "idx": 997,
        "ys": [
            "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n2 * 12 = 24 (left: 24)\nAnswer: 2 * (4 * (12 - 9)) = 24",
            "12 - 9 = 3 (left: 2 3 4)\n2 * 3 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (2 * (12 - 9)) * 4 = 24",
            "12 - 9 = 3 (left: 2 3 4)\n4 * 3 = 12 (left: 2 12)\n12 * 2 = 24 (left: 24)\nAnswer: (12 * 2) * (4 * (12 - 9)) = 24"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 129669,
            "prompt_tokens": 1822532,
            "cost": 0.63471954
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 8 11 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "11 - 8 = 3 (left: 4 13 3)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n",
                    "8 * 4 = 32 (left: 11 13 32)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n"
                ],
                "values": [
                    0.9328017049980268,
                    0.9389444755222963,
                    0.9387571408228155,
                    0.9417143642241679,
                    0.9176297707344854
                ],
                "select_new_ys": [
                    "8 * 4 = 32 (left: 11 13 32)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 8 11 13",
                "ys": [
                    "8 * 4 = 32 (left: 11 13 32)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n"
                ],
                "new_ys": [
                    "8 * 4 = 32 (left: 11 13 32)\n32 - 13 = 19 (left: 11 19)\n",
                    "8 * 4 = 32 (left: 11 13 32)\n11 + 13 = 24 (left: 24 32)\n",
                    "8 * 4 = 32 (left: 11 13 32)\n13 + 11 = 24 (left: 24 32)\n",
                    "8 * 4 = 32 (left: 11 13 32)\n32 - 11 = 21 (left: 13 21)\n",
                    "8 * 4 = 32 (left: 11 13 32)\n32 - 21 = 11 (left: 11 11 13)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n11 - 9 = 2 (left: 2 8)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n11 - 8 = 3 (left: 3 9)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n8 + 9 = 17 (left: 11 17)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n13 - 8 = 5 (left: 5 7)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n13 - 7 = 6 (left: 6 8)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n8 + 7 = 15 (left: 13 15)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n8 * 7 = 56 (left: 13 56)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n8 + 13 = 21 (left: 7 21)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n13 - 4 = 9 (left: 3 9)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n13 - 3 = 10 (left: 4 10)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n4 * 3 = 12 (left: 12 13)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n4 + 3 = 7 (left: 7 13)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n13 - 11 = 2 (left: 2 4)\n",
                    "8 - 4 = 4 (left: 4 11 13)\n11 - 4 = 7 (left: 7 13)\n"
                ],
                "values": [
                    0.9971593927517002,
                    0.9360183303283411,
                    0.8855007774906631,
                    0.9795551191331137,
                    0.8849878180927196,
                    0.9963533043192586,
                    0.9690433029429478,
                    0.9254762860557324,
                    0.9956180062012872,
                    0.9439172495071124,
                    0.9203387395303767,
                    0.9744648991285498,
                    0.9506093652057819,
                    0.9971519156162414,
                    0.9434737257340103,
                    0.9429274548502106,
                    0.9285018359258648,
                    0.9982399059022866,
                    0.9364500319830368
                ],
                "select_new_ys": [
                    "8 - 4 = 4 (left: 4 11 13)\n13 - 11 = 2 (left: 2 4)\n",
                    "8 * 4 = 32 (left: 11 13 32)\n32 - 13 = 19 (left: 11 19)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n13 - 4 = 9 (left: 3 9)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n11 - 9 = 2 (left: 2 8)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n13 - 8 = 5 (left: 5 7)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 8 11 13",
                "ys": [
                    "8 - 4 = 4 (left: 4 11 13)\n13 - 11 = 2 (left: 2 4)\n",
                    "8 * 4 = 32 (left: 11 13 32)\n32 - 13 = 19 (left: 11 19)\n",
                    "11 - 8 = 3 (left: 4 13 3)\n13 - 4 = 9 (left: 3 9)\n",
                    "13 - 4 = 9 (left: 8 11 9)\n11 - 9 = 2 (left: 2 8)\n",
                    "11 - 4 = 7 (left: 8 13 7)\n13 - 8 = 5 (left: 5 7)\n"
                ],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            },
            {
                "step": 3,
                "x": "4 8 11 13",
                "ys": [],
                "new_ys": [],
                "values": [],
                "select_new_ys": []
            }
        ],
        "idx": 998,
        "ys": [],
        "infos": [],
        "usage_so_far": {
            "completion_tokens": 131130,
            "prompt_tokens": 1842864,
            "cost": 0.64181628
        }
    },
    {
        "steps": [
            {
                "step": 0,
                "x": "4 9 10 13",
                "ys": [
                    ""
                ],
                "new_ys": [
                    "13 - 10 = 3 (left: 4 9 3)\n",
                    "13 - 9 = 4 (left: 4 4 10)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n"
                ],
                "values": [
                    0.9547352896244687,
                    0.9339666477973825,
                    0.9097897070966937,
                    0.961263550805506,
                    0.9685177058549987
                ],
                "select_new_ys": [
                    "10 - 4 = 6 (left: 6 9 13)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n",
                    "13 - 9 = 4 (left: 4 4 10)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n"
                ]
            },
            {
                "step": 1,
                "x": "4 9 10 13",
                "ys": [
                    "10 - 4 = 6 (left: 6 9 13)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n",
                    "13 - 9 = 4 (left: 4 4 10)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n"
                ],
                "new_ys": [
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n13 - 10 = 3 (left: 3 5)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n13 - 5 = 8 (left: 8 10)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n10 - 5 = 5 (left: 5 13)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 4 = 5 (left: 3 5)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 3 = 6 (left: 4 6)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 * 3 = 27 (left: 4 27)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 * 4 = 36 (left: 3 36)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 / 3 = 3 (left: 3 4)\n",
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n",
                    "13 - 9 = 4 (left: 4 4 10)\n4 * 4 = 16 (left: 10 16)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 / 13 = 3 (left: 3 9)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n13 - 9 = 4 (left: 4 40)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n9 * 13 = 117 (left: 40 117)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 9 = 31 (left: 13 31)\n"
                ],
                "values": [
                    0.9966086844063601,
                    0.9963498841409764,
                    0.963452637903632,
                    0.9731678533333046,
                    0.9921963500798935,
                    0.9764390388196715,
                    0.8700870365438254,
                    0.9156048837157116,
                    0.9318455804442449,
                    0.997912957447513,
                    0.8921415078615031,
                    0.9791533051423157,
                    0.9091930247193576,
                    0.9592210308407899,
                    0.8959950944856069,
                    0.935251760229082
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n13 - 10 = 3 (left: 3 5)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 4 = 5 (left: 3 5)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n"
                ]
            },
            {
                "step": 2,
                "x": "4 9 10 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n",
                    "9 - 4 = 5 (left: 5 10 13)\n13 - 10 = 3 (left: 3 5)\n",
                    "13 - 10 = 3 (left: 4 9 3)\n9 - 4 = 5 (left: 3 5)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n9 * 27 = 243 (left: 243)\n"
                ],
                "values": [
                    1.0,
                    1.0,
                    1.0
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n9 * 27 = 243 (left: 243)\n"
                ]
            },
            {
                "step": 3,
                "x": "4 9 10 13",
                "ys": [
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\n",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n9 * 27 = 243 (left: 243)\n"
                ],
                "new_ys": [
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (10 - 4) = 24",
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (10 - 4) = 24",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n9 * 27 = 243 (left: 243)\nAnswer: (4 * 10 - 13) * 9 = 243"
                ],
                "values": [
                    20.0,
                    20.0,
                    0.001
                ],
                "select_new_ys": [
                    "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (10 - 4) = 24",
                    "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (10 - 4) = 24",
                    "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n9 * 27 = 243 (left: 243)\nAnswer: (4 * 10 - 13) * 9 = 243"
                ]
            }
        ],
        "idx": 999,
        "ys": [
            "13 - 9 = 4 (left: 4 4 10)\n10 - 4 = 6 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (10 - 4) = 24",
            "10 - 4 = 6 (left: 6 9 13)\n13 - 9 = 4 (left: 4 6)\n4 * 6 = 24 (left: 24)\nAnswer: (13 - 9) * (10 - 4) = 24",
            "4 * 10 = 40 (left: 9 13 40)\n40 - 13 = 27 (left: 9 27)\n9 * 27 = 243 (left: 243)\nAnswer: (4 * 10 - 13) * 9 = 243"
        ],
        "infos": [
            {
                "r": 1
            },
            {
                "r": 1
            },
            {
                "r": 0
            }
        ],
        "usage_so_far": {
            "completion_tokens": 132707,
            "prompt_tokens": 1864507,
            "cost": 0.64939459
        }
    }
]